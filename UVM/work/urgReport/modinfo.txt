===============================================================================
Module : npu_interface
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 32.22 --     --      32.22 --     --     

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/tb/tb/npu_interface.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
 32.22 --     --      32.22 --     --     npu_tb.npu_vif 



-------------------------------------------------------------------------------
Toggle Coverage for Module : npu_interface
                Total Covered Percent 
Totals          43    10      23.26   
Total Bits      450   145     32.22   
Total Bits 0->1 225   73      32.44   
Total Bits 1->0 225   72      32.00   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          41  8   19.51  
Signal Bits      446 141 31.61  
Signal Bits 0->1 223 71  31.84  
Signal Bits 1->0 223 70  31.39  

Port Details
     Toggle Toggle 1->0 Toggle 0->1 Direction 
clk  Yes    Yes         Yes         INPUT     
rstn Yes    Yes         Yes         INPUT     

Signal Details
                     Toggle Toggle 1->0 Toggle 0->1 
wr_sop_weight        Yes    Yes         Yes         
wr_eop_weight        Yes    Yes         Yes         
wr_vld_weight        Yes    Yes         Yes         
wr_data_weight[31:0] Yes    Yes         Yes         
wr_sop_data          Yes    Yes         Yes         
wr_eop_data          Yes    Yes         Yes         
wr_vld_data          Yes    Yes         Yes         
wr_data_data[31:0]   Yes    Yes         Yes         
save_finish          No     No          Yes         
rd_sop_0             No     No          No          
rd_sop_1             No     No          No          
rd_sop_2             No     No          No          
rd_sop_3             No     No          No          
rd_sop_4             No     No          No          
rd_sop_5             No     No          No          
rd_sop_6             No     No          No          
rd_sop_7             No     No          No          
rd_eop_0             No     No          No          
rd_eop_1             No     No          No          
rd_eop_2             No     No          No          
rd_eop_3             No     No          No          
rd_eop_4             No     No          No          
rd_eop_5             No     No          No          
rd_eop_6             No     No          No          
rd_eop_7             No     No          No          
rd_vld_0             No     No          No          
rd_vld_1             No     No          No          
rd_vld_2             No     No          No          
rd_vld_3             No     No          No          
rd_vld_4             No     No          No          
rd_vld_5             No     No          No          
rd_vld_6             No     No          No          
rd_vld_7             No     No          No          
rd_data_0[15:0]      No     No          No          
rd_data_1[15:0]      No     No          No          
rd_data_2[15:0]      No     No          No          
rd_data_3[15:0]      No     No          No          
rd_data_4[15:0]      No     No          No          
rd_data_5[15:0]      No     No          No          
rd_data_6[15:0]      No     No          No          
rd_data_7[15:0]      No     No          No          


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.npu_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 32.22 --     --      32.22 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 32.22 --     --      32.22 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 32.22 --     --      32.22 --     --     npu_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : result_ram
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 51.70  73.33   0.00  85.62 --      47.83 

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/rtl/result_ram.v

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                                     
 46.30  73.33   0.00  64.05 --      47.83 npu_tb.u_NPU.pe_result_cache.result_ram2 
 47.77  73.33   0.00  69.93 --      47.83 npu_tb.u_NPU.pe_result_cache.result_ram0 
 48.10  73.33   0.00  71.24 --      47.83 npu_tb.u_NPU.pe_result_cache.result_ram1 
 48.26  73.33   0.00  71.90 --      47.83 npu_tb.u_NPU.pe_result_cache.result_ram4 
 48.26  73.33   0.00  71.90 --      47.83 npu_tb.u_NPU.pe_result_cache.result_ram5 
 50.06  73.33   0.00  79.08 --      47.83 npu_tb.u_NPU.pe_result_cache.result_ram7 
 50.47  73.33   0.00  80.72 --      47.83 npu_tb.u_NPU.pe_result_cache.result_ram3 
 51.45  73.33   0.00  84.64 --      47.83 npu_tb.u_NPU.pe_result_cache.result_ram6 



-------------------------------------------------------------------------------
Line Coverage for Module : result_ram

             Line No.   Total   Covered  Percent
TOTAL                       45       33    73.33
ALWAYS             47       18       18   100.00
ALWAYS             70        5        4    80.00
ALWAYS             79        5        4    80.00
ALWAYS             88        5        4    80.00
ALWAYS             97       12        3    25.00

46                      always@(posedge clk or negedge rst_n)begin
47         1/1              if(~rst_n)begin
48         1/1                  mem[0] <= 16'd0;
49         1/1                  mem[1] <= 16'd0;
50         1/1                  mem[2] <= 16'd0;
51         1/1                  mem[3] <= 16'd0;
52         1/1                  mem[4] <= 16'd0;
53         1/1                  mem[5] <= 16'd0;
54         1/1                  mem[6] <= 16'd0;
55         1/1                  mem[7] <= 16'd0;
56                          end
57         1/1              else if(save_sop)begin
58         1/1                  mem[0] <= data0;
59         1/1                  mem[1] <= data1;
60         1/1                  mem[2] <= data2;
61         1/1                  mem[3] <= data3;
62         1/1                  mem[4] <= data4;
63         1/1                  mem[5] <= data5;
64         1/1                  mem[6] <= data6;
65         1/1                  mem[7] <= data7;
66                          end
                        MISSING_ELSE
67                      end
68                      
69                      always@(posedge clk or negedge rst_n)begin
70         1/1              if(~rst_n)
71         1/1                  addr_point <= 3'd0;
72         1/1              else if(rd_vld)
73         0/1     ==>          addr_point <= addr_point + 1'b1;
74                          else
75         1/1                  addr_point <= 3'd0; 
76                      end
77                      
78                      always@(posedge clk or negedge rst_n)begin
79         1/1              if(~rst_n)
80         1/1                  rd_vld <= 1'd0;
81         1/1              else if(rd_sop || rd_eop)
82         0/1     ==>          rd_vld <= ~rd_vld;
83                          else
84         1/1                  rd_vld <= rd_vld; 
85                      end
86                      
87                      always@(posedge clk or negedge rst_n)begin
88         1/1              if(~rst_n)
89         1/1                  rd_eop <= 1'd0;
90         1/1              else if(addr_point == 8'd6)
91         0/1     ==>          rd_eop <= 1'b1;
92                          else
93         1/1                  rd_eop <= 1'b0; 
94                      end
95                      
96                      always@(*)begin
97         1/1              if(~rst_n)
98         1/1                  rd_data <= 16'd0;
99         1/1              else if(rd_vld)begin
100        0/1     ==>          case(addr_point)
101        0/1     ==>              8'd0:rd_data = mem[0]; 
102        0/1     ==>              8'd1:rd_data = mem[1]; 
103        0/1     ==>              8'd2:rd_data = mem[2]; 
104        0/1     ==>              8'd3:rd_data = mem[3]; 
105        0/1     ==>              8'd4:rd_data = mem[4]; 
106        0/1     ==>              8'd5:rd_data = mem[5]; 
107        0/1     ==>              8'd6:rd_data = mem[6]; 
108        0/1     ==>              8'd7:rd_data = mem[7]; 
                   ==>  MISSING_DEFAULT
109                             endcase
110                         end
                        MISSING_ELSE

-------------------------------------------------------------------------------
Cond Coverage for Module : result_ram

               Total   Covered  Percent
Conditions          3        0     0.00
Logical             3        0     0.00
Non-Logical         0        0
Event               0        0

 LINE       81
 EXPRESSION (rd_sop || rd_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Not Covered
 0   1  Not Covered
 1   0  Not Covered

-------------------------------------------------------------------------------
Toggle Coverage for Module : result_ram
                Total Covered Percent 
Totals          16    11      68.75   
Total Bits      306   262     85.62   
Total Bits 0->1 153   131     85.62   
Total Bits 1->0 153   131     85.62   

                              
Ports          15  11  73.33  
Port Bits      300 262 87.33  
Port Bits 0->1 150 131 87.33  
Port Bits 1->0 150 131 87.33  

                            
Signals          1 0 0.00   
Signal Bits      6 0 0.00   
Signal Bits 0->1 3 0 0.00   
Signal Bits 1->0 3 0 0.00   

Port Details
              Toggle Toggle 1->0 Toggle 0->1 Direction 
clk           Yes    Yes         Yes         INPUT     
rst_n         Yes    Yes         Yes         INPUT     
save_sop      Yes    Yes         Yes         INPUT     
data0[15:0]   Yes    Yes         Yes         INPUT     
data1[15:0]   Yes    Yes         Yes         INPUT     
data2[15:0]   Yes    Yes         Yes         INPUT     
data3[15:0]   Yes    Yes         Yes         INPUT     
data4[15:0]   Yes    Yes         Yes         INPUT     
data5[15:0]   Yes    Yes         Yes         INPUT     
data6[15:0]   Yes    Yes         Yes         INPUT     
data7[15:0]   Yes    Yes         Yes         INPUT     
rd_sop        No     No          No          INPUT     
rd_eop        No     No          No          OUTPUT    
rd_vld        No     No          No          OUTPUT    
rd_data[15:0] No     No          No          OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
addr_point[2:0] No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Module : result_ram
         Line No. Total Covered Percent 
Branches          23    11      47.83   
IF       47       3     3       100.00  
IF       70       3     2       66.67   
IF       79       3     2       66.67   
IF       88       3     2       66.67   
IF       97       11    2       18.18   


47             if(~rst_n)begin
               -1-  
48                 mem[0] <= 16'd0;
                   ==>
49                 mem[1] <= 16'd0;
50                 mem[2] <= 16'd0;
51                 mem[3] <= 16'd0;
52                 mem[4] <= 16'd0;
53                 mem[5] <= 16'd0;
54                 mem[6] <= 16'd0;
55                 mem[7] <= 16'd0;
56             end
57             else if(save_sop)begin
                    -2-  
58                 mem[0] <= data0;
                   ==>
59                 mem[1] <= data1;
60                 mem[2] <= data2;
61                 mem[3] <= data3;
62                 mem[4] <= data4;
63                 mem[5] <= data5;
64                 mem[6] <= data6;
65                 mem[7] <= data7;
66             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


70             if(~rst_n)
               -1-  
71                 addr_point <= 3'd0;
                   ==>
72             else if(rd_vld)
                    -2-  
73                 addr_point <= addr_point + 1'b1;
                   ==>
74             else
75                 addr_point <= 3'd0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


79             if(~rst_n)
               -1-  
80                 rd_vld <= 1'd0;
                   ==>
81             else if(rd_sop || rd_eop)
                    -2-  
82                 rd_vld <= ~rd_vld;
                   ==>
83             else
84                 rd_vld <= rd_vld; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


88             if(~rst_n)
               -1-  
89                 rd_eop <= 1'd0;
                   ==>
90             else if(addr_point == 8'd6)
                    -2-  
91                 rd_eop <= 1'b1;
                   ==>
92             else
93                 rd_eop <= 1'b0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


97             if(~rst_n)
               -1-  
98                 rd_data <= 16'd0;
                   ==>
99             else if(rd_vld)begin
                    -2-  
100                case(addr_point)
                   -3-  
101                    8'd0:rd_data = mem[0]; 
                       ==>
102                    8'd1:rd_data = mem[1]; 
                       ==>
103                    8'd2:rd_data = mem[2]; 
                       ==>
104                    8'd3:rd_data = mem[3]; 
                       ==>
105                    8'd4:rd_data = mem[4]; 
                       ==>
106                    8'd5:rd_data = mem[5]; 
                       ==>
107                    8'd6:rd_data = mem[6]; 
                       ==>
108                    8'd7:rd_data = mem[7]; 
                       ==>
                       MISSING_DEFAULT
                       ==>
109                endcase
110            end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-             Status      
1   -   -               Covered     
0   1   8'b0            Not Covered 
0   1   8'b1            Not Covered 
0   1   8'd2            Not Covered 
0   1   8'd3            Not Covered 
0   1   8'd4            Not Covered 
0   1   8'd5            Not Covered 
0   1   8'd6            Not Covered 
0   1   8'd7            Not Covered 
0   1   MISSING_DEFAULT Not Covered 
0   0   -               Covered     


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_result_cache.result_ram2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 46.30  73.33   0.00  64.05 --      47.83 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 46.30  73.33   0.00  64.05 --      47.83 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 51.70  73.33   0.00  85.62 --      47.83 result_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 75.23 --     --      75.23 --     --     pe_result_cache 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram2

             Line No.   Total   Covered  Percent
TOTAL                       45       33    73.33
ALWAYS             47       18       18   100.00
ALWAYS             70        5        4    80.00
ALWAYS             79        5        4    80.00
ALWAYS             88        5        4    80.00
ALWAYS             97       12        3    25.00

46                      always@(posedge clk or negedge rst_n)begin
47         1/1              if(~rst_n)begin
48         1/1                  mem[0] <= 16'd0;
49         1/1                  mem[1] <= 16'd0;
50         1/1                  mem[2] <= 16'd0;
51         1/1                  mem[3] <= 16'd0;
52         1/1                  mem[4] <= 16'd0;
53         1/1                  mem[5] <= 16'd0;
54         1/1                  mem[6] <= 16'd0;
55         1/1                  mem[7] <= 16'd0;
56                          end
57         1/1              else if(save_sop)begin
58         1/1                  mem[0] <= data0;
59         1/1                  mem[1] <= data1;
60         1/1                  mem[2] <= data2;
61         1/1                  mem[3] <= data3;
62         1/1                  mem[4] <= data4;
63         1/1                  mem[5] <= data5;
64         1/1                  mem[6] <= data6;
65         1/1                  mem[7] <= data7;
66                          end
                        MISSING_ELSE
67                      end
68                      
69                      always@(posedge clk or negedge rst_n)begin
70         1/1              if(~rst_n)
71         1/1                  addr_point <= 3'd0;
72         1/1              else if(rd_vld)
73         0/1     ==>          addr_point <= addr_point + 1'b1;
74                          else
75         1/1                  addr_point <= 3'd0; 
76                      end
77                      
78                      always@(posedge clk or negedge rst_n)begin
79         1/1              if(~rst_n)
80         1/1                  rd_vld <= 1'd0;
81         1/1              else if(rd_sop || rd_eop)
82         0/1     ==>          rd_vld <= ~rd_vld;
83                          else
84         1/1                  rd_vld <= rd_vld; 
85                      end
86                      
87                      always@(posedge clk or negedge rst_n)begin
88         1/1              if(~rst_n)
89         1/1                  rd_eop <= 1'd0;
90         1/1              else if(addr_point == 8'd6)
91         0/1     ==>          rd_eop <= 1'b1;
92                          else
93         1/1                  rd_eop <= 1'b0; 
94                      end
95                      
96                      always@(*)begin
97         1/1              if(~rst_n)
98         1/1                  rd_data <= 16'd0;
99         1/1              else if(rd_vld)begin
100        0/1     ==>          case(addr_point)
101        0/1     ==>              8'd0:rd_data = mem[0]; 
102        0/1     ==>              8'd1:rd_data = mem[1]; 
103        0/1     ==>              8'd2:rd_data = mem[2]; 
104        0/1     ==>              8'd3:rd_data = mem[3]; 
105        0/1     ==>              8'd4:rd_data = mem[4]; 
106        0/1     ==>              8'd5:rd_data = mem[5]; 
107        0/1     ==>              8'd6:rd_data = mem[6]; 
108        0/1     ==>              8'd7:rd_data = mem[7]; 
                   ==>  MISSING_DEFAULT
109                             endcase
110                         end
                        MISSING_ELSE

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram2

               Total   Covered  Percent
Conditions          3        0     0.00
Logical             3        0     0.00
Non-Logical         0        0
Event               0        0

 LINE       81
 EXPRESSION (rd_sop || rd_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Not Covered
 0   1  Not Covered
 1   0  Not Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram2
                Total Covered Percent 
Totals          16    5       31.25   
Total Bits      306   196     64.05   
Total Bits 0->1 153   114     74.51   
Total Bits 1->0 153   82      53.59   

                              
Ports          15  5   33.33  
Port Bits      300 196 65.33  
Port Bits 0->1 150 114 76.00  
Port Bits 1->0 150 82  54.67  

                            
Signals          1 0 0.00   
Signal Bits      6 0 0.00   
Signal Bits 0->1 3 0 0.00   
Signal Bits 1->0 3 0 0.00   

Port Details
              Toggle Toggle 1->0 Toggle 0->1 Direction 
clk           Yes    Yes         Yes         INPUT     
rst_n         Yes    Yes         Yes         INPUT     
save_sop      Yes    Yes         Yes         INPUT     
data0[7:0]    Yes    Yes         Yes         INPUT     
data0[15:8]   No     No          No          INPUT     
data1[8:0]    Yes    Yes         Yes         INPUT     
data1[15:9]   No     No          Yes         INPUT     
data2[6:0]    Yes    Yes         Yes         INPUT     
data2[15:7]   No     No          Yes         INPUT     
data3[6:0]    Yes    Yes         Yes         INPUT     
data3[15:7]   No     No          No          INPUT     
data4[2:0]    Yes    Yes         Yes         INPUT     
data4[3]      No     No          Yes         INPUT     
data4[6:4]    Yes    Yes         Yes         INPUT     
data4[7]      No     No          Yes         INPUT     
data4[8]      Yes    Yes         Yes         INPUT     
data4[15:9]   No     No          Yes         INPUT     
data5[8:0]    Yes    Yes         Yes         INPUT     
data5[15:9]   No     No          Yes         INPUT     
data6[15:0]   Yes    Yes         Yes         INPUT     
data7[15:0]   Yes    Yes         Yes         INPUT     
rd_sop        No     No          No          INPUT     
rd_eop        No     No          No          OUTPUT    
rd_vld        No     No          No          OUTPUT    
rd_data[15:0] No     No          No          OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
addr_point[2:0] No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram2
         Line No. Total Covered Percent 
Branches          23    11      47.83   
IF       47       3     3       100.00  
IF       70       3     2       66.67   
IF       79       3     2       66.67   
IF       88       3     2       66.67   
IF       97       11    2       18.18   


47             if(~rst_n)begin
               -1-  
48                 mem[0] <= 16'd0;
                   ==>
49                 mem[1] <= 16'd0;
50                 mem[2] <= 16'd0;
51                 mem[3] <= 16'd0;
52                 mem[4] <= 16'd0;
53                 mem[5] <= 16'd0;
54                 mem[6] <= 16'd0;
55                 mem[7] <= 16'd0;
56             end
57             else if(save_sop)begin
                    -2-  
58                 mem[0] <= data0;
                   ==>
59                 mem[1] <= data1;
60                 mem[2] <= data2;
61                 mem[3] <= data3;
62                 mem[4] <= data4;
63                 mem[5] <= data5;
64                 mem[6] <= data6;
65                 mem[7] <= data7;
66             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


70             if(~rst_n)
               -1-  
71                 addr_point <= 3'd0;
                   ==>
72             else if(rd_vld)
                    -2-  
73                 addr_point <= addr_point + 1'b1;
                   ==>
74             else
75                 addr_point <= 3'd0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


79             if(~rst_n)
               -1-  
80                 rd_vld <= 1'd0;
                   ==>
81             else if(rd_sop || rd_eop)
                    -2-  
82                 rd_vld <= ~rd_vld;
                   ==>
83             else
84                 rd_vld <= rd_vld; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


88             if(~rst_n)
               -1-  
89                 rd_eop <= 1'd0;
                   ==>
90             else if(addr_point == 8'd6)
                    -2-  
91                 rd_eop <= 1'b1;
                   ==>
92             else
93                 rd_eop <= 1'b0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


97             if(~rst_n)
               -1-  
98                 rd_data <= 16'd0;
                   ==>
99             else if(rd_vld)begin
                    -2-  
100                case(addr_point)
                   -3-  
101                    8'd0:rd_data = mem[0]; 
                       ==>
102                    8'd1:rd_data = mem[1]; 
                       ==>
103                    8'd2:rd_data = mem[2]; 
                       ==>
104                    8'd3:rd_data = mem[3]; 
                       ==>
105                    8'd4:rd_data = mem[4]; 
                       ==>
106                    8'd5:rd_data = mem[5]; 
                       ==>
107                    8'd6:rd_data = mem[6]; 
                       ==>
108                    8'd7:rd_data = mem[7]; 
                       ==>
                       MISSING_DEFAULT
                       ==>
109                endcase
110            end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-             Status      
1   -   -               Covered     
0   1   8'b0            Not Covered 
0   1   8'b1            Not Covered 
0   1   8'd2            Not Covered 
0   1   8'd3            Not Covered 
0   1   8'd4            Not Covered 
0   1   8'd5            Not Covered 
0   1   8'd6            Not Covered 
0   1   8'd7            Not Covered 
0   1   MISSING_DEFAULT Not Covered 
0   0   -               Covered     


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_result_cache.result_ram0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 47.77  73.33   0.00  69.93 --      47.83 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 47.77  73.33   0.00  69.93 --      47.83 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 51.70  73.33   0.00  85.62 --      47.83 result_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 75.23 --     --      75.23 --     --     pe_result_cache 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram0

             Line No.   Total   Covered  Percent
TOTAL                       45       33    73.33
ALWAYS             47       18       18   100.00
ALWAYS             70        5        4    80.00
ALWAYS             79        5        4    80.00
ALWAYS             88        5        4    80.00
ALWAYS             97       12        3    25.00

46                      always@(posedge clk or negedge rst_n)begin
47         1/1              if(~rst_n)begin
48         1/1                  mem[0] <= 16'd0;
49         1/1                  mem[1] <= 16'd0;
50         1/1                  mem[2] <= 16'd0;
51         1/1                  mem[3] <= 16'd0;
52         1/1                  mem[4] <= 16'd0;
53         1/1                  mem[5] <= 16'd0;
54         1/1                  mem[6] <= 16'd0;
55         1/1                  mem[7] <= 16'd0;
56                          end
57         1/1              else if(save_sop)begin
58         1/1                  mem[0] <= data0;
59         1/1                  mem[1] <= data1;
60         1/1                  mem[2] <= data2;
61         1/1                  mem[3] <= data3;
62         1/1                  mem[4] <= data4;
63         1/1                  mem[5] <= data5;
64         1/1                  mem[6] <= data6;
65         1/1                  mem[7] <= data7;
66                          end
                        MISSING_ELSE
67                      end
68                      
69                      always@(posedge clk or negedge rst_n)begin
70         1/1              if(~rst_n)
71         1/1                  addr_point <= 3'd0;
72         1/1              else if(rd_vld)
73         0/1     ==>          addr_point <= addr_point + 1'b1;
74                          else
75         1/1                  addr_point <= 3'd0; 
76                      end
77                      
78                      always@(posedge clk or negedge rst_n)begin
79         1/1              if(~rst_n)
80         1/1                  rd_vld <= 1'd0;
81         1/1              else if(rd_sop || rd_eop)
82         0/1     ==>          rd_vld <= ~rd_vld;
83                          else
84         1/1                  rd_vld <= rd_vld; 
85                      end
86                      
87                      always@(posedge clk or negedge rst_n)begin
88         1/1              if(~rst_n)
89         1/1                  rd_eop <= 1'd0;
90         1/1              else if(addr_point == 8'd6)
91         0/1     ==>          rd_eop <= 1'b1;
92                          else
93         1/1                  rd_eop <= 1'b0; 
94                      end
95                      
96                      always@(*)begin
97         1/1              if(~rst_n)
98         1/1                  rd_data <= 16'd0;
99         1/1              else if(rd_vld)begin
100        0/1     ==>          case(addr_point)
101        0/1     ==>              8'd0:rd_data = mem[0]; 
102        0/1     ==>              8'd1:rd_data = mem[1]; 
103        0/1     ==>              8'd2:rd_data = mem[2]; 
104        0/1     ==>              8'd3:rd_data = mem[3]; 
105        0/1     ==>              8'd4:rd_data = mem[4]; 
106        0/1     ==>              8'd5:rd_data = mem[5]; 
107        0/1     ==>              8'd6:rd_data = mem[6]; 
108        0/1     ==>              8'd7:rd_data = mem[7]; 
                   ==>  MISSING_DEFAULT
109                             endcase
110                         end
                        MISSING_ELSE

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram0

               Total   Covered  Percent
Conditions          3        0     0.00
Logical             3        0     0.00
Non-Logical         0        0
Event               0        0

 LINE       81
 EXPRESSION (rd_sop || rd_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Not Covered
 0   1  Not Covered
 1   0  Not Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram0
                Total Covered Percent 
Totals          16    6       37.50   
Total Bits      306   214     69.93   
Total Bits 0->1 153   124     81.05   
Total Bits 1->0 153   90      58.82   

                              
Ports          15  6   40.00  
Port Bits      300 214 71.33  
Port Bits 0->1 150 124 82.67  
Port Bits 1->0 150 90  60.00  

                            
Signals          1 0 0.00   
Signal Bits      6 0 0.00   
Signal Bits 0->1 3 0 0.00   
Signal Bits 1->0 3 0 0.00   

Port Details
              Toggle Toggle 1->0 Toggle 0->1 Direction 
clk           Yes    Yes         Yes         INPUT     
rst_n         Yes    Yes         Yes         INPUT     
save_sop      Yes    Yes         Yes         INPUT     
data0[15:0]   Yes    Yes         Yes         INPUT     
data1[3:0]    Yes    Yes         Yes         INPUT     
data1[4]      No     No          Yes         INPUT     
data1[5]      Yes    Yes         Yes         INPUT     
data1[6]      No     No          Yes         INPUT     
data1[7]      Yes    Yes         Yes         INPUT     
data1[8]      No     No          Yes         INPUT     
data1[15:9]   No     No          No          INPUT     
data2[15:0]   Yes    Yes         Yes         INPUT     
data3[7:0]    Yes    Yes         Yes         INPUT     
data3[15:8]   No     No          Yes         INPUT     
data4[15:0]   Yes    Yes         Yes         INPUT     
data5[8:0]    Yes    Yes         Yes         INPUT     
data5[15:9]   No     No          Yes         INPUT     
data6[8:0]    Yes    Yes         Yes         INPUT     
data6[15:9]   No     No          Yes         INPUT     
data7[6:0]    Yes    Yes         Yes         INPUT     
data7[15:7]   No     No          Yes         INPUT     
rd_sop        No     No          No          INPUT     
rd_eop        No     No          No          OUTPUT    
rd_vld        No     No          No          OUTPUT    
rd_data[15:0] No     No          No          OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
addr_point[2:0] No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram0
         Line No. Total Covered Percent 
Branches          23    11      47.83   
IF       47       3     3       100.00  
IF       70       3     2       66.67   
IF       79       3     2       66.67   
IF       88       3     2       66.67   
IF       97       11    2       18.18   


47             if(~rst_n)begin
               -1-  
48                 mem[0] <= 16'd0;
                   ==>
49                 mem[1] <= 16'd0;
50                 mem[2] <= 16'd0;
51                 mem[3] <= 16'd0;
52                 mem[4] <= 16'd0;
53                 mem[5] <= 16'd0;
54                 mem[6] <= 16'd0;
55                 mem[7] <= 16'd0;
56             end
57             else if(save_sop)begin
                    -2-  
58                 mem[0] <= data0;
                   ==>
59                 mem[1] <= data1;
60                 mem[2] <= data2;
61                 mem[3] <= data3;
62                 mem[4] <= data4;
63                 mem[5] <= data5;
64                 mem[6] <= data6;
65                 mem[7] <= data7;
66             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


70             if(~rst_n)
               -1-  
71                 addr_point <= 3'd0;
                   ==>
72             else if(rd_vld)
                    -2-  
73                 addr_point <= addr_point + 1'b1;
                   ==>
74             else
75                 addr_point <= 3'd0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


79             if(~rst_n)
               -1-  
80                 rd_vld <= 1'd0;
                   ==>
81             else if(rd_sop || rd_eop)
                    -2-  
82                 rd_vld <= ~rd_vld;
                   ==>
83             else
84                 rd_vld <= rd_vld; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


88             if(~rst_n)
               -1-  
89                 rd_eop <= 1'd0;
                   ==>
90             else if(addr_point == 8'd6)
                    -2-  
91                 rd_eop <= 1'b1;
                   ==>
92             else
93                 rd_eop <= 1'b0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


97             if(~rst_n)
               -1-  
98                 rd_data <= 16'd0;
                   ==>
99             else if(rd_vld)begin
                    -2-  
100                case(addr_point)
                   -3-  
101                    8'd0:rd_data = mem[0]; 
                       ==>
102                    8'd1:rd_data = mem[1]; 
                       ==>
103                    8'd2:rd_data = mem[2]; 
                       ==>
104                    8'd3:rd_data = mem[3]; 
                       ==>
105                    8'd4:rd_data = mem[4]; 
                       ==>
106                    8'd5:rd_data = mem[5]; 
                       ==>
107                    8'd6:rd_data = mem[6]; 
                       ==>
108                    8'd7:rd_data = mem[7]; 
                       ==>
                       MISSING_DEFAULT
                       ==>
109                endcase
110            end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-             Status      
1   -   -               Covered     
0   1   8'b0            Not Covered 
0   1   8'b1            Not Covered 
0   1   8'd2            Not Covered 
0   1   8'd3            Not Covered 
0   1   8'd4            Not Covered 
0   1   8'd5            Not Covered 
0   1   8'd6            Not Covered 
0   1   8'd7            Not Covered 
0   1   MISSING_DEFAULT Not Covered 
0   0   -               Covered     


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_result_cache.result_ram1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 48.10  73.33   0.00  71.24 --      47.83 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 48.10  73.33   0.00  71.24 --      47.83 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 51.70  73.33   0.00  85.62 --      47.83 result_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 75.23 --     --      75.23 --     --     pe_result_cache 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram1

             Line No.   Total   Covered  Percent
TOTAL                       45       33    73.33
ALWAYS             47       18       18   100.00
ALWAYS             70        5        4    80.00
ALWAYS             79        5        4    80.00
ALWAYS             88        5        4    80.00
ALWAYS             97       12        3    25.00

46                      always@(posedge clk or negedge rst_n)begin
47         1/1              if(~rst_n)begin
48         1/1                  mem[0] <= 16'd0;
49         1/1                  mem[1] <= 16'd0;
50         1/1                  mem[2] <= 16'd0;
51         1/1                  mem[3] <= 16'd0;
52         1/1                  mem[4] <= 16'd0;
53         1/1                  mem[5] <= 16'd0;
54         1/1                  mem[6] <= 16'd0;
55         1/1                  mem[7] <= 16'd0;
56                          end
57         1/1              else if(save_sop)begin
58         1/1                  mem[0] <= data0;
59         1/1                  mem[1] <= data1;
60         1/1                  mem[2] <= data2;
61         1/1                  mem[3] <= data3;
62         1/1                  mem[4] <= data4;
63         1/1                  mem[5] <= data5;
64         1/1                  mem[6] <= data6;
65         1/1                  mem[7] <= data7;
66                          end
                        MISSING_ELSE
67                      end
68                      
69                      always@(posedge clk or negedge rst_n)begin
70         1/1              if(~rst_n)
71         1/1                  addr_point <= 3'd0;
72         1/1              else if(rd_vld)
73         0/1     ==>          addr_point <= addr_point + 1'b1;
74                          else
75         1/1                  addr_point <= 3'd0; 
76                      end
77                      
78                      always@(posedge clk or negedge rst_n)begin
79         1/1              if(~rst_n)
80         1/1                  rd_vld <= 1'd0;
81         1/1              else if(rd_sop || rd_eop)
82         0/1     ==>          rd_vld <= ~rd_vld;
83                          else
84         1/1                  rd_vld <= rd_vld; 
85                      end
86                      
87                      always@(posedge clk or negedge rst_n)begin
88         1/1              if(~rst_n)
89         1/1                  rd_eop <= 1'd0;
90         1/1              else if(addr_point == 8'd6)
91         0/1     ==>          rd_eop <= 1'b1;
92                          else
93         1/1                  rd_eop <= 1'b0; 
94                      end
95                      
96                      always@(*)begin
97         1/1              if(~rst_n)
98         1/1                  rd_data <= 16'd0;
99         1/1              else if(rd_vld)begin
100        0/1     ==>          case(addr_point)
101        0/1     ==>              8'd0:rd_data = mem[0]; 
102        0/1     ==>              8'd1:rd_data = mem[1]; 
103        0/1     ==>              8'd2:rd_data = mem[2]; 
104        0/1     ==>              8'd3:rd_data = mem[3]; 
105        0/1     ==>              8'd4:rd_data = mem[4]; 
106        0/1     ==>              8'd5:rd_data = mem[5]; 
107        0/1     ==>              8'd6:rd_data = mem[6]; 
108        0/1     ==>              8'd7:rd_data = mem[7]; 
                   ==>  MISSING_DEFAULT
109                             endcase
110                         end
                        MISSING_ELSE

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram1

               Total   Covered  Percent
Conditions          3        0     0.00
Logical             3        0     0.00
Non-Logical         0        0
Event               0        0

 LINE       81
 EXPRESSION (rd_sop || rd_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Not Covered
 0   1  Not Covered
 1   0  Not Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram1
                Total Covered Percent 
Totals          16    6       37.50   
Total Bits      306   218     71.24   
Total Bits 0->1 153   124     81.05   
Total Bits 1->0 153   94      61.44   

                              
Ports          15  6   40.00  
Port Bits      300 218 72.67  
Port Bits 0->1 150 124 82.67  
Port Bits 1->0 150 94  62.67  

                            
Signals          1 0 0.00   
Signal Bits      6 0 0.00   
Signal Bits 0->1 3 0 0.00   
Signal Bits 1->0 3 0 0.00   

Port Details
              Toggle Toggle 1->0 Toggle 0->1 Direction 
clk           Yes    Yes         Yes         INPUT     
rst_n         Yes    Yes         Yes         INPUT     
save_sop      Yes    Yes         Yes         INPUT     
data0[8:0]    Yes    Yes         Yes         INPUT     
data0[15:9]   No     No          Yes         INPUT     
data1[8:0]    Yes    Yes         Yes         INPUT     
data1[15:9]   No     No          No          INPUT     
data2[15:0]   Yes    Yes         Yes         INPUT     
data3[6:0]    Yes    Yes         Yes         INPUT     
data3[15:7]   No     No          Yes         INPUT     
data4[15:0]   Yes    Yes         Yes         INPUT     
data5[15:0]   Yes    Yes         Yes         INPUT     
data6[8:0]    Yes    Yes         Yes         INPUT     
data6[15:9]   No     No          Yes         INPUT     
data7[8:0]    Yes    Yes         Yes         INPUT     
data7[15:9]   No     No          Yes         INPUT     
rd_sop        No     No          No          INPUT     
rd_eop        No     No          No          OUTPUT    
rd_vld        No     No          No          OUTPUT    
rd_data[15:0] No     No          No          OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
addr_point[2:0] No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram1
         Line No. Total Covered Percent 
Branches          23    11      47.83   
IF       47       3     3       100.00  
IF       70       3     2       66.67   
IF       79       3     2       66.67   
IF       88       3     2       66.67   
IF       97       11    2       18.18   


47             if(~rst_n)begin
               -1-  
48                 mem[0] <= 16'd0;
                   ==>
49                 mem[1] <= 16'd0;
50                 mem[2] <= 16'd0;
51                 mem[3] <= 16'd0;
52                 mem[4] <= 16'd0;
53                 mem[5] <= 16'd0;
54                 mem[6] <= 16'd0;
55                 mem[7] <= 16'd0;
56             end
57             else if(save_sop)begin
                    -2-  
58                 mem[0] <= data0;
                   ==>
59                 mem[1] <= data1;
60                 mem[2] <= data2;
61                 mem[3] <= data3;
62                 mem[4] <= data4;
63                 mem[5] <= data5;
64                 mem[6] <= data6;
65                 mem[7] <= data7;
66             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


70             if(~rst_n)
               -1-  
71                 addr_point <= 3'd0;
                   ==>
72             else if(rd_vld)
                    -2-  
73                 addr_point <= addr_point + 1'b1;
                   ==>
74             else
75                 addr_point <= 3'd0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


79             if(~rst_n)
               -1-  
80                 rd_vld <= 1'd0;
                   ==>
81             else if(rd_sop || rd_eop)
                    -2-  
82                 rd_vld <= ~rd_vld;
                   ==>
83             else
84                 rd_vld <= rd_vld; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


88             if(~rst_n)
               -1-  
89                 rd_eop <= 1'd0;
                   ==>
90             else if(addr_point == 8'd6)
                    -2-  
91                 rd_eop <= 1'b1;
                   ==>
92             else
93                 rd_eop <= 1'b0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


97             if(~rst_n)
               -1-  
98                 rd_data <= 16'd0;
                   ==>
99             else if(rd_vld)begin
                    -2-  
100                case(addr_point)
                   -3-  
101                    8'd0:rd_data = mem[0]; 
                       ==>
102                    8'd1:rd_data = mem[1]; 
                       ==>
103                    8'd2:rd_data = mem[2]; 
                       ==>
104                    8'd3:rd_data = mem[3]; 
                       ==>
105                    8'd4:rd_data = mem[4]; 
                       ==>
106                    8'd5:rd_data = mem[5]; 
                       ==>
107                    8'd6:rd_data = mem[6]; 
                       ==>
108                    8'd7:rd_data = mem[7]; 
                       ==>
                       MISSING_DEFAULT
                       ==>
109                endcase
110            end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-             Status      
1   -   -               Covered     
0   1   8'b0            Not Covered 
0   1   8'b1            Not Covered 
0   1   8'd2            Not Covered 
0   1   8'd3            Not Covered 
0   1   8'd4            Not Covered 
0   1   8'd5            Not Covered 
0   1   8'd6            Not Covered 
0   1   8'd7            Not Covered 
0   1   MISSING_DEFAULT Not Covered 
0   0   -               Covered     


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_result_cache.result_ram4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 48.26  73.33   0.00  71.90 --      47.83 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 48.26  73.33   0.00  71.90 --      47.83 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 51.70  73.33   0.00  85.62 --      47.83 result_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 75.23 --     --      75.23 --     --     pe_result_cache 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram4

             Line No.   Total   Covered  Percent
TOTAL                       45       33    73.33
ALWAYS             47       18       18   100.00
ALWAYS             70        5        4    80.00
ALWAYS             79        5        4    80.00
ALWAYS             88        5        4    80.00
ALWAYS             97       12        3    25.00

46                      always@(posedge clk or negedge rst_n)begin
47         1/1              if(~rst_n)begin
48         1/1                  mem[0] <= 16'd0;
49         1/1                  mem[1] <= 16'd0;
50         1/1                  mem[2] <= 16'd0;
51         1/1                  mem[3] <= 16'd0;
52         1/1                  mem[4] <= 16'd0;
53         1/1                  mem[5] <= 16'd0;
54         1/1                  mem[6] <= 16'd0;
55         1/1                  mem[7] <= 16'd0;
56                          end
57         1/1              else if(save_sop)begin
58         1/1                  mem[0] <= data0;
59         1/1                  mem[1] <= data1;
60         1/1                  mem[2] <= data2;
61         1/1                  mem[3] <= data3;
62         1/1                  mem[4] <= data4;
63         1/1                  mem[5] <= data5;
64         1/1                  mem[6] <= data6;
65         1/1                  mem[7] <= data7;
66                          end
                        MISSING_ELSE
67                      end
68                      
69                      always@(posedge clk or negedge rst_n)begin
70         1/1              if(~rst_n)
71         1/1                  addr_point <= 3'd0;
72         1/1              else if(rd_vld)
73         0/1     ==>          addr_point <= addr_point + 1'b1;
74                          else
75         1/1                  addr_point <= 3'd0; 
76                      end
77                      
78                      always@(posedge clk or negedge rst_n)begin
79         1/1              if(~rst_n)
80         1/1                  rd_vld <= 1'd0;
81         1/1              else if(rd_sop || rd_eop)
82         0/1     ==>          rd_vld <= ~rd_vld;
83                          else
84         1/1                  rd_vld <= rd_vld; 
85                      end
86                      
87                      always@(posedge clk or negedge rst_n)begin
88         1/1              if(~rst_n)
89         1/1                  rd_eop <= 1'd0;
90         1/1              else if(addr_point == 8'd6)
91         0/1     ==>          rd_eop <= 1'b1;
92                          else
93         1/1                  rd_eop <= 1'b0; 
94                      end
95                      
96                      always@(*)begin
97         1/1              if(~rst_n)
98         1/1                  rd_data <= 16'd0;
99         1/1              else if(rd_vld)begin
100        0/1     ==>          case(addr_point)
101        0/1     ==>              8'd0:rd_data = mem[0]; 
102        0/1     ==>              8'd1:rd_data = mem[1]; 
103        0/1     ==>              8'd2:rd_data = mem[2]; 
104        0/1     ==>              8'd3:rd_data = mem[3]; 
105        0/1     ==>              8'd4:rd_data = mem[4]; 
106        0/1     ==>              8'd5:rd_data = mem[5]; 
107        0/1     ==>              8'd6:rd_data = mem[6]; 
108        0/1     ==>              8'd7:rd_data = mem[7]; 
                   ==>  MISSING_DEFAULT
109                             endcase
110                         end
                        MISSING_ELSE

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram4

               Total   Covered  Percent
Conditions          3        0     0.00
Logical             3        0     0.00
Non-Logical         0        0
Event               0        0

 LINE       81
 EXPRESSION (rd_sop || rd_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Not Covered
 0   1  Not Covered
 1   0  Not Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram4
                Total Covered Percent 
Totals          16    6       37.50   
Total Bits      306   220     71.90   
Total Bits 0->1 153   123     80.39   
Total Bits 1->0 153   97      63.40   

                              
Ports          15  6   40.00  
Port Bits      300 220 73.33  
Port Bits 0->1 150 123 82.00  
Port Bits 1->0 150 97  64.67  

                            
Signals          1 0 0.00   
Signal Bits      6 0 0.00   
Signal Bits 0->1 3 0 0.00   
Signal Bits 1->0 3 0 0.00   

Port Details
              Toggle Toggle 1->0 Toggle 0->1 Direction 
clk           Yes    Yes         Yes         INPUT     
rst_n         Yes    Yes         Yes         INPUT     
save_sop      Yes    Yes         Yes         INPUT     
data0[15:0]   Yes    Yes         Yes         INPUT     
data1[3:0]    Yes    Yes         Yes         INPUT     
data1[4]      No     No          Yes         INPUT     
data1[7:5]    Yes    Yes         Yes         INPUT     
data1[15:8]   No     No          No          INPUT     
data2[0]      No     No          Yes         INPUT     
data2[15:1]   Yes    Yes         Yes         INPUT     
data3[3:0]    Yes    Yes         Yes         INPUT     
data3[4]      No     No          Yes         INPUT     
data3[6:5]    Yes    Yes         Yes         INPUT     
data3[15:7]   No     No          Yes         INPUT     
data4[15:0]   Yes    Yes         Yes         INPUT     
data5[8:0]    Yes    Yes         Yes         INPUT     
data5[15:9]   No     No          Yes         INPUT     
data6[15:0]   Yes    Yes         Yes         INPUT     
data7[8:0]    Yes    Yes         Yes         INPUT     
data7[15:9]   No     No          Yes         INPUT     
rd_sop        No     No          No          INPUT     
rd_eop        No     No          No          OUTPUT    
rd_vld        No     No          No          OUTPUT    
rd_data[15:0] No     No          No          OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
addr_point[2:0] No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram4
         Line No. Total Covered Percent 
Branches          23    11      47.83   
IF       47       3     3       100.00  
IF       70       3     2       66.67   
IF       79       3     2       66.67   
IF       88       3     2       66.67   
IF       97       11    2       18.18   


47             if(~rst_n)begin
               -1-  
48                 mem[0] <= 16'd0;
                   ==>
49                 mem[1] <= 16'd0;
50                 mem[2] <= 16'd0;
51                 mem[3] <= 16'd0;
52                 mem[4] <= 16'd0;
53                 mem[5] <= 16'd0;
54                 mem[6] <= 16'd0;
55                 mem[7] <= 16'd0;
56             end
57             else if(save_sop)begin
                    -2-  
58                 mem[0] <= data0;
                   ==>
59                 mem[1] <= data1;
60                 mem[2] <= data2;
61                 mem[3] <= data3;
62                 mem[4] <= data4;
63                 mem[5] <= data5;
64                 mem[6] <= data6;
65                 mem[7] <= data7;
66             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


70             if(~rst_n)
               -1-  
71                 addr_point <= 3'd0;
                   ==>
72             else if(rd_vld)
                    -2-  
73                 addr_point <= addr_point + 1'b1;
                   ==>
74             else
75                 addr_point <= 3'd0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


79             if(~rst_n)
               -1-  
80                 rd_vld <= 1'd0;
                   ==>
81             else if(rd_sop || rd_eop)
                    -2-  
82                 rd_vld <= ~rd_vld;
                   ==>
83             else
84                 rd_vld <= rd_vld; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


88             if(~rst_n)
               -1-  
89                 rd_eop <= 1'd0;
                   ==>
90             else if(addr_point == 8'd6)
                    -2-  
91                 rd_eop <= 1'b1;
                   ==>
92             else
93                 rd_eop <= 1'b0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


97             if(~rst_n)
               -1-  
98                 rd_data <= 16'd0;
                   ==>
99             else if(rd_vld)begin
                    -2-  
100                case(addr_point)
                   -3-  
101                    8'd0:rd_data = mem[0]; 
                       ==>
102                    8'd1:rd_data = mem[1]; 
                       ==>
103                    8'd2:rd_data = mem[2]; 
                       ==>
104                    8'd3:rd_data = mem[3]; 
                       ==>
105                    8'd4:rd_data = mem[4]; 
                       ==>
106                    8'd5:rd_data = mem[5]; 
                       ==>
107                    8'd6:rd_data = mem[6]; 
                       ==>
108                    8'd7:rd_data = mem[7]; 
                       ==>
                       MISSING_DEFAULT
                       ==>
109                endcase
110            end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-             Status      
1   -   -               Covered     
0   1   8'b0            Not Covered 
0   1   8'b1            Not Covered 
0   1   8'd2            Not Covered 
0   1   8'd3            Not Covered 
0   1   8'd4            Not Covered 
0   1   8'd5            Not Covered 
0   1   8'd6            Not Covered 
0   1   8'd7            Not Covered 
0   1   MISSING_DEFAULT Not Covered 
0   0   -               Covered     


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_result_cache.result_ram5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 48.26  73.33   0.00  71.90 --      47.83 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 48.26  73.33   0.00  71.90 --      47.83 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 51.70  73.33   0.00  85.62 --      47.83 result_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 75.23 --     --      75.23 --     --     pe_result_cache 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram5

             Line No.   Total   Covered  Percent
TOTAL                       45       33    73.33
ALWAYS             47       18       18   100.00
ALWAYS             70        5        4    80.00
ALWAYS             79        5        4    80.00
ALWAYS             88        5        4    80.00
ALWAYS             97       12        3    25.00

46                      always@(posedge clk or negedge rst_n)begin
47         1/1              if(~rst_n)begin
48         1/1                  mem[0] <= 16'd0;
49         1/1                  mem[1] <= 16'd0;
50         1/1                  mem[2] <= 16'd0;
51         1/1                  mem[3] <= 16'd0;
52         1/1                  mem[4] <= 16'd0;
53         1/1                  mem[5] <= 16'd0;
54         1/1                  mem[6] <= 16'd0;
55         1/1                  mem[7] <= 16'd0;
56                          end
57         1/1              else if(save_sop)begin
58         1/1                  mem[0] <= data0;
59         1/1                  mem[1] <= data1;
60         1/1                  mem[2] <= data2;
61         1/1                  mem[3] <= data3;
62         1/1                  mem[4] <= data4;
63         1/1                  mem[5] <= data5;
64         1/1                  mem[6] <= data6;
65         1/1                  mem[7] <= data7;
66                          end
                        MISSING_ELSE
67                      end
68                      
69                      always@(posedge clk or negedge rst_n)begin
70         1/1              if(~rst_n)
71         1/1                  addr_point <= 3'd0;
72         1/1              else if(rd_vld)
73         0/1     ==>          addr_point <= addr_point + 1'b1;
74                          else
75         1/1                  addr_point <= 3'd0; 
76                      end
77                      
78                      always@(posedge clk or negedge rst_n)begin
79         1/1              if(~rst_n)
80         1/1                  rd_vld <= 1'd0;
81         1/1              else if(rd_sop || rd_eop)
82         0/1     ==>          rd_vld <= ~rd_vld;
83                          else
84         1/1                  rd_vld <= rd_vld; 
85                      end
86                      
87                      always@(posedge clk or negedge rst_n)begin
88         1/1              if(~rst_n)
89         1/1                  rd_eop <= 1'd0;
90         1/1              else if(addr_point == 8'd6)
91         0/1     ==>          rd_eop <= 1'b1;
92                          else
93         1/1                  rd_eop <= 1'b0; 
94                      end
95                      
96                      always@(*)begin
97         1/1              if(~rst_n)
98         1/1                  rd_data <= 16'd0;
99         1/1              else if(rd_vld)begin
100        0/1     ==>          case(addr_point)
101        0/1     ==>              8'd0:rd_data = mem[0]; 
102        0/1     ==>              8'd1:rd_data = mem[1]; 
103        0/1     ==>              8'd2:rd_data = mem[2]; 
104        0/1     ==>              8'd3:rd_data = mem[3]; 
105        0/1     ==>              8'd4:rd_data = mem[4]; 
106        0/1     ==>              8'd5:rd_data = mem[5]; 
107        0/1     ==>              8'd6:rd_data = mem[6]; 
108        0/1     ==>              8'd7:rd_data = mem[7]; 
                   ==>  MISSING_DEFAULT
109                             endcase
110                         end
                        MISSING_ELSE

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram5

               Total   Covered  Percent
Conditions          3        0     0.00
Logical             3        0     0.00
Non-Logical         0        0
Event               0        0

 LINE       81
 EXPRESSION (rd_sop || rd_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Not Covered
 0   1  Not Covered
 1   0  Not Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram5
                Total Covered Percent 
Totals          16    5       31.25   
Total Bits      306   220     71.90   
Total Bits 0->1 153   129     84.31   
Total Bits 1->0 153   91      59.48   

                              
Ports          15  5   33.33  
Port Bits      300 220 73.33  
Port Bits 0->1 150 129 86.00  
Port Bits 1->0 150 91  60.67  

                            
Signals          1 0 0.00   
Signal Bits      6 0 0.00   
Signal Bits 0->1 3 0 0.00   
Signal Bits 1->0 3 0 0.00   

Port Details
              Toggle Toggle 1->0 Toggle 0->1 Direction 
clk           Yes    Yes         Yes         INPUT     
rst_n         Yes    Yes         Yes         INPUT     
save_sop      Yes    Yes         Yes         INPUT     
data0[5:0]    Yes    Yes         Yes         INPUT     
data0[6]      No     No          No          INPUT     
data0[8:7]    Yes    Yes         Yes         INPUT     
data0[15:9]   No     No          Yes         INPUT     
data1[15:0]   Yes    Yes         Yes         INPUT     
data2[15:0]   Yes    Yes         Yes         INPUT     
data3[4:0]    Yes    Yes         Yes         INPUT     
data3[5]      No     No          Yes         INPUT     
data3[7:6]    Yes    Yes         Yes         INPUT     
data3[15:8]   No     No          Yes         INPUT     
data4[0]      Yes    Yes         Yes         INPUT     
data4[1]      No     No          No          INPUT     
data4[4:2]    Yes    Yes         Yes         INPUT     
data4[5]      No     No          Yes         INPUT     
data4[15:6]   Yes    Yes         Yes         INPUT     
data5[8:0]    Yes    Yes         Yes         INPUT     
data5[15:9]   No     No          Yes         INPUT     
data6[8:0]    Yes    Yes         Yes         INPUT     
data6[15:9]   No     No          Yes         INPUT     
data7[8:0]    Yes    Yes         Yes         INPUT     
data7[15:9]   No     No          Yes         INPUT     
rd_sop        No     No          No          INPUT     
rd_eop        No     No          No          OUTPUT    
rd_vld        No     No          No          OUTPUT    
rd_data[15:0] No     No          No          OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
addr_point[2:0] No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram5
         Line No. Total Covered Percent 
Branches          23    11      47.83   
IF       47       3     3       100.00  
IF       70       3     2       66.67   
IF       79       3     2       66.67   
IF       88       3     2       66.67   
IF       97       11    2       18.18   


47             if(~rst_n)begin
               -1-  
48                 mem[0] <= 16'd0;
                   ==>
49                 mem[1] <= 16'd0;
50                 mem[2] <= 16'd0;
51                 mem[3] <= 16'd0;
52                 mem[4] <= 16'd0;
53                 mem[5] <= 16'd0;
54                 mem[6] <= 16'd0;
55                 mem[7] <= 16'd0;
56             end
57             else if(save_sop)begin
                    -2-  
58                 mem[0] <= data0;
                   ==>
59                 mem[1] <= data1;
60                 mem[2] <= data2;
61                 mem[3] <= data3;
62                 mem[4] <= data4;
63                 mem[5] <= data5;
64                 mem[6] <= data6;
65                 mem[7] <= data7;
66             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


70             if(~rst_n)
               -1-  
71                 addr_point <= 3'd0;
                   ==>
72             else if(rd_vld)
                    -2-  
73                 addr_point <= addr_point + 1'b1;
                   ==>
74             else
75                 addr_point <= 3'd0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


79             if(~rst_n)
               -1-  
80                 rd_vld <= 1'd0;
                   ==>
81             else if(rd_sop || rd_eop)
                    -2-  
82                 rd_vld <= ~rd_vld;
                   ==>
83             else
84                 rd_vld <= rd_vld; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


88             if(~rst_n)
               -1-  
89                 rd_eop <= 1'd0;
                   ==>
90             else if(addr_point == 8'd6)
                    -2-  
91                 rd_eop <= 1'b1;
                   ==>
92             else
93                 rd_eop <= 1'b0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


97             if(~rst_n)
               -1-  
98                 rd_data <= 16'd0;
                   ==>
99             else if(rd_vld)begin
                    -2-  
100                case(addr_point)
                   -3-  
101                    8'd0:rd_data = mem[0]; 
                       ==>
102                    8'd1:rd_data = mem[1]; 
                       ==>
103                    8'd2:rd_data = mem[2]; 
                       ==>
104                    8'd3:rd_data = mem[3]; 
                       ==>
105                    8'd4:rd_data = mem[4]; 
                       ==>
106                    8'd5:rd_data = mem[5]; 
                       ==>
107                    8'd6:rd_data = mem[6]; 
                       ==>
108                    8'd7:rd_data = mem[7]; 
                       ==>
                       MISSING_DEFAULT
                       ==>
109                endcase
110            end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-             Status      
1   -   -               Covered     
0   1   8'b0            Not Covered 
0   1   8'b1            Not Covered 
0   1   8'd2            Not Covered 
0   1   8'd3            Not Covered 
0   1   8'd4            Not Covered 
0   1   8'd5            Not Covered 
0   1   8'd6            Not Covered 
0   1   8'd7            Not Covered 
0   1   MISSING_DEFAULT Not Covered 
0   0   -               Covered     


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_result_cache.result_ram7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 50.06  73.33   0.00  79.08 --      47.83 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 50.06  73.33   0.00  79.08 --      47.83 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 51.70  73.33   0.00  85.62 --      47.83 result_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 75.23 --     --      75.23 --     --     pe_result_cache 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram7

             Line No.   Total   Covered  Percent
TOTAL                       45       33    73.33
ALWAYS             47       18       18   100.00
ALWAYS             70        5        4    80.00
ALWAYS             79        5        4    80.00
ALWAYS             88        5        4    80.00
ALWAYS             97       12        3    25.00

46                      always@(posedge clk or negedge rst_n)begin
47         1/1              if(~rst_n)begin
48         1/1                  mem[0] <= 16'd0;
49         1/1                  mem[1] <= 16'd0;
50         1/1                  mem[2] <= 16'd0;
51         1/1                  mem[3] <= 16'd0;
52         1/1                  mem[4] <= 16'd0;
53         1/1                  mem[5] <= 16'd0;
54         1/1                  mem[6] <= 16'd0;
55         1/1                  mem[7] <= 16'd0;
56                          end
57         1/1              else if(save_sop)begin
58         1/1                  mem[0] <= data0;
59         1/1                  mem[1] <= data1;
60         1/1                  mem[2] <= data2;
61         1/1                  mem[3] <= data3;
62         1/1                  mem[4] <= data4;
63         1/1                  mem[5] <= data5;
64         1/1                  mem[6] <= data6;
65         1/1                  mem[7] <= data7;
66                          end
                        MISSING_ELSE
67                      end
68                      
69                      always@(posedge clk or negedge rst_n)begin
70         1/1              if(~rst_n)
71         1/1                  addr_point <= 3'd0;
72         1/1              else if(rd_vld)
73         0/1     ==>          addr_point <= addr_point + 1'b1;
74                          else
75         1/1                  addr_point <= 3'd0; 
76                      end
77                      
78                      always@(posedge clk or negedge rst_n)begin
79         1/1              if(~rst_n)
80         1/1                  rd_vld <= 1'd0;
81         1/1              else if(rd_sop || rd_eop)
82         0/1     ==>          rd_vld <= ~rd_vld;
83                          else
84         1/1                  rd_vld <= rd_vld; 
85                      end
86                      
87                      always@(posedge clk or negedge rst_n)begin
88         1/1              if(~rst_n)
89         1/1                  rd_eop <= 1'd0;
90         1/1              else if(addr_point == 8'd6)
91         0/1     ==>          rd_eop <= 1'b1;
92                          else
93         1/1                  rd_eop <= 1'b0; 
94                      end
95                      
96                      always@(*)begin
97         1/1              if(~rst_n)
98         1/1                  rd_data <= 16'd0;
99         1/1              else if(rd_vld)begin
100        0/1     ==>          case(addr_point)
101        0/1     ==>              8'd0:rd_data = mem[0]; 
102        0/1     ==>              8'd1:rd_data = mem[1]; 
103        0/1     ==>              8'd2:rd_data = mem[2]; 
104        0/1     ==>              8'd3:rd_data = mem[3]; 
105        0/1     ==>              8'd4:rd_data = mem[4]; 
106        0/1     ==>              8'd5:rd_data = mem[5]; 
107        0/1     ==>              8'd6:rd_data = mem[6]; 
108        0/1     ==>              8'd7:rd_data = mem[7]; 
                   ==>  MISSING_DEFAULT
109                             endcase
110                         end
                        MISSING_ELSE

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram7

               Total   Covered  Percent
Conditions          3        0     0.00
Logical             3        0     0.00
Non-Logical         0        0
Event               0        0

 LINE       81
 EXPRESSION (rd_sop || rd_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Not Covered
 0   1  Not Covered
 1   0  Not Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram7
                Total Covered Percent 
Totals          16    8       50.00   
Total Bits      306   242     79.08   
Total Bits 0->1 153   123     80.39   
Total Bits 1->0 153   119     77.78   

                              
Ports          15  8   53.33  
Port Bits      300 242 80.67  
Port Bits 0->1 150 123 82.00  
Port Bits 1->0 150 119 79.33  

                            
Signals          1 0 0.00   
Signal Bits      6 0 0.00   
Signal Bits 0->1 3 0 0.00   
Signal Bits 1->0 3 0 0.00   

Port Details
              Toggle Toggle 1->0 Toggle 0->1 Direction 
clk           Yes    Yes         Yes         INPUT     
rst_n         Yes    Yes         Yes         INPUT     
save_sop      Yes    Yes         Yes         INPUT     
data0[15:0]   Yes    Yes         Yes         INPUT     
data1[3:0]    Yes    Yes         Yes         INPUT     
data1[4]      No     No          Yes         INPUT     
data1[15:5]   Yes    Yes         Yes         INPUT     
data2[15:0]   Yes    Yes         Yes         INPUT     
data3[15:0]   Yes    Yes         Yes         INPUT     
data4[15:0]   Yes    Yes         Yes         INPUT     
data5[15:0]   Yes    Yes         Yes         INPUT     
data6[0]      No     No          Yes         INPUT     
data6[3:1]    Yes    Yes         Yes         INPUT     
data6[4]      No     No          Yes         INPUT     
data6[5]      Yes    Yes         Yes         INPUT     
data6[6]      No     No          Yes         INPUT     
data6[15:7]   Yes    Yes         Yes         INPUT     
data7[7:0]    Yes    Yes         Yes         INPUT     
data7[15:8]   No     No          No          INPUT     
rd_sop        No     No          No          INPUT     
rd_eop        No     No          No          OUTPUT    
rd_vld        No     No          No          OUTPUT    
rd_data[15:0] No     No          No          OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
addr_point[2:0] No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram7
         Line No. Total Covered Percent 
Branches          23    11      47.83   
IF       47       3     3       100.00  
IF       70       3     2       66.67   
IF       79       3     2       66.67   
IF       88       3     2       66.67   
IF       97       11    2       18.18   


47             if(~rst_n)begin
               -1-  
48                 mem[0] <= 16'd0;
                   ==>
49                 mem[1] <= 16'd0;
50                 mem[2] <= 16'd0;
51                 mem[3] <= 16'd0;
52                 mem[4] <= 16'd0;
53                 mem[5] <= 16'd0;
54                 mem[6] <= 16'd0;
55                 mem[7] <= 16'd0;
56             end
57             else if(save_sop)begin
                    -2-  
58                 mem[0] <= data0;
                   ==>
59                 mem[1] <= data1;
60                 mem[2] <= data2;
61                 mem[3] <= data3;
62                 mem[4] <= data4;
63                 mem[5] <= data5;
64                 mem[6] <= data6;
65                 mem[7] <= data7;
66             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


70             if(~rst_n)
               -1-  
71                 addr_point <= 3'd0;
                   ==>
72             else if(rd_vld)
                    -2-  
73                 addr_point <= addr_point + 1'b1;
                   ==>
74             else
75                 addr_point <= 3'd0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


79             if(~rst_n)
               -1-  
80                 rd_vld <= 1'd0;
                   ==>
81             else if(rd_sop || rd_eop)
                    -2-  
82                 rd_vld <= ~rd_vld;
                   ==>
83             else
84                 rd_vld <= rd_vld; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


88             if(~rst_n)
               -1-  
89                 rd_eop <= 1'd0;
                   ==>
90             else if(addr_point == 8'd6)
                    -2-  
91                 rd_eop <= 1'b1;
                   ==>
92             else
93                 rd_eop <= 1'b0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


97             if(~rst_n)
               -1-  
98                 rd_data <= 16'd0;
                   ==>
99             else if(rd_vld)begin
                    -2-  
100                case(addr_point)
                   -3-  
101                    8'd0:rd_data = mem[0]; 
                       ==>
102                    8'd1:rd_data = mem[1]; 
                       ==>
103                    8'd2:rd_data = mem[2]; 
                       ==>
104                    8'd3:rd_data = mem[3]; 
                       ==>
105                    8'd4:rd_data = mem[4]; 
                       ==>
106                    8'd5:rd_data = mem[5]; 
                       ==>
107                    8'd6:rd_data = mem[6]; 
                       ==>
108                    8'd7:rd_data = mem[7]; 
                       ==>
                       MISSING_DEFAULT
                       ==>
109                endcase
110            end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-             Status      
1   -   -               Covered     
0   1   8'b0            Not Covered 
0   1   8'b1            Not Covered 
0   1   8'd2            Not Covered 
0   1   8'd3            Not Covered 
0   1   8'd4            Not Covered 
0   1   8'd5            Not Covered 
0   1   8'd6            Not Covered 
0   1   8'd7            Not Covered 
0   1   MISSING_DEFAULT Not Covered 
0   0   -               Covered     


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_result_cache.result_ram3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 50.47  73.33   0.00  80.72 --      47.83 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 50.47  73.33   0.00  80.72 --      47.83 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 51.70  73.33   0.00  85.62 --      47.83 result_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 75.23 --     --      75.23 --     --     pe_result_cache 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram3

             Line No.   Total   Covered  Percent
TOTAL                       45       33    73.33
ALWAYS             47       18       18   100.00
ALWAYS             70        5        4    80.00
ALWAYS             79        5        4    80.00
ALWAYS             88        5        4    80.00
ALWAYS             97       12        3    25.00

46                      always@(posedge clk or negedge rst_n)begin
47         1/1              if(~rst_n)begin
48         1/1                  mem[0] <= 16'd0;
49         1/1                  mem[1] <= 16'd0;
50         1/1                  mem[2] <= 16'd0;
51         1/1                  mem[3] <= 16'd0;
52         1/1                  mem[4] <= 16'd0;
53         1/1                  mem[5] <= 16'd0;
54         1/1                  mem[6] <= 16'd0;
55         1/1                  mem[7] <= 16'd0;
56                          end
57         1/1              else if(save_sop)begin
58         1/1                  mem[0] <= data0;
59         1/1                  mem[1] <= data1;
60         1/1                  mem[2] <= data2;
61         1/1                  mem[3] <= data3;
62         1/1                  mem[4] <= data4;
63         1/1                  mem[5] <= data5;
64         1/1                  mem[6] <= data6;
65         1/1                  mem[7] <= data7;
66                          end
                        MISSING_ELSE
67                      end
68                      
69                      always@(posedge clk or negedge rst_n)begin
70         1/1              if(~rst_n)
71         1/1                  addr_point <= 3'd0;
72         1/1              else if(rd_vld)
73         0/1     ==>          addr_point <= addr_point + 1'b1;
74                          else
75         1/1                  addr_point <= 3'd0; 
76                      end
77                      
78                      always@(posedge clk or negedge rst_n)begin
79         1/1              if(~rst_n)
80         1/1                  rd_vld <= 1'd0;
81         1/1              else if(rd_sop || rd_eop)
82         0/1     ==>          rd_vld <= ~rd_vld;
83                          else
84         1/1                  rd_vld <= rd_vld; 
85                      end
86                      
87                      always@(posedge clk or negedge rst_n)begin
88         1/1              if(~rst_n)
89         1/1                  rd_eop <= 1'd0;
90         1/1              else if(addr_point == 8'd6)
91         0/1     ==>          rd_eop <= 1'b1;
92                          else
93         1/1                  rd_eop <= 1'b0; 
94                      end
95                      
96                      always@(*)begin
97         1/1              if(~rst_n)
98         1/1                  rd_data <= 16'd0;
99         1/1              else if(rd_vld)begin
100        0/1     ==>          case(addr_point)
101        0/1     ==>              8'd0:rd_data = mem[0]; 
102        0/1     ==>              8'd1:rd_data = mem[1]; 
103        0/1     ==>              8'd2:rd_data = mem[2]; 
104        0/1     ==>              8'd3:rd_data = mem[3]; 
105        0/1     ==>              8'd4:rd_data = mem[4]; 
106        0/1     ==>              8'd5:rd_data = mem[5]; 
107        0/1     ==>              8'd6:rd_data = mem[6]; 
108        0/1     ==>              8'd7:rd_data = mem[7]; 
                   ==>  MISSING_DEFAULT
109                             endcase
110                         end
                        MISSING_ELSE

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram3

               Total   Covered  Percent
Conditions          3        0     0.00
Logical             3        0     0.00
Non-Logical         0        0
Event               0        0

 LINE       81
 EXPRESSION (rd_sop || rd_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Not Covered
 0   1  Not Covered
 1   0  Not Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram3
                Total Covered Percent 
Totals          16    9       56.25   
Total Bits      306   247     80.72   
Total Bits 0->1 153   131     85.62   
Total Bits 1->0 153   116     75.82   

                              
Ports          15  9   60.00  
Port Bits      300 247 82.33  
Port Bits 0->1 150 131 87.33  
Port Bits 1->0 150 116 77.33  

                            
Signals          1 0 0.00   
Signal Bits      6 0 0.00   
Signal Bits 0->1 3 0 0.00   
Signal Bits 1->0 3 0 0.00   

Port Details
              Toggle Toggle 1->0 Toggle 0->1 Direction 
clk           Yes    Yes         Yes         INPUT     
rst_n         Yes    Yes         Yes         INPUT     
save_sop      Yes    Yes         Yes         INPUT     
data0[15:0]   Yes    Yes         Yes         INPUT     
data1[8:0]    Yes    Yes         Yes         INPUT     
data1[15:9]   No     No          Yes         INPUT     
data2[15:0]   Yes    Yes         Yes         INPUT     
data3[15:0]   Yes    Yes         Yes         INPUT     
data4[15:0]   Yes    Yes         Yes         INPUT     
data5[15:0]   Yes    Yes         Yes         INPUT     
data6[15:0]   Yes    Yes         Yes         INPUT     
data7[7:0]    Yes    Yes         Yes         INPUT     
data7[15:8]   No     No          Yes         INPUT     
rd_sop        No     No          No          INPUT     
rd_eop        No     No          No          OUTPUT    
rd_vld        No     No          No          OUTPUT    
rd_data[15:0] No     No          No          OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
addr_point[2:0] No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram3
         Line No. Total Covered Percent 
Branches          23    11      47.83   
IF       47       3     3       100.00  
IF       70       3     2       66.67   
IF       79       3     2       66.67   
IF       88       3     2       66.67   
IF       97       11    2       18.18   


47             if(~rst_n)begin
               -1-  
48                 mem[0] <= 16'd0;
                   ==>
49                 mem[1] <= 16'd0;
50                 mem[2] <= 16'd0;
51                 mem[3] <= 16'd0;
52                 mem[4] <= 16'd0;
53                 mem[5] <= 16'd0;
54                 mem[6] <= 16'd0;
55                 mem[7] <= 16'd0;
56             end
57             else if(save_sop)begin
                    -2-  
58                 mem[0] <= data0;
                   ==>
59                 mem[1] <= data1;
60                 mem[2] <= data2;
61                 mem[3] <= data3;
62                 mem[4] <= data4;
63                 mem[5] <= data5;
64                 mem[6] <= data6;
65                 mem[7] <= data7;
66             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


70             if(~rst_n)
               -1-  
71                 addr_point <= 3'd0;
                   ==>
72             else if(rd_vld)
                    -2-  
73                 addr_point <= addr_point + 1'b1;
                   ==>
74             else
75                 addr_point <= 3'd0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


79             if(~rst_n)
               -1-  
80                 rd_vld <= 1'd0;
                   ==>
81             else if(rd_sop || rd_eop)
                    -2-  
82                 rd_vld <= ~rd_vld;
                   ==>
83             else
84                 rd_vld <= rd_vld; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


88             if(~rst_n)
               -1-  
89                 rd_eop <= 1'd0;
                   ==>
90             else if(addr_point == 8'd6)
                    -2-  
91                 rd_eop <= 1'b1;
                   ==>
92             else
93                 rd_eop <= 1'b0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


97             if(~rst_n)
               -1-  
98                 rd_data <= 16'd0;
                   ==>
99             else if(rd_vld)begin
                    -2-  
100                case(addr_point)
                   -3-  
101                    8'd0:rd_data = mem[0]; 
                       ==>
102                    8'd1:rd_data = mem[1]; 
                       ==>
103                    8'd2:rd_data = mem[2]; 
                       ==>
104                    8'd3:rd_data = mem[3]; 
                       ==>
105                    8'd4:rd_data = mem[4]; 
                       ==>
106                    8'd5:rd_data = mem[5]; 
                       ==>
107                    8'd6:rd_data = mem[6]; 
                       ==>
108                    8'd7:rd_data = mem[7]; 
                       ==>
                       MISSING_DEFAULT
                       ==>
109                endcase
110            end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-             Status      
1   -   -               Covered     
0   1   8'b0            Not Covered 
0   1   8'b1            Not Covered 
0   1   8'd2            Not Covered 
0   1   8'd3            Not Covered 
0   1   8'd4            Not Covered 
0   1   8'd5            Not Covered 
0   1   8'd6            Not Covered 
0   1   8'd7            Not Covered 
0   1   MISSING_DEFAULT Not Covered 
0   0   -               Covered     


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_result_cache.result_ram6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 51.45  73.33   0.00  84.64 --      47.83 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 51.45  73.33   0.00  84.64 --      47.83 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 51.70  73.33   0.00  85.62 --      47.83 result_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 75.23 --     --      75.23 --     --     pe_result_cache 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram6

             Line No.   Total   Covered  Percent
TOTAL                       45       33    73.33
ALWAYS             47       18       18   100.00
ALWAYS             70        5        4    80.00
ALWAYS             79        5        4    80.00
ALWAYS             88        5        4    80.00
ALWAYS             97       12        3    25.00

46                      always@(posedge clk or negedge rst_n)begin
47         1/1              if(~rst_n)begin
48         1/1                  mem[0] <= 16'd0;
49         1/1                  mem[1] <= 16'd0;
50         1/1                  mem[2] <= 16'd0;
51         1/1                  mem[3] <= 16'd0;
52         1/1                  mem[4] <= 16'd0;
53         1/1                  mem[5] <= 16'd0;
54         1/1                  mem[6] <= 16'd0;
55         1/1                  mem[7] <= 16'd0;
56                          end
57         1/1              else if(save_sop)begin
58         1/1                  mem[0] <= data0;
59         1/1                  mem[1] <= data1;
60         1/1                  mem[2] <= data2;
61         1/1                  mem[3] <= data3;
62         1/1                  mem[4] <= data4;
63         1/1                  mem[5] <= data5;
64         1/1                  mem[6] <= data6;
65         1/1                  mem[7] <= data7;
66                          end
                        MISSING_ELSE
67                      end
68                      
69                      always@(posedge clk or negedge rst_n)begin
70         1/1              if(~rst_n)
71         1/1                  addr_point <= 3'd0;
72         1/1              else if(rd_vld)
73         0/1     ==>          addr_point <= addr_point + 1'b1;
74                          else
75         1/1                  addr_point <= 3'd0; 
76                      end
77                      
78                      always@(posedge clk or negedge rst_n)begin
79         1/1              if(~rst_n)
80         1/1                  rd_vld <= 1'd0;
81         1/1              else if(rd_sop || rd_eop)
82         0/1     ==>          rd_vld <= ~rd_vld;
83                          else
84         1/1                  rd_vld <= rd_vld; 
85                      end
86                      
87                      always@(posedge clk or negedge rst_n)begin
88         1/1              if(~rst_n)
89         1/1                  rd_eop <= 1'd0;
90         1/1              else if(addr_point == 8'd6)
91         0/1     ==>          rd_eop <= 1'b1;
92                          else
93         1/1                  rd_eop <= 1'b0; 
94                      end
95                      
96                      always@(*)begin
97         1/1              if(~rst_n)
98         1/1                  rd_data <= 16'd0;
99         1/1              else if(rd_vld)begin
100        0/1     ==>          case(addr_point)
101        0/1     ==>              8'd0:rd_data = mem[0]; 
102        0/1     ==>              8'd1:rd_data = mem[1]; 
103        0/1     ==>              8'd2:rd_data = mem[2]; 
104        0/1     ==>              8'd3:rd_data = mem[3]; 
105        0/1     ==>              8'd4:rd_data = mem[4]; 
106        0/1     ==>              8'd5:rd_data = mem[5]; 
107        0/1     ==>              8'd6:rd_data = mem[6]; 
108        0/1     ==>              8'd7:rd_data = mem[7]; 
                   ==>  MISSING_DEFAULT
109                             endcase
110                         end
                        MISSING_ELSE

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram6

               Total   Covered  Percent
Conditions          3        0     0.00
Logical             3        0     0.00
Non-Logical         0        0
Event               0        0

 LINE       81
 EXPRESSION (rd_sop || rd_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Not Covered
 0   1  Not Covered
 1   0  Not Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram6
                Total Covered Percent 
Totals          16    8       50.00   
Total Bits      306   259     84.64   
Total Bits 0->1 153   131     85.62   
Total Bits 1->0 153   128     83.66   

                              
Ports          15  8   53.33  
Port Bits      300 259 86.33  
Port Bits 0->1 150 131 87.33  
Port Bits 1->0 150 128 85.33  

                            
Signals          1 0 0.00   
Signal Bits      6 0 0.00   
Signal Bits 0->1 3 0 0.00   
Signal Bits 1->0 3 0 0.00   

Port Details
              Toggle Toggle 1->0 Toggle 0->1 Direction 
clk           Yes    Yes         Yes         INPUT     
rst_n         Yes    Yes         Yes         INPUT     
save_sop      Yes    Yes         Yes         INPUT     
data0[15:0]   Yes    Yes         Yes         INPUT     
data1[4:0]    Yes    Yes         Yes         INPUT     
data1[5]      No     No          Yes         INPUT     
data1[15:6]   Yes    Yes         Yes         INPUT     
data2[15:0]   Yes    Yes         Yes         INPUT     
data3[15:0]   Yes    Yes         Yes         INPUT     
data4[15:0]   Yes    Yes         Yes         INPUT     
data5[0]      No     No          Yes         INPUT     
data5[15:1]   Yes    Yes         Yes         INPUT     
data6[15:0]   Yes    Yes         Yes         INPUT     
data7[4:0]    Yes    Yes         Yes         INPUT     
data7[5]      No     No          Yes         INPUT     
data7[15:6]   Yes    Yes         Yes         INPUT     
rd_sop        No     No          No          INPUT     
rd_eop        No     No          No          OUTPUT    
rd_vld        No     No          No          OUTPUT    
rd_data[15:0] No     No          No          OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
addr_point[2:0] No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_result_cache.result_ram6
         Line No. Total Covered Percent 
Branches          23    11      47.83   
IF       47       3     3       100.00  
IF       70       3     2       66.67   
IF       79       3     2       66.67   
IF       88       3     2       66.67   
IF       97       11    2       18.18   


47             if(~rst_n)begin
               -1-  
48                 mem[0] <= 16'd0;
                   ==>
49                 mem[1] <= 16'd0;
50                 mem[2] <= 16'd0;
51                 mem[3] <= 16'd0;
52                 mem[4] <= 16'd0;
53                 mem[5] <= 16'd0;
54                 mem[6] <= 16'd0;
55                 mem[7] <= 16'd0;
56             end
57             else if(save_sop)begin
                    -2-  
58                 mem[0] <= data0;
                   ==>
59                 mem[1] <= data1;
60                 mem[2] <= data2;
61                 mem[3] <= data3;
62                 mem[4] <= data4;
63                 mem[5] <= data5;
64                 mem[6] <= data6;
65                 mem[7] <= data7;
66             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


70             if(~rst_n)
               -1-  
71                 addr_point <= 3'd0;
                   ==>
72             else if(rd_vld)
                    -2-  
73                 addr_point <= addr_point + 1'b1;
                   ==>
74             else
75                 addr_point <= 3'd0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


79             if(~rst_n)
               -1-  
80                 rd_vld <= 1'd0;
                   ==>
81             else if(rd_sop || rd_eop)
                    -2-  
82                 rd_vld <= ~rd_vld;
                   ==>
83             else
84                 rd_vld <= rd_vld; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


88             if(~rst_n)
               -1-  
89                 rd_eop <= 1'd0;
                   ==>
90             else if(addr_point == 8'd6)
                    -2-  
91                 rd_eop <= 1'b1;
                   ==>
92             else
93                 rd_eop <= 1'b0; 
                   ==>

Branches:

-1- -2- Status      
1   -   Covered     
0   1   Not Covered 
0   0   Covered     


97             if(~rst_n)
               -1-  
98                 rd_data <= 16'd0;
                   ==>
99             else if(rd_vld)begin
                    -2-  
100                case(addr_point)
                   -3-  
101                    8'd0:rd_data = mem[0]; 
                       ==>
102                    8'd1:rd_data = mem[1]; 
                       ==>
103                    8'd2:rd_data = mem[2]; 
                       ==>
104                    8'd3:rd_data = mem[3]; 
                       ==>
105                    8'd4:rd_data = mem[4]; 
                       ==>
106                    8'd5:rd_data = mem[5]; 
                       ==>
107                    8'd6:rd_data = mem[6]; 
                       ==>
108                    8'd7:rd_data = mem[7]; 
                       ==>
                       MISSING_DEFAULT
                       ==>
109                endcase
110            end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-             Status      
1   -   -               Covered     
0   1   8'b0            Not Covered 
0   1   8'b1            Not Covered 
0   1   8'd2            Not Covered 
0   1   8'd3            Not Covered 
0   1   8'd4            Not Covered 
0   1   8'd5            Not Covered 
0   1   8'd6            Not Covered 
0   1   8'd7            Not Covered 
0   1   MISSING_DEFAULT Not Covered 
0   0   -               Covered     


===============================================================================
Module : npu_controller
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 68.64  95.38  66.67  53.41  37.50  90.24 

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/rtl/npu_controller.v

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                        
 68.64  95.38  66.67  53.41  37.50  90.24 npu_tb.u_NPU.npu_controller 



-------------------------------------------------------------------------------
Line Coverage for Module : npu_controller

             Line No.   Total   Covered  Percent
TOTAL                       65       62    95.38
ALWAYS             60        7        7   100.00
ALWAYS             72        7        7   100.00
ALWAYS             84        3        3   100.00
ALWAYS             92        3        3   100.00
ALWAYS            100        3        3   100.00
ALWAYS            108        3        3   100.00
ALWAYS            116        5        5   100.00
ALWAYS            126        5        5   100.00
ALWAYS            136        7        6    85.71
ALWAYS            148        5        5   100.00
ALWAYS            158        3        3   100.00
ALWAYS            166       14       12    85.71

59                      begin
60         1/1              if(~rst_n)
61         1/1                  wr_eop_data_cnt <= 2'd0;
62         1/1              else if(wr_eop_data_cnt == 2'b11 && wr_eop_weight_cnt == 1'b1)
63         1/1                  wr_eop_data_cnt <= 2'd0;
64         1/1              else if(wr_eop_data)
65         1/1                  wr_eop_data_cnt <= wr_eop_data_cnt + 1'b1;
66                          else
67         1/1                  wr_eop_data_cnt <= wr_eop_data_cnt;
68                      end
69                      
70                      always@(posedge clk or negedge rst_n)
71                      begin
72         1/1              if(~rst_n)
73         1/1                  wr_eop_weight_cnt <= 1'd0;
74         1/1              else if(wr_eop_data_cnt == 2'b11 && wr_eop_weight_cnt == 1'b1)
75         1/1                  wr_eop_weight_cnt <= 1'd0;
76         1/1              else if(wr_eop_weight)
77         1/1                  wr_eop_weight_cnt <= 1'b1;
78                          else
79         1/1                  wr_eop_weight_cnt <= wr_eop_weight_cnt;
80                      end
81                      
82                      always@(posedge clk or negedge rst_n)
83                      begin
84         1/1              if(~rst_n)
85         1/1                  load_finish <= 1'd0;
86                          else
87         1/1                  load_finish <= (wr_eop_data_cnt == 2'b11 && wr_eop_weight_cnt == 1'b1);
88                      end
89                      
90                      always@(posedge clk or negedge rst_n)
91                      begin
92         1/1              if(~rst_n)
93         1/1                  rd_sop_0 <= 1'b0;
94                          else
95         1/1                  rd_sop_0 <= load_finish;
96                      end
97                      
98                      always@(posedge clk or negedge rst_n)
99                      begin
100        1/1              if(~rst_n)
101        1/1                  rd_sop_1 <= 1'b0;
102                         else
103        1/1                  rd_sop_1 <= load_finish;
104                     end
105                     
106                     always@(posedge clk or negedge rst_n)
107                     begin
108        1/1              if(~rst_n)
109        1/1                  clear <= 1'b0;
110                         else
111        1/1                  clear <= load_finish;
112                     end
113                     
114                     always@(posedge clk or negedge rst_n)
115                     begin
116        1/1              if(~rst_n)
117        1/1                  pe_compute_cnt <= 5'd0;
118        1/1              else if(curr_state == S_EXEC)
119        1/1                  pe_compute_cnt <= pe_compute_cnt + 1'b1;
120                         else
121        1/1                  pe_compute_cnt <= 5'd0;
122                     end
123                     
124                     always@(posedge clk or negedge rst_n)
125                     begin
126        1/1              if(~rst_n)
127        1/1                  save_sop <= 1'b0;
128        1/1              else if(curr_state == S_SAVE)
129        1/1                  save_sop <= 1'b1;
130                         else
131        1/1                  save_sop <= 1'b0;
132                     end
133                     
134                     always@(posedge clk or negedge rst_n)
135                     begin
136        1/1              if(~rst_n)
137        1/1                  rd_finish <= 8'b0;
138        1/1              else if(curr_state == S_WAIT)
139        1/1                  rd_finish <= rd_finish | rd_eop;
140        1/1              else if(rd_finish == 8'hff)
141        0/1     ==>          rd_finish <= 8'd0;
142                         else
143        1/1                  rd_finish <= rd_finish;
144                     end
145                     
146                     always@(posedge clk or negedge rst_n)
147                     begin
148        1/1              if(~rst_n)
149        1/1                  save_finish <= 1'b0;
150        1/1              else if(curr_state == S_WAIT)
151        1/1                  save_finish <= 1'b1;
152                         else
153        1/1                  save_finish <= 1'b0;
154                     end
155                     //********************* state machine *********************
156                     always@(posedge clk or negedge rst_n)
157                     begin
158        1/1              if(~rst_n)
159        1/1                  curr_state <= S_IDLE;
160                         else
161        1/1                  curr_state <= next_state;
162                     end
163                     
164                     always@(*)
165                     begin
166        1/1              if(~rst_n)
167        1/1                  next_state = S_IDLE;
168                         else begin
169        1/1                  case(curr_state)
170                                 S_IDLE:
171                                 begin
172        1/1                          if(load_finish)
173        1/1                              next_state = S_EXEC;
174                                     else
175        1/1                              next_state = S_IDLE;
176                                 end
177                                 S_EXEC:
178                                 begin
179        1/1                          if(pe_compute_cnt == 5'd24)
180        1/1                              next_state = S_SAVE;
181                                     else
182        1/1                              next_state = S_EXEC;
183                                 end
184                                 S_SAVE:
185                                 begin
186        1/1                          next_state = S_WAIT;
187                                 end
188                                 S_WAIT:
189                                 begin
190        1/1                          if(rd_finish == 8'hff)
191        0/1     ==>                      next_state = S_OVER;
192                                     else
193        1/1                              next_state = S_WAIT;
194                                 end
195                                 S_OVER:
196                                 begin
197        0/1     ==>                  next_state = S_IDLE;
198                                 end
                   ==>  MISSING_DEFAULT

-------------------------------------------------------------------------------
Cond Coverage for Module : npu_controller

               Total   Covered  Percent
Conditions          9        6    66.67
Logical             9        6    66.67
Non-Logical         0        0
Event               0        0

 LINE       62
 EXPRESSION ((wr_eop_data_cnt == 2'b11) && (wr_eop_weight_cnt == 1'b1))
             -------------1------------    -------------2-------------

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       74
 EXPRESSION ((wr_eop_data_cnt == 2'b11) && (wr_eop_weight_cnt == 1'b1))
             -------------1------------    -------------2-------------

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       87
 EXPRESSION ((wr_eop_data_cnt == 2'b11) && (wr_eop_weight_cnt == 1'b1))
             -------------1------------    -------------2-------------

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Module : npu_controller
                Total Covered Percent 
Totals          17    12      70.59   
Total Bits      88    47      53.41   
Total Bits 0->1 44    24      54.55   
Total Bits 1->0 44    23      52.27   

                            
Ports          10 8  80.00  
Port Bits      34 17 50.00  
Port Bits 0->1 17 9  52.94  
Port Bits 1->0 17 8  47.06  

                              
Signals          7  4  57.14  
Signal Bits      54 30 55.56  
Signal Bits 0->1 27 15 55.56  
Signal Bits 1->0 27 15 55.56  

Port Details
              Toggle Toggle 1->0 Toggle 0->1 Direction 
clk           Yes    Yes         Yes         INPUT     
rst_n         Yes    Yes         Yes         INPUT     
wr_eop_data   Yes    Yes         Yes         INPUT     
wr_eop_weight Yes    Yes         Yes         INPUT     
clear         Yes    Yes         Yes         OUTPUT    
rd_sop_0      Yes    Yes         Yes         OUTPUT    
rd_sop_1      Yes    Yes         Yes         OUTPUT    
rd_eop[7:0]   No     No          No          INPUT     
save_finish   No     No          Yes         OUTPUT    
save_sop      Yes    Yes         Yes         OUTPUT    

Signal Details
                     Toggle Toggle 1->0 Toggle 0->1 
curr_state[0]        No     Yes         No          
curr_state[2:1]      Yes    Yes         Yes         
curr_state[3]        No     No          Yes         
curr_state[4]        No     No          No          
next_state[0]        No     Yes         No          
next_state[2:1]      Yes    Yes         Yes         
next_state[3]        No     No          Yes         
next_state[4]        No     No          No          
wr_eop_data_cnt[1:0] Yes    Yes         Yes         
wr_eop_weight_cnt    Yes    Yes         Yes         
pe_compute_cnt[4:0]  Yes    Yes         Yes         
rd_finish[7:0]       No     No          No          
load_finish          Yes    Yes         Yes         


-------------------------------------------------------------------------------
FSM Coverage for Module : npu_controller
Summary for FSM :: curr_state
            Total Covered Percent                         
States      5     4       80.00   (Not included in score) 
Transitions 8     3       37.50                           
Sequences   0     0                                       

State, Transition and Sequence Details for FSM :: curr_state
-------------------------------------------------------------------------------
states Line No. Covered     
S_EXEC 173      Covered     
S_IDLE 159      Covered     
S_OVER 191      Not Covered 
S_SAVE 180      Covered     
S_WAIT 186      Covered     

transitions    Line No. Covered     
S_EXEC->S_IDLE 159      Not Covered 
S_EXEC->S_SAVE 180      Covered     
S_IDLE->S_EXEC 173      Covered     
S_OVER->S_IDLE 159      Not Covered 
S_SAVE->S_IDLE 159      Not Covered 
S_SAVE->S_WAIT 186      Covered     
S_WAIT->S_IDLE 159      Not Covered 
S_WAIT->S_OVER 191      Not Covered 


-------------------------------------------------------------------------------
Branch Coverage for Module : npu_controller
         Line No. Total Covered Percent 
Branches          41    37      90.24   
IF       60       4     4       100.00  
IF       72       4     4       100.00  
IF       84       2     2       100.00  
IF       92       2     2       100.00  
IF       100      2     2       100.00  
IF       108      2     2       100.00  
IF       116      3     3       100.00  
IF       126      3     3       100.00  
IF       136      4     3       75.00   
IF       148      3     3       100.00  
IF       158      2     2       100.00  
IF       166      10    7       70.00   


60             if(~rst_n)
               -1-  
61                 wr_eop_data_cnt <= 2'd0;
                   ==>
62             else if(wr_eop_data_cnt == 2'b11 && wr_eop_weight_cnt == 1'b1)
                    -2-  
63                 wr_eop_data_cnt <= 2'd0;
                   ==>
64             else if(wr_eop_data)
                    -3-  
65                 wr_eop_data_cnt <= wr_eop_data_cnt + 1'b1;
                   ==>
66             else
67                 wr_eop_data_cnt <= wr_eop_data_cnt;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


72             if(~rst_n)
               -1-  
73                 wr_eop_weight_cnt <= 1'd0;
                   ==>
74             else if(wr_eop_data_cnt == 2'b11 && wr_eop_weight_cnt == 1'b1)
                    -2-  
75                 wr_eop_weight_cnt <= 1'd0;
                   ==>
76             else if(wr_eop_weight)
                    -3-  
77                 wr_eop_weight_cnt <= 1'b1;
                   ==>
78             else
79                 wr_eop_weight_cnt <= wr_eop_weight_cnt;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


84             if(~rst_n)
               -1-  
85                 load_finish <= 1'd0;
                   ==>
86             else
87                 load_finish <= (wr_eop_data_cnt == 2'b11 && wr_eop_weight_cnt == 1'b1);
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


92             if(~rst_n)
               -1-  
93                 rd_sop_0 <= 1'b0;
                   ==>
94             else
95                 rd_sop_0 <= load_finish;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


100            if(~rst_n)
               -1-  
101                rd_sop_1 <= 1'b0;
                   ==>
102            else
103                rd_sop_1 <= load_finish;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


108            if(~rst_n)
               -1-  
109                clear <= 1'b0;
                   ==>
110            else
111                clear <= load_finish;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


116            if(~rst_n)
               -1-  
117                pe_compute_cnt <= 5'd0;
                   ==>
118            else if(curr_state == S_EXEC)
                    -2-  
119                pe_compute_cnt <= pe_compute_cnt + 1'b1;
                   ==>
120            else
121                pe_compute_cnt <= 5'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


126            if(~rst_n)
               -1-  
127                save_sop <= 1'b0;
                   ==>
128            else if(curr_state == S_SAVE)
                    -2-  
129                save_sop <= 1'b1;
                   ==>
130            else
131                save_sop <= 1'b0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


136            if(~rst_n)
               -1-  
137                rd_finish <= 8'b0;
                   ==>
138            else if(curr_state == S_WAIT)
                    -2-  
139                rd_finish <= rd_finish | rd_eop;
                   ==>
140            else if(rd_finish == 8'hff)
                    -3-  
141                rd_finish <= 8'd0;
                   ==>
142            else
143                rd_finish <= rd_finish;
                   ==>

Branches:

-1- -2- -3- Status      
1   -   -   Covered     
0   1   -   Covered     
0   0   1   Not Covered 
0   0   0   Covered     


148            if(~rst_n)
               -1-  
149                save_finish <= 1'b0;
                   ==>
150            else if(curr_state == S_WAIT)
                    -2-  
151                save_finish <= 1'b1;
                   ==>
152            else
153                save_finish <= 1'b0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


158            if(~rst_n)
               -1-  
159                curr_state <= S_IDLE;
                   ==>
160            else
161                curr_state <= next_state;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


166            if(~rst_n)
               -1-  
167                next_state = S_IDLE;
                   ==>
168            else begin
169                case(curr_state)
                   -2-  
170                    S_IDLE:
171                    begin
172                        if(load_finish)
                           -3-  
173                            next_state = S_EXEC;
                               ==>
174                        else
175                            next_state = S_IDLE;
                               ==>
176                    end
177                    S_EXEC:
178                    begin
179                        if(pe_compute_cnt == 5'd24)
                           -4-  
180                            next_state = S_SAVE;
                               ==>
181                        else
182                            next_state = S_EXEC;
                               ==>
183                    end
184                    S_SAVE:
185                    begin
186                        next_state = S_WAIT;
                           ==>
187                    end
188                    S_WAIT:
189                    begin
190                        if(rd_finish == 8'hff)
                           -5-  
191                            next_state = S_OVER;
                               ==>
192                        else
193                            next_state = S_WAIT;
                               ==>
194                    end
195                    S_OVER:
196                    begin
197                        next_state = S_IDLE;
                           ==>
198                    end
                       MISSING_DEFAULT
                       ==>

Branches:

-1- -2-             -3- -4- -5- Status      
1   -               -   -   -   Covered     
0   S_IDLE          1   -   -   Covered     
0   S_IDLE          0   -   -   Covered     
0   S_EXEC          -   1   -   Covered     
0   S_EXEC          -   0   -   Covered     
0   S_SAVE          -   -   -   Covered     
0   S_WAIT          -   -   1   Not Covered 
0   S_WAIT          -   -   0   Covered     
0   S_OVER          -   -   -   Not Covered 
0   MISSING_DEFAULT -   -   -   Not Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.npu_controller
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 68.64  95.38  66.67  53.41  37.50  90.24 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 68.64  95.38  66.67  53.41  37.50  90.24 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
 68.64  95.38  66.67  53.41  37.50  90.24 npu_controller 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME  
 77.79 --     --      77.79 --     --     u_NPU 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : pe_result_cache
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 75.23 --     --      75.23 --     --     

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/rtl/pe_result_cache.v

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                         
 75.23 --     --      75.23 --     --     npu_tb.u_NPU.pe_result_cache 



-------------------------------------------------------------------------------
Toggle Coverage for Module : pe_result_cache
                Total Covered Percent 
Totals          99    32      32.32   
Total Bits      2358  1774    75.23   
Total Bits 0->1 1179  978     82.95   
Total Bits 1->0 1179  796     67.51   

                                
Ports          99   32   32.32  
Port Bits      2358 1774 75.23  
Port Bits 0->1 1179 978  82.95  
Port Bits 1->0 1179 796  67.51  

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
save_sop        Yes    Yes         Yes         INPUT     
result0_0[15:0] Yes    Yes         Yes         INPUT     
result1_0[3:0]  Yes    Yes         Yes         INPUT     
result1_0[4]    No     No          Yes         INPUT     
result1_0[5]    Yes    Yes         Yes         INPUT     
result1_0[6]    No     No          Yes         INPUT     
result1_0[7]    Yes    Yes         Yes         INPUT     
result1_0[8]    No     No          Yes         INPUT     
result1_0[15:9] No     No          No          INPUT     
result2_0[15:0] Yes    Yes         Yes         INPUT     
result3_0[7:0]  Yes    Yes         Yes         INPUT     
result3_0[15:8] No     No          Yes         INPUT     
result4_0[15:0] Yes    Yes         Yes         INPUT     
result5_0[8:0]  Yes    Yes         Yes         INPUT     
result5_0[15:9] No     No          Yes         INPUT     
result6_0[8:0]  Yes    Yes         Yes         INPUT     
result6_0[15:9] No     No          Yes         INPUT     
result7_0[6:0]  Yes    Yes         Yes         INPUT     
result7_0[15:7] No     No          Yes         INPUT     
result0_1[8:0]  Yes    Yes         Yes         INPUT     
result0_1[15:9] No     No          Yes         INPUT     
result1_1[8:0]  Yes    Yes         Yes         INPUT     
result1_1[15:9] No     No          No          INPUT     
result2_1[15:0] Yes    Yes         Yes         INPUT     
result3_1[6:0]  Yes    Yes         Yes         INPUT     
result3_1[15:7] No     No          Yes         INPUT     
result4_1[15:0] Yes    Yes         Yes         INPUT     
result5_1[15:0] Yes    Yes         Yes         INPUT     
result6_1[8:0]  Yes    Yes         Yes         INPUT     
result6_1[15:9] No     No          Yes         INPUT     
result7_1[8:0]  Yes    Yes         Yes         INPUT     
result7_1[15:9] No     No          Yes         INPUT     
result0_2[7:0]  Yes    Yes         Yes         INPUT     
result0_2[15:8] No     No          No          INPUT     
result1_2[8:0]  Yes    Yes         Yes         INPUT     
result1_2[15:9] No     No          Yes         INPUT     
result2_2[6:0]  Yes    Yes         Yes         INPUT     
result2_2[15:7] No     No          Yes         INPUT     
result3_2[6:0]  Yes    Yes         Yes         INPUT     
result3_2[15:7] No     No          No          INPUT     
result4_2[2:0]  Yes    Yes         Yes         INPUT     
result4_2[3]    No     No          Yes         INPUT     
result4_2[6:4]  Yes    Yes         Yes         INPUT     
result4_2[7]    No     No          Yes         INPUT     
result4_2[8]    Yes    Yes         Yes         INPUT     
result4_2[15:9] No     No          Yes         INPUT     
result5_2[8:0]  Yes    Yes         Yes         INPUT     
result5_2[15:9] No     No          Yes         INPUT     
result6_2[15:0] Yes    Yes         Yes         INPUT     
result7_2[15:0] Yes    Yes         Yes         INPUT     
result0_3[15:0] Yes    Yes         Yes         INPUT     
result1_3[8:0]  Yes    Yes         Yes         INPUT     
result1_3[15:9] No     No          Yes         INPUT     
result2_3[15:0] Yes    Yes         Yes         INPUT     
result3_3[15:0] Yes    Yes         Yes         INPUT     
result4_3[15:0] Yes    Yes         Yes         INPUT     
result5_3[15:0] Yes    Yes         Yes         INPUT     
result6_3[15:0] Yes    Yes         Yes         INPUT     
result7_3[7:0]  Yes    Yes         Yes         INPUT     
result7_3[15:8] No     No          Yes         INPUT     
result0_4[15:0] Yes    Yes         Yes         INPUT     
result1_4[3:0]  Yes    Yes         Yes         INPUT     
result1_4[4]    No     No          Yes         INPUT     
result1_4[7:5]  Yes    Yes         Yes         INPUT     
result1_4[15:8] No     No          No          INPUT     
result2_4[0]    No     No          Yes         INPUT     
result2_4[15:1] Yes    Yes         Yes         INPUT     
result3_4[3:0]  Yes    Yes         Yes         INPUT     
result3_4[4]    No     No          Yes         INPUT     
result3_4[6:5]  Yes    Yes         Yes         INPUT     
result3_4[15:7] No     No          Yes         INPUT     
result4_4[15:0] Yes    Yes         Yes         INPUT     
result5_4[8:0]  Yes    Yes         Yes         INPUT     
result5_4[15:9] No     No          Yes         INPUT     
result6_4[15:0] Yes    Yes         Yes         INPUT     
result7_4[8:0]  Yes    Yes         Yes         INPUT     
result7_4[15:9] No     No          Yes         INPUT     
result0_5[5:0]  Yes    Yes         Yes         INPUT     
result0_5[6]    No     No          No          INPUT     
result0_5[8:7]  Yes    Yes         Yes         INPUT     
result0_5[15:9] No     No          Yes         INPUT     
result1_5[15:0] Yes    Yes         Yes         INPUT     
result2_5[15:0] Yes    Yes         Yes         INPUT     
result3_5[4:0]  Yes    Yes         Yes         INPUT     
result3_5[5]    No     No          Yes         INPUT     
result3_5[7:6]  Yes    Yes         Yes         INPUT     
result3_5[15:8] No     No          Yes         INPUT     
result4_5[0]    Yes    Yes         Yes         INPUT     
result4_5[1]    No     No          No          INPUT     
result4_5[4:2]  Yes    Yes         Yes         INPUT     
result4_5[5]    No     No          Yes         INPUT     
result4_5[15:6] Yes    Yes         Yes         INPUT     
result5_5[8:0]  Yes    Yes         Yes         INPUT     
result5_5[15:9] No     No          Yes         INPUT     
result6_5[8:0]  Yes    Yes         Yes         INPUT     
result6_5[15:9] No     No          Yes         INPUT     
result7_5[8:0]  Yes    Yes         Yes         INPUT     
result7_5[15:9] No     No          Yes         INPUT     
result0_6[15:0] Yes    Yes         Yes         INPUT     
result1_6[4:0]  Yes    Yes         Yes         INPUT     
result1_6[5]    No     No          Yes         INPUT     
result1_6[15:6] Yes    Yes         Yes         INPUT     
result2_6[15:0] Yes    Yes         Yes         INPUT     
result3_6[15:0] Yes    Yes         Yes         INPUT     
result4_6[15:0] Yes    Yes         Yes         INPUT     
result5_6[0]    No     No          Yes         INPUT     
result5_6[15:1] Yes    Yes         Yes         INPUT     
result6_6[15:0] Yes    Yes         Yes         INPUT     
result7_6[4:0]  Yes    Yes         Yes         INPUT     
result7_6[5]    No     No          Yes         INPUT     
result7_6[15:6] Yes    Yes         Yes         INPUT     
result0_7[15:0] Yes    Yes         Yes         INPUT     
result1_7[3:0]  Yes    Yes         Yes         INPUT     
result1_7[4]    No     No          Yes         INPUT     
result1_7[15:5] Yes    Yes         Yes         INPUT     
result2_7[15:0] Yes    Yes         Yes         INPUT     
result3_7[15:0] Yes    Yes         Yes         INPUT     
result4_7[15:0] Yes    Yes         Yes         INPUT     
result5_7[15:0] Yes    Yes         Yes         INPUT     
result6_7[0]    No     No          Yes         INPUT     
result6_7[3:1]  Yes    Yes         Yes         INPUT     
result6_7[4]    No     No          Yes         INPUT     
result6_7[5]    Yes    Yes         Yes         INPUT     
result6_7[6]    No     No          Yes         INPUT     
result6_7[15:7] Yes    Yes         Yes         INPUT     
result7_7[7:0]  Yes    Yes         Yes         INPUT     
result7_7[15:8] No     No          No          INPUT     
rd_sop_0        No     No          No          INPUT     
rd_sop_1        No     No          No          INPUT     
rd_sop_2        No     No          No          INPUT     
rd_sop_3        No     No          No          INPUT     
rd_sop_4        No     No          No          INPUT     
rd_sop_5        No     No          No          INPUT     
rd_sop_6        No     No          No          INPUT     
rd_sop_7        No     No          No          INPUT     
rd_eop_0        No     No          No          OUTPUT    
rd_eop_1        No     No          No          OUTPUT    
rd_eop_2        No     No          No          OUTPUT    
rd_eop_3        No     No          No          OUTPUT    
rd_eop_4        No     No          No          OUTPUT    
rd_eop_5        No     No          No          OUTPUT    
rd_eop_6        No     No          No          OUTPUT    
rd_eop_7        No     No          No          OUTPUT    
rd_vld_0        No     No          No          OUTPUT    
rd_vld_1        No     No          No          OUTPUT    
rd_vld_2        No     No          No          OUTPUT    
rd_vld_3        No     No          No          OUTPUT    
rd_vld_4        No     No          No          OUTPUT    
rd_vld_5        No     No          No          OUTPUT    
rd_vld_6        No     No          No          OUTPUT    
rd_vld_7        No     No          No          OUTPUT    
rd_data_0[15:0] No     No          No          OUTPUT    
rd_data_1[15:0] No     No          No          OUTPUT    
rd_data_2[15:0] No     No          No          OUTPUT    
rd_data_3[15:0] No     No          No          OUTPUT    
rd_data_4[15:0] No     No          No          OUTPUT    
rd_data_5[15:0] No     No          No          OUTPUT    
rd_data_6[15:0] No     No          No          OUTPUT    
rd_data_7[15:0] No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_result_cache
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 75.23 --     --      75.23 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 48.96  73.33   0.00  74.70 --      47.83 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 75.23 --     --      75.23 --     --     pe_result_cache 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME  
 77.79 --     --      77.79 --     --     u_NPU 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 47.77  73.33   0.00  69.93 --      47.83 result_ram0 
 48.10  73.33   0.00  71.24 --      47.83 result_ram1 
 46.30  73.33   0.00  64.05 --      47.83 result_ram2 
 50.47  73.33   0.00  80.72 --      47.83 result_ram3 
 48.26  73.33   0.00  71.90 --      47.83 result_ram4 
 48.26  73.33   0.00  71.90 --      47.83 result_ram5 
 51.45  73.33   0.00  84.64 --      47.83 result_ram6 
 50.06  73.33   0.00  79.08 --      47.83 result_ram7 



-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : NPU
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 77.79 --     --      77.79 --     --     

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/rtl/NPU.v

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME         
 77.79 --     --      77.79 --     --     npu_tb.u_NPU 



-------------------------------------------------------------------------------
Toggle Coverage for Module : NPU
                Total Covered Percent 
Totals          144   53      36.81   
Total Bits      3052  2374    77.79   
Total Bits 0->1 1526  1283    84.08   
Total Bits 1->0 1526  1091    71.49   

                              
Ports          43  10  23.26  
Port Bits      450 145 32.22  
Port Bits 0->1 225 73  32.44  
Port Bits 1->0 225 72  32.00  

                                  
Signals          101  43   42.57  
Signal Bits      2602 2229 85.66  
Signal Bits 0->1 1301 1210 93.01  
Signal Bits 1->0 1301 1019 78.32  

Port Details
                     Toggle Toggle 1->0 Toggle 0->1 Direction 
clk                  Yes    Yes         Yes         INPUT     
rst_n                Yes    Yes         Yes         INPUT     
wr_sop_weight        Yes    Yes         Yes         INPUT     
wr_eop_weight        Yes    Yes         Yes         INPUT     
wr_vld_weight        Yes    Yes         Yes         INPUT     
wr_data_weight[31:0] Yes    Yes         Yes         INPUT     
wr_sop_data          Yes    Yes         Yes         INPUT     
wr_eop_data          Yes    Yes         Yes         INPUT     
wr_vld_data          Yes    Yes         Yes         INPUT     
wr_data_data[31:0]   Yes    Yes         Yes         INPUT     
save_finish          No     No          Yes         OUTPUT    
rd_sop_0             No     No          No          INPUT     
rd_sop_1             No     No          No          INPUT     
rd_sop_2             No     No          No          INPUT     
rd_sop_3             No     No          No          INPUT     
rd_sop_4             No     No          No          INPUT     
rd_sop_5             No     No          No          INPUT     
rd_sop_6             No     No          No          INPUT     
rd_sop_7             No     No          No          INPUT     
rd_eop_0             No     No          No          OUTPUT    
rd_eop_1             No     No          No          OUTPUT    
rd_eop_2             No     No          No          OUTPUT    
rd_eop_3             No     No          No          OUTPUT    
rd_eop_4             No     No          No          OUTPUT    
rd_eop_5             No     No          No          OUTPUT    
rd_eop_6             No     No          No          OUTPUT    
rd_eop_7             No     No          No          OUTPUT    
rd_vld_0             No     No          No          OUTPUT    
rd_vld_1             No     No          No          OUTPUT    
rd_vld_2             No     No          No          OUTPUT    
rd_vld_3             No     No          No          OUTPUT    
rd_vld_4             No     No          No          OUTPUT    
rd_vld_5             No     No          No          OUTPUT    
rd_vld_6             No     No          No          OUTPUT    
rd_vld_7             No     No          No          OUTPUT    
rd_data_0[15:0]      No     No          No          OUTPUT    
rd_data_1[15:0]      No     No          No          OUTPUT    
rd_data_2[15:0]      No     No          No          OUTPUT    
rd_data_3[15:0]      No     No          No          OUTPUT    
rd_data_4[15:0]      No     No          No          OUTPUT    
rd_data_5[15:0]      No     No          No          OUTPUT    
rd_data_6[15:0]      No     No          No          OUTPUT    
rd_data_7[15:0]      No     No          No          OUTPUT    

Signal Details
                           Toggle Toggle 1->0 Toggle 0->1 
pe_rd_sop_0                Yes    Yes         Yes         
pe_rd_sop_1                Yes    Yes         Yes         
clear                      Yes    Yes         Yes         
save_sop                   Yes    Yes         Yes         
i_pe_array_weight_vld0     No     No          No          
i_pe_array_weight_vld1     No     No          No          
i_pe_array_weight_vld2     No     No          No          
i_pe_array_weight_vld3     No     No          No          
i_pe_array_weight_vld4     No     No          No          
i_pe_array_weight_vld5     No     No          No          
i_pe_array_weight_vld6     No     No          No          
i_pe_array_weight_vld7     No     No          No          
i_pe_array_weight0[15:0]   Yes    Yes         Yes         
i_pe_array_weight1[15:0]   Yes    Yes         Yes         
i_pe_array_weight2[15:0]   Yes    Yes         Yes         
i_pe_array_weight3[15:0]   Yes    Yes         Yes         
i_pe_array_weight4[15:0]   Yes    Yes         Yes         
i_pe_array_weight5[15:0]   Yes    Yes         Yes         
i_pe_array_weight6[15:0]   Yes    Yes         Yes         
i_pe_array_weight7[15:0]   Yes    Yes         Yes         
i_pe_array_map_vld0        No     No          No          
i_pe_array_map_vld1        No     No          No          
i_pe_array_map_vld2        No     No          No          
i_pe_array_map_vld3        No     No          No          
i_pe_array_map_vld4        No     No          No          
i_pe_array_map_vld5        No     No          No          
i_pe_array_map_vld6        No     No          No          
i_pe_array_map_vld7        No     No          No          
i_pe_array_map0[1:0]       Yes    Yes         Yes         
i_pe_array_map0[2]         No     Yes         No          
i_pe_array_map0[6:3]       Yes    Yes         Yes         
i_pe_array_map0[7]         No     No          No          
i_pe_array_map0[15:8]      Yes    Yes         Yes         
i_pe_array_map1[0]         Yes    Yes         Yes         
i_pe_array_map1[1]         No     No          No          
i_pe_array_map1[15:2]      Yes    Yes         Yes         
i_pe_array_map2[0]         Yes    Yes         Yes         
i_pe_array_map2[1]         No     No          No          
i_pe_array_map2[6:2]       Yes    Yes         Yes         
i_pe_array_map2[15:7]      No     No          No          
i_pe_array_map3[1:0]       Yes    Yes         Yes         
i_pe_array_map3[2]         No     No          No          
i_pe_array_map3[3]         Yes    Yes         Yes         
i_pe_array_map3[4]         No     No          No          
i_pe_array_map3[5]         Yes    Yes         Yes         
i_pe_array_map3[6]         No     No          No          
i_pe_array_map3[15:7]      Yes    Yes         Yes         
i_pe_array_map4[7:0]       Yes    Yes         Yes         
i_pe_array_map4[15:8]      No     No          No          
i_pe_array_map5[2:0]       Yes    Yes         Yes         
i_pe_array_map5[3]         No     No          No          
i_pe_array_map5[4]         Yes    Yes         Yes         
i_pe_array_map5[5]         No     No          No          
i_pe_array_map5[15:6]      Yes    Yes         Yes         
i_pe_array_map6[15:0]      Yes    Yes         Yes         
i_pe_array_map7[0]         No     No          Yes         
i_pe_array_map7[4:1]       Yes    Yes         Yes         
i_pe_array_map7[5]         No     No          Yes         
i_pe_array_map7[7:6]       Yes    Yes         Yes         
i_pe_array_map7[15:8]      No     No          Yes         
o_pe_array_result0_0[15:0] Yes    Yes         Yes         
o_pe_array_result0_1[8:0]  Yes    Yes         Yes         
o_pe_array_result0_1[15:9] No     No          Yes         
o_pe_array_result0_2[7:0]  Yes    Yes         Yes         
o_pe_array_result0_2[15:8] No     No          No          
o_pe_array_result0_3[15:0] Yes    Yes         Yes         
o_pe_array_result0_4[15:0] Yes    Yes         Yes         
o_pe_array_result0_5[5:0]  Yes    Yes         Yes         
o_pe_array_result0_5[6]    No     No          No          
o_pe_array_result0_5[8:7]  Yes    Yes         Yes         
o_pe_array_result0_5[15:9] No     No          Yes         
o_pe_array_result0_6[15:0] Yes    Yes         Yes         
o_pe_array_result0_7[15:0] Yes    Yes         Yes         
o_pe_array_result1_0[3:0]  Yes    Yes         Yes         
o_pe_array_result1_0[4]    No     No          Yes         
o_pe_array_result1_0[5]    Yes    Yes         Yes         
o_pe_array_result1_0[6]    No     No          Yes         
o_pe_array_result1_0[7]    Yes    Yes         Yes         
o_pe_array_result1_0[8]    No     No          Yes         
o_pe_array_result1_0[15:9] No     No          No          
o_pe_array_result1_1[8:0]  Yes    Yes         Yes         
o_pe_array_result1_1[15:9] No     No          No          
o_pe_array_result1_2[8:0]  Yes    Yes         Yes         
o_pe_array_result1_2[15:9] No     No          Yes         
o_pe_array_result1_3[8:0]  Yes    Yes         Yes         
o_pe_array_result1_3[15:9] No     No          Yes         
o_pe_array_result1_4[3:0]  Yes    Yes         Yes         
o_pe_array_result1_4[4]    No     No          Yes         
o_pe_array_result1_4[7:5]  Yes    Yes         Yes         
o_pe_array_result1_4[15:8] No     No          No          
o_pe_array_result1_5[15:0] Yes    Yes         Yes         
o_pe_array_result1_6[4:0]  Yes    Yes         Yes         
o_pe_array_result1_6[5]    No     No          Yes         
o_pe_array_result1_6[15:6] Yes    Yes         Yes         
o_pe_array_result1_7[3:0]  Yes    Yes         Yes         
o_pe_array_result1_7[4]    No     No          Yes         
o_pe_array_result1_7[15:5] Yes    Yes         Yes         
o_pe_array_result2_0[15:0] Yes    Yes         Yes         
o_pe_array_result2_1[15:0] Yes    Yes         Yes         
o_pe_array_result2_2[6:0]  Yes    Yes         Yes         
o_pe_array_result2_2[15:7] No     No          Yes         
o_pe_array_result2_3[15:0] Yes    Yes         Yes         
o_pe_array_result2_4[0]    No     No          Yes         
o_pe_array_result2_4[15:1] Yes    Yes         Yes         
o_pe_array_result2_5[15:0] Yes    Yes         Yes         
o_pe_array_result2_6[15:0] Yes    Yes         Yes         
o_pe_array_result2_7[15:0] Yes    Yes         Yes         
o_pe_array_result3_0[7:0]  Yes    Yes         Yes         
o_pe_array_result3_0[15:8] No     No          Yes         
o_pe_array_result3_1[6:0]  Yes    Yes         Yes         
o_pe_array_result3_1[15:7] No     No          Yes         
o_pe_array_result3_2[6:0]  Yes    Yes         Yes         
o_pe_array_result3_2[15:7] No     No          No          
o_pe_array_result3_3[15:0] Yes    Yes         Yes         
o_pe_array_result3_4[3:0]  Yes    Yes         Yes         
o_pe_array_result3_4[4]    No     No          Yes         
o_pe_array_result3_4[6:5]  Yes    Yes         Yes         
o_pe_array_result3_4[15:7] No     No          Yes         
o_pe_array_result3_5[4:0]  Yes    Yes         Yes         
o_pe_array_result3_5[5]    No     No          Yes         
o_pe_array_result3_5[7:6]  Yes    Yes         Yes         
o_pe_array_result3_5[15:8] No     No          Yes         
o_pe_array_result3_6[15:0] Yes    Yes         Yes         
o_pe_array_result3_7[15:0] Yes    Yes         Yes         
o_pe_array_result4_0[15:0] Yes    Yes         Yes         
o_pe_array_result4_1[15:0] Yes    Yes         Yes         
o_pe_array_result4_2[2:0]  Yes    Yes         Yes         
o_pe_array_result4_2[3]    No     No          Yes         
o_pe_array_result4_2[6:4]  Yes    Yes         Yes         
o_pe_array_result4_2[7]    No     No          Yes         
o_pe_array_result4_2[8]    Yes    Yes         Yes         
o_pe_array_result4_2[15:9] No     No          Yes         
o_pe_array_result4_3[15:0] Yes    Yes         Yes         
o_pe_array_result4_4[15:0] Yes    Yes         Yes         
o_pe_array_result4_5[0]    Yes    Yes         Yes         
o_pe_array_result4_5[1]    No     No          No          
o_pe_array_result4_5[4:2]  Yes    Yes         Yes         
o_pe_array_result4_5[5]    No     No          Yes         
o_pe_array_result4_5[15:6] Yes    Yes         Yes         
o_pe_array_result4_6[15:0] Yes    Yes         Yes         
o_pe_array_result4_7[15:0] Yes    Yes         Yes         
o_pe_array_result5_0[8:0]  Yes    Yes         Yes         
o_pe_array_result5_0[15:9] No     No          Yes         
o_pe_array_result5_1[15:0] Yes    Yes         Yes         
o_pe_array_result5_2[8:0]  Yes    Yes         Yes         
o_pe_array_result5_2[15:9] No     No          Yes         
o_pe_array_result5_3[15:0] Yes    Yes         Yes         
o_pe_array_result5_4[8:0]  Yes    Yes         Yes         
o_pe_array_result5_4[15:9] No     No          Yes         
o_pe_array_result5_5[8:0]  Yes    Yes         Yes         
o_pe_array_result5_5[15:9] No     No          Yes         
o_pe_array_result5_6[0]    No     No          Yes         
o_pe_array_result5_6[15:1] Yes    Yes         Yes         
o_pe_array_result5_7[15:0] Yes    Yes         Yes         
o_pe_array_result6_0[8:0]  Yes    Yes         Yes         
o_pe_array_result6_0[15:9] No     No          Yes         
o_pe_array_result6_1[8:0]  Yes    Yes         Yes         
o_pe_array_result6_1[15:9] No     No          Yes         
o_pe_array_result6_2[15:0] Yes    Yes         Yes         
o_pe_array_result6_3[15:0] Yes    Yes         Yes         
o_pe_array_result6_4[15:0] Yes    Yes         Yes         
o_pe_array_result6_5[8:0]  Yes    Yes         Yes         
o_pe_array_result6_5[15:9] No     No          Yes         
o_pe_array_result6_6[15:0] Yes    Yes         Yes         
o_pe_array_result6_7[0]    No     No          Yes         
o_pe_array_result6_7[3:1]  Yes    Yes         Yes         
o_pe_array_result6_7[4]    No     No          Yes         
o_pe_array_result6_7[5]    Yes    Yes         Yes         
o_pe_array_result6_7[6]    No     No          Yes         
o_pe_array_result6_7[15:7] Yes    Yes         Yes         
o_pe_array_result7_0[6:0]  Yes    Yes         Yes         
o_pe_array_result7_0[15:7] No     No          Yes         
o_pe_array_result7_1[8:0]  Yes    Yes         Yes         
o_pe_array_result7_1[15:9] No     No          Yes         
o_pe_array_result7_2[15:0] Yes    Yes         Yes         
o_pe_array_result7_3[7:0]  Yes    Yes         Yes         
o_pe_array_result7_3[15:8] No     No          Yes         
o_pe_array_result7_4[8:0]  Yes    Yes         Yes         
o_pe_array_result7_4[15:9] No     No          Yes         
o_pe_array_result7_5[8:0]  Yes    Yes         Yes         
o_pe_array_result7_5[15:9] No     No          Yes         
o_pe_array_result7_6[4:0]  Yes    Yes         Yes         
o_pe_array_result7_6[5]    No     No          Yes         
o_pe_array_result7_6[15:6] Yes    Yes         Yes         
o_pe_array_result7_7[7:0]  Yes    Yes         Yes         
o_pe_array_result7_7[15:8] No     No          No          
i_pe_array_clear           Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 77.79 --     --      77.79 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 76.85  96.34  70.36  86.68  37.50  93.36 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
 77.79 --     --      77.79 --     --     NPU  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 68.64  95.38  66.67  53.41  37.50  90.24 npu_controller    
 96.32 100.00 --      88.97 --     100.00 pe_array          
 89.35  97.37  82.86  81.95 --      95.24 pe_control_data   
 88.24  97.62  63.64  96.45 --      95.24 pe_control_weight 
 48.96  73.33   0.00  74.70 --      47.83 pe_result_cache   



-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : pe_control_data
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 78.33 --     --      78.33 --     --     

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/rtl/pe_control.v

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                         
 78.33 --     --      78.33 --     --     npu_tb.u_NPU.pe_control_data 



-------------------------------------------------------------------------------
Toggle Coverage for Module : pe_control_data
                Total Covered Percent 
Totals          71    49      69.01   
Total Bits      1292  1012    78.33   
Total Bits 0->1 646   515     79.72   
Total Bits 1->0 646   497     76.93   

                              
Ports          15  8   53.33  
Port Bits      332 271 81.63  
Port Bits 0->1 166 140 84.34  
Port Bits 1->0 166 131 78.92  

                                
Signals          56  41  73.21  
Signal Bits      960 741 77.19  
Signal Bits 0->1 480 375 78.12  
Signal Bits 1->0 480 366 76.25  

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
wr_sop          Yes    Yes         Yes         INPUT     
wr_eop          Yes    Yes         Yes         INPUT     
wr_vld          Yes    Yes         Yes         INPUT     
wr_data[31:0]   Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
pe_data_0[1:0]  Yes    Yes         Yes         OUTPUT    
pe_data_0[2]    No     Yes         No          OUTPUT    
pe_data_0[6:3]  Yes    Yes         Yes         OUTPUT    
pe_data_0[7]    No     No          No          OUTPUT    
pe_data_0[15:8] Yes    Yes         Yes         OUTPUT    
pe_data_1[0]    Yes    Yes         Yes         OUTPUT    
pe_data_1[1]    No     No          No          OUTPUT    
pe_data_1[15:2] Yes    Yes         Yes         OUTPUT    
pe_data_2[0]    Yes    Yes         Yes         OUTPUT    
pe_data_2[1]    No     No          No          OUTPUT    
pe_data_2[6:2]  Yes    Yes         Yes         OUTPUT    
pe_data_2[15:7] No     No          No          OUTPUT    
pe_data_3[1:0]  Yes    Yes         Yes         OUTPUT    
pe_data_3[2]    No     No          No          OUTPUT    
pe_data_3[3]    Yes    Yes         Yes         OUTPUT    
pe_data_3[4]    No     No          No          OUTPUT    
pe_data_3[5]    Yes    Yes         Yes         OUTPUT    
pe_data_3[6]    No     No          No          OUTPUT    
pe_data_3[15:7] Yes    Yes         Yes         OUTPUT    
pe_data_4[7:0]  Yes    Yes         Yes         OUTPUT    
pe_data_4[15:8] No     No          No          OUTPUT    
pe_data_5[2:0]  Yes    Yes         Yes         OUTPUT    
pe_data_5[3]    No     No          No          OUTPUT    
pe_data_5[4]    Yes    Yes         Yes         OUTPUT    
pe_data_5[5]    No     No          No          OUTPUT    
pe_data_5[15:6] Yes    Yes         Yes         OUTPUT    
pe_data_6[15:0] Yes    Yes         Yes         OUTPUT    
pe_data_7[0]    No     No          Yes         OUTPUT    
pe_data_7[4:1]  Yes    Yes         Yes         OUTPUT    
pe_data_7[5]    No     No          Yes         OUTPUT    
pe_data_7[7:6]  Yes    Yes         Yes         OUTPUT    
pe_data_7[15:8] No     No          Yes         OUTPUT    

Signal Details
                    Toggle Toggle 1->0 Toggle 0->1 
ram0_wr_en          Yes    Yes         Yes         
ram0_wr_strb[1:0]   Yes    Yes         Yes         
ram0_wr_addr[3:0]   Yes    Yes         Yes         
ram0_wr_data[0]     Yes    Yes         Yes         
ram0_wr_data[1]     No     No          No          
ram0_wr_data[5:2]   Yes    Yes         Yes         
ram0_wr_data[7:6]   No     No          No          
ram0_wr_data[31:8]  Yes    Yes         Yes         
ram1_wr_en          Yes    Yes         Yes         
ram1_wr_strb[1:0]   Yes    Yes         Yes         
ram1_wr_addr[3:0]   Yes    Yes         Yes         
ram1_wr_data[0]     Yes    Yes         Yes         
ram1_wr_data[1]     No     No          No          
ram1_wr_data[5:2]   Yes    Yes         Yes         
ram1_wr_data[7:6]   No     No          No          
ram1_wr_data[15:8]  Yes    Yes         Yes         
ram1_wr_data[18:16] No     No          No          
ram1_wr_data[23:19] Yes    Yes         Yes         
ram1_wr_data[31:24] No     No          No          
ram2_wr_en          Yes    Yes         Yes         
ram2_wr_strb[1:0]   Yes    Yes         Yes         
ram2_wr_addr[3:0]   Yes    Yes         Yes         
ram2_wr_data[0]     Yes    Yes         Yes         
ram2_wr_data[1]     No     No          No          
ram2_wr_data[2]     Yes    Yes         Yes         
ram2_wr_data[4:3]   No     No          No          
ram2_wr_data[5]     Yes    Yes         Yes         
ram2_wr_data[15:6]  No     No          No          
ram2_wr_data[17:16] Yes    Yes         Yes         
ram2_wr_data[18]    No     No          No          
ram2_wr_data[31:19] Yes    Yes         Yes         
ram3_wr_en          Yes    Yes         Yes         
ram3_wr_strb[1:0]   Yes    Yes         Yes         
ram3_wr_addr[3:0]   Yes    Yes         Yes         
ram3_wr_data[0]     No     No          No          
ram3_wr_data[1]     Yes    Yes         Yes         
ram3_wr_data[4:2]   No     No          No          
ram3_wr_data[5]     Yes    Yes         Yes         
ram3_wr_data[15:6]  No     No          No          
ram3_wr_data[21:16] Yes    Yes         Yes         
ram3_wr_data[22]    No     No          No          
ram3_wr_data[31:23] Yes    Yes         Yes         
ram4_wr_en          Yes    Yes         Yes         
ram4_wr_strb[1:0]   Yes    Yes         Yes         
ram4_wr_addr[3:0]   Yes    Yes         Yes         
ram4_wr_data[1:0]   Yes    Yes         Yes         
ram4_wr_data[3:2]   No     No          No          
ram4_wr_data[4]     Yes    Yes         Yes         
ram4_wr_data[5]     No     No          No          
ram4_wr_data[7:6]   Yes    Yes         Yes         
ram4_wr_data[16:8]  No     No          No          
ram4_wr_data[21:17] Yes    Yes         Yes         
ram4_wr_data[22]    No     No          No          
ram4_wr_data[31:23] Yes    Yes         Yes         
ram5_wr_en          Yes    Yes         Yes         
ram5_wr_strb[1:0]   Yes    Yes         Yes         
ram5_wr_addr[3:0]   Yes    Yes         Yes         
ram5_wr_data[2:0]   Yes    Yes         Yes         
ram5_wr_data[3]     No     No          No          
ram5_wr_data[4]     Yes    Yes         Yes         
ram5_wr_data[5]     No     No          No          
ram5_wr_data[7:6]   Yes    Yes         Yes         
ram5_wr_data[16:8]  No     No          No          
ram5_wr_data[17]    Yes    Yes         Yes         
ram5_wr_data[19:18] No     No          No          
ram5_wr_data[20]    Yes    Yes         Yes         
ram5_wr_data[22:21] No     No          No          
ram5_wr_data[31:23] Yes    Yes         Yes         
ram6_wr_en          Yes    Yes         Yes         
ram6_wr_strb[1:0]   Yes    Yes         Yes         
ram6_wr_addr[3:0]   Yes    Yes         Yes         
ram6_wr_data[21:0]  Yes    Yes         Yes         
ram6_wr_data[22]    No     No          No          
ram6_wr_data[31:23] Yes    Yes         Yes         
ram7_wr_en          Yes    Yes         Yes         
ram7_wr_strb[1:0]   Yes    Yes         Yes         
ram7_wr_addr[3:0]   Yes    Yes         Yes         
ram7_wr_data[0]     Yes    Yes         Yes         
ram7_wr_data[1]     No     No          No          
ram7_wr_data[3:2]   Yes    Yes         Yes         
ram7_wr_data[4]     No     No          No          
ram7_wr_data[6:5]   Yes    Yes         Yes         
ram7_wr_data[7]     No     No          No          
ram7_wr_data[21:8]  Yes    Yes         Yes         
ram7_wr_data[22]    No     No          No          
ram7_wr_data[31:23] Yes    Yes         Yes         
ram0_rd_en          Yes    Yes         Yes         
ram0_rd_addr[3:0]   Yes    Yes         Yes         
ram0_rd_data[1:0]   Yes    Yes         Yes         
ram0_rd_data[2]     No     Yes         No          
ram0_rd_data[6:3]   Yes    Yes         Yes         
ram0_rd_data[7]     No     No          No          
ram0_rd_data[15:8]  Yes    Yes         Yes         
ram1_rd_en          Yes    Yes         Yes         
ram1_rd_addr[3:0]   Yes    Yes         Yes         
ram1_rd_data[0]     Yes    Yes         Yes         
ram1_rd_data[1]     No     No          No          
ram1_rd_data[15:2]  Yes    Yes         Yes         
ram2_rd_en          Yes    Yes         Yes         
ram2_rd_addr[3:0]   Yes    Yes         Yes         
ram2_rd_data[0]     Yes    Yes         Yes         
ram2_rd_data[1]     No     No          No          
ram2_rd_data[6:2]   Yes    Yes         Yes         
ram2_rd_data[15:7]  No     No          No          
ram3_rd_en          Yes    Yes         Yes         
ram3_rd_addr[3:0]   Yes    Yes         Yes         
ram3_rd_data[1:0]   Yes    Yes         Yes         
ram3_rd_data[2]     No     No          No          
ram3_rd_data[3]     Yes    Yes         Yes         
ram3_rd_data[4]     No     No          No          
ram3_rd_data[5]     Yes    Yes         Yes         
ram3_rd_data[6]     No     No          No          
ram3_rd_data[15:7]  Yes    Yes         Yes         
ram4_rd_en          Yes    Yes         Yes         
ram4_rd_addr[3:0]   Yes    Yes         Yes         
ram4_rd_data[7:0]   Yes    Yes         Yes         
ram4_rd_data[15:8]  No     No          No          
ram5_rd_en          Yes    Yes         Yes         
ram5_rd_addr[3:0]   Yes    Yes         Yes         
ram5_rd_data[2:0]   Yes    Yes         Yes         
ram5_rd_data[3]     No     No          No          
ram5_rd_data[4]     Yes    Yes         Yes         
ram5_rd_data[5]     No     No          No          
ram5_rd_data[15:6]  Yes    Yes         Yes         
ram6_rd_en          Yes    Yes         Yes         
ram6_rd_addr[3:0]   Yes    Yes         Yes         
ram6_rd_data[15:0]  Yes    Yes         Yes         
ram7_rd_en          Yes    Yes         Yes         
ram7_rd_addr[3:0]   Yes    Yes         Yes         
ram7_rd_data[0]     No     No          Yes         
ram7_rd_data[4:1]   Yes    Yes         Yes         
ram7_rd_data[5]     No     No          Yes         
ram7_rd_data[7:6]   Yes    Yes         Yes         
ram7_rd_data[15:8]  No     No          Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 78.33 --     --      78.33 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 89.35  97.37  82.86  81.95 --      95.24 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME  
 77.79 --     --      77.79 --     --     u_NPU 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME             
 86.68  92.31 --      92.74 --      75.00 dual_port_ram_0  
 81.04  92.31 --      75.81 --      75.00 dual_port_ram_1  
 76.20  92.31 --      61.29 --      75.00 dual_port_ram_2  
 79.43  92.31 --      70.97 --      75.00 dual_port_ram_3  
 77.81  92.31 --      66.13 --      75.00 dual_port_ram_4  
 79.96  92.31 --      72.58 --      75.00 dual_port_ram_5  
 88.56  92.31 --      98.39 --      75.00 dual_port_ram_6  
 84.26  92.31 --      85.48 --      75.00 dual_port_ram_7  
 98.12 100.00 100.00  92.50 --     100.00 ram_rd_control_0 
 98.75 100.00 100.00  95.00 --     100.00 ram_rd_control_1 
 87.50 100.00 100.00  50.00 --     100.00 ram_rd_control_2 
 96.25 100.00 100.00  85.00 --     100.00 ram_rd_control_3 
 90.00 100.00 100.00  60.00 --     100.00 ram_rd_control_4 
 97.50 100.00 100.00  90.00 --     100.00 ram_rd_control_5 
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control_6 
 93.75 100.00 100.00  75.00 --     100.00 ram_rd_control_7 
 92.31 100.00  81.25  88.00 --     100.00 ram_wr_control_0 
 90.71 100.00  81.25  81.60 --     100.00 ram_wr_control_1 
 90.51 100.00  81.25  80.80 --     100.00 ram_wr_control_2 
 90.71 100.00  81.25  81.60 --     100.00 ram_wr_control_3 
 91.31 100.00  81.25  84.00 --     100.00 ram_wr_control_4 
 91.51 100.00  81.25  84.80 --     100.00 ram_wr_control_5 
 94.31 100.00  81.25  96.00 --     100.00 ram_wr_control_6 
 94.31 100.00  81.25  96.00 --     100.00 ram_wr_control_7 



-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : ram_rd_control_interface
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 92.50 --     --      92.50 --     --     

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/tb/tb/npu_interface.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 92.50 --     --      92.50 --     --     npu_tb.ram_rd_vif 



-------------------------------------------------------------------------------
Toggle Coverage for Module : ram_rd_control_interface
                Total Covered Percent 
Totals          7     5       71.43   
Total Bits      80    74      92.50   
Total Bits 0->1 40    36      90.00   
Total Bits 1->0 40    38      95.00   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                              
Signals          5  3  60.00  
Signal Bits      76 70 92.11  
Signal Bits 0->1 38 34 89.47  
Signal Bits 1->0 38 36 94.74  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
rd_sop          Yes    Yes         Yes         
ram_rd_en       Yes    Yes         Yes         
ram_raddr[3:0]  Yes    Yes         Yes         
ram_rdata[1:0]  Yes    Yes         Yes         
ram_rdata[2]    No     Yes         No          
ram_rdata[6:3]  Yes    Yes         Yes         
ram_rdata[7]    No     No          No          
ram_rdata[15:8] Yes    Yes         Yes         
pe_data[1:0]    Yes    Yes         Yes         
pe_data[2]      No     Yes         No          
pe_data[6:3]    Yes    Yes         Yes         
pe_data[7]      No     No          No          
pe_data[15:8]   Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram_rd_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 92.50 --     --      92.50 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 92.50 --     --      92.50 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                     
 92.50 --     --      92.50 --     --     ram_rd_control_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : ram_wr_control_weight
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.12 100.00  80.00  96.46 --     100.00 

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/rtl/ram_wr_control.v

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                                            
 87.35 100.00  60.00  89.38 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_wr_control_0 
 87.57 100.00  60.00  90.27 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_wr_control_2 
 87.79 100.00  60.00  91.15 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_wr_control_4 
 88.01 100.00  60.00  92.04 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_wr_control_3 
 88.23 100.00  60.00  92.92 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_wr_control_1 
 88.45 100.00  60.00  93.81 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_wr_control_6 
 88.67 100.00  60.00  94.69 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_wr_control_5 
 88.89 100.00  60.00  95.58 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_wr_control_7 



-------------------------------------------------------------------------------
Line Coverage for Module : ram_wr_control_weight

             Line No.   Total   Covered  Percent
TOTAL                       46       46   100.00
ALWAYS            165        5        5   100.00
ALWAYS            175        7        7   100.00
ALWAYS            187        7        7   100.00
ALWAYS            199        7        7   100.00
ALWAYS            211        5        5   100.00
ALWAYS            221        5        5   100.00
ALWAYS            231        5        5   100.00
ALWAYS            241        5        5   100.00

164                     begin
165        1/1              if(~rst_n)
166        1/1                  work_enable <= 1'b0;
167        1/1              else if(wr_sop || (beat_cnt == beat_msb))
168        1/1                  work_enable <= ~work_enable;
169                         else
170        1/1                  work_enable <= work_enable;
171                     end
172                     
173                     always@(posedge clk or negedge rst_n)
174                     begin
175        1/1              if(~rst_n)
176        1/1                  beat_cnt <= 1'b0;
177        1/1              else if(wr_sop || wr_eop)
178        1/1                  beat_cnt <= 1'b0;
179        1/1              else if(work_enable)
180        1/1                  beat_cnt <= beat_cnt + 1;
181                         else
182        1/1                  beat_cnt <= beat_cnt;
183                     end
184                     
185                     always@(posedge clk or negedge rst_n)
186                     begin
187        1/1              if(~rst_n)
188        1/1                  write_addr <= 20'd0;
189        1/1              else if(wr_sop)
190        1/1                  write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
191        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
192        1/1                  write_addr <= write_addr >> 4;
193                         else
194        1/1                  write_addr <= write_addr;
195                     end
196                     
197                     always@(posedge clk or negedge rst_n)
198                     begin
199        1/1              if(~rst_n)
200        1/1                  write_strb <= 10'd0;
201        1/1              else if(wr_sop)
202        1/1                  write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
203        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
204        1/1                  write_strb <= write_strb >> 2;
205                         else
206        1/1                  write_strb <= write_strb;
207                     end
208                     
209                     always@(posedge clk or negedge rst_n)
210                     begin
211        1/1              if(~rst_n)
212        1/1                  ram_wr_en <= 1'b0;
213        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
214        1/1                  ram_wr_en <= 1'b1;
215                         else
216        1/1                  ram_wr_en <= 1'b0;
217                     end
218                     
219                     always@(posedge clk or negedge rst_n)
220                     begin
221        1/1              if(~rst_n)
222        1/1                  ram_wr_addr <= 4'd0;
223        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
224        1/1                  ram_wr_addr <= write_addr[3:0];
225                         else
226        1/1                  ram_wr_addr <= 4'd0;
227                     end
228                     
229                     always@(posedge clk or negedge rst_n)
230                     begin
231        1/1              if(~rst_n)
232        1/1                  ram_wr_strb <= 2'd0;
233        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
234        1/1                  ram_wr_strb <= write_strb;
235                         else
236        1/1                  ram_wr_strb <= 2'd0;
237                     end
238                     
239                     always@(posedge clk or negedge rst_n)
240                     begin
241        1/1              if(~rst_n)
242        1/1                  ram_wr_data <= 32'd0;
243        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
244        1/1                  ram_wr_data <= wr_data;
245                         else
246        1/1                  ram_wr_data <= 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Module : ram_wr_control_weight

               Total   Covered  Percent
Conditions         30       24    80.00
Logical            30       24    80.00
Non-Logical         0        0
Event               0        0

 LINE       167
 EXPRESSION (wr_sop || (beat_cnt == beat_msb))
             ---1--    -----------2----------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       177
 EXPRESSION (wr_sop || wr_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       191
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       203
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       213
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       223
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       233
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       243
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Module : ram_wr_control_weight
                Total Covered Percent 
Totals          14    13      92.86   
Total Bits      226   218     96.46   
Total Bits 0->1 113   109     96.46   
Total Bits 1->0 113   109     96.46   

                              
Ports          10  10  100.00 
Port Bits      152 152 100.00 
Port Bits 0->1 76  76  100.00 
Port Bits 1->0 76  76  100.00 

                              
Signals          4  3  75.00  
Signal Bits      74 66 89.19  
Signal Bits 0->1 37 33 89.19  
Signal Bits 1->0 37 33 89.19  

Port Details
                  Toggle Toggle 1->0 Toggle 0->1 Direction 
clk               Yes    Yes         Yes         INPUT     
rst_n             Yes    Yes         Yes         INPUT     
wr_sop            Yes    Yes         Yes         INPUT     
wr_eop            Yes    Yes         Yes         INPUT     
wr_vld            Yes    Yes         Yes         INPUT     
wr_data[31:0]     Yes    Yes         Yes         INPUT     
ram_wr_en         Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[31:0] Yes    Yes         Yes         OUTPUT    

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
work_enable       Yes    Yes         Yes         
beat_cnt[5:0]     Yes    Yes         Yes         
write_addr[3:0]   Yes    Yes         Yes         
write_addr[4]     No     No          No          
write_addr[7:5]   Yes    Yes         Yes         
write_addr[8]     No     No          No          
write_addr[11:9]  Yes    Yes         Yes         
write_addr[12]    No     No          No          
write_addr[15:13] Yes    Yes         Yes         
write_addr[16]    No     No          No          
write_addr[19:17] Yes    Yes         Yes         
write_strb[9:0]   Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Module : ram_wr_control_weight
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       165      3     3       100.00  
IF       175      4     4       100.00  
IF       187      4     4       100.00  
IF       199      4     4       100.00  
IF       211      3     3       100.00  
IF       221      3     3       100.00  
IF       231      3     3       100.00  
IF       241      3     3       100.00  


165            if(~rst_n)
               -1-  
166                work_enable <= 1'b0;
                   ==>
167            else if(wr_sop || (beat_cnt == beat_msb))
                    -2-  
168                work_enable <= ~work_enable;
                   ==>
169            else
170                work_enable <= work_enable;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


175            if(~rst_n)
               -1-  
176                beat_cnt <= 1'b0;
                   ==>
177            else if(wr_sop || wr_eop)
                    -2-  
178                beat_cnt <= 1'b0;
                   ==>
179            else if(work_enable)
                    -3-  
180                beat_cnt <= beat_cnt + 1;
                   ==>
181            else
182                beat_cnt <= beat_cnt;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


187            if(~rst_n)
               -1-  
188                write_addr <= 20'd0;
                   ==>
189            else if(wr_sop)
                    -2-  
190                write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
                   ==>
191            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
192                write_addr <= write_addr >> 4;
                   ==>
193            else
194                write_addr <= write_addr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


199            if(~rst_n)
               -1-  
200                write_strb <= 10'd0;
                   ==>
201            else if(wr_sop)
                    -2-  
202                write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
                   ==>
203            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
204                write_strb <= write_strb >> 2;
                   ==>
205            else
206                write_strb <= write_strb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


211            if(~rst_n)
               -1-  
212                ram_wr_en <= 1'b0;
                   ==>
213            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
214                ram_wr_en <= 1'b1;
                   ==>
215            else
216                ram_wr_en <= 1'b0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


221            if(~rst_n)
               -1-  
222                ram_wr_addr <= 4'd0;
                   ==>
223            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
224                ram_wr_addr <= write_addr[3:0];
                   ==>
225            else
226                ram_wr_addr <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


231            if(~rst_n)
               -1-  
232                ram_wr_strb <= 2'd0;
                   ==>
233            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
234                ram_wr_strb <= write_strb;
                   ==>
235            else
236                ram_wr_strb <= 2'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


241            if(~rst_n)
               -1-  
242                ram_wr_data <= 32'd0;
                   ==>
243            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
244                ram_wr_data <= wr_data;
                   ==>
245            else
246                ram_wr_data <= 32'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 87.35 100.00  60.00  89.38 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 87.35 100.00  60.00  89.38 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                  
 94.12 100.00  80.00  96.46 --     100.00 ram_wr_control_weight 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_0

             Line No.   Total   Covered  Percent
TOTAL                       46       46   100.00
ALWAYS            165        5        5   100.00
ALWAYS            175        7        7   100.00
ALWAYS            187        7        7   100.00
ALWAYS            199        7        7   100.00
ALWAYS            211        5        5   100.00
ALWAYS            221        5        5   100.00
ALWAYS            231        5        5   100.00
ALWAYS            241        5        5   100.00

164                     begin
165        1/1              if(~rst_n)
166        1/1                  work_enable <= 1'b0;
167        1/1              else if(wr_sop || (beat_cnt == beat_msb))
168        1/1                  work_enable <= ~work_enable;
169                         else
170        1/1                  work_enable <= work_enable;
171                     end
172                     
173                     always@(posedge clk or negedge rst_n)
174                     begin
175        1/1              if(~rst_n)
176        1/1                  beat_cnt <= 1'b0;
177        1/1              else if(wr_sop || wr_eop)
178        1/1                  beat_cnt <= 1'b0;
179        1/1              else if(work_enable)
180        1/1                  beat_cnt <= beat_cnt + 1;
181                         else
182        1/1                  beat_cnt <= beat_cnt;
183                     end
184                     
185                     always@(posedge clk or negedge rst_n)
186                     begin
187        1/1              if(~rst_n)
188        1/1                  write_addr <= 20'd0;
189        1/1              else if(wr_sop)
190        1/1                  write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
191        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
192        1/1                  write_addr <= write_addr >> 4;
193                         else
194        1/1                  write_addr <= write_addr;
195                     end
196                     
197                     always@(posedge clk or negedge rst_n)
198                     begin
199        1/1              if(~rst_n)
200        1/1                  write_strb <= 10'd0;
201        1/1              else if(wr_sop)
202        1/1                  write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
203        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
204        1/1                  write_strb <= write_strb >> 2;
205                         else
206        1/1                  write_strb <= write_strb;
207                     end
208                     
209                     always@(posedge clk or negedge rst_n)
210                     begin
211        1/1              if(~rst_n)
212        1/1                  ram_wr_en <= 1'b0;
213        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
214        1/1                  ram_wr_en <= 1'b1;
215                         else
216        1/1                  ram_wr_en <= 1'b0;
217                     end
218                     
219                     always@(posedge clk or negedge rst_n)
220                     begin
221        1/1              if(~rst_n)
222        1/1                  ram_wr_addr <= 4'd0;
223        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
224        1/1                  ram_wr_addr <= write_addr[3:0];
225                         else
226        1/1                  ram_wr_addr <= 4'd0;
227                     end
228                     
229                     always@(posedge clk or negedge rst_n)
230                     begin
231        1/1              if(~rst_n)
232        1/1                  ram_wr_strb <= 2'd0;
233        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
234        1/1                  ram_wr_strb <= write_strb;
235                         else
236        1/1                  ram_wr_strb <= 2'd0;
237                     end
238                     
239                     always@(posedge clk or negedge rst_n)
240                     begin
241        1/1              if(~rst_n)
242        1/1                  ram_wr_data <= 32'd0;
243        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
244        1/1                  ram_wr_data <= wr_data;
245                         else
246        1/1                  ram_wr_data <= 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_0

               Total   Covered  Percent
Conditions         30       18    60.00
Logical            30       18    60.00
Non-Logical         0        0
Event               0        0

 LINE       167
 EXPRESSION (wr_sop || (beat_cnt == beat_msb))
             ---1--    -----------2----------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       177
 EXPRESSION (wr_sop || wr_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       191
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Not Covered
 1   1   0  Not Covered
 1   1   1  Covered

 LINE       203
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Not Covered
 1   1   0  Not Covered
 1   1   1  Covered

 LINE       213
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Not Covered
 1   1   0  Not Covered
 1   1   1  Covered

 LINE       223
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Not Covered
 1   1   0  Not Covered
 1   1   1  Covered

 LINE       233
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Not Covered
 1   1   0  Not Covered
 1   1   1  Covered

 LINE       243
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Not Covered
 1   1   0  Not Covered
 1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_0
                Total Covered Percent 
Totals          14    10      71.43   
Total Bits      226   202     89.38   
Total Bits 0->1 113   101     89.38   
Total Bits 1->0 113   101     89.38   

                              
Ports          10  9   90.00  
Port Bits      152 150 98.68  
Port Bits 0->1 76  75  98.68  
Port Bits 1->0 76  75  98.68  

                              
Signals          4  1  25.00  
Signal Bits      74 52 70.27  
Signal Bits 0->1 37 26 70.27  
Signal Bits 1->0 37 26 70.27  

Port Details
                  Toggle Toggle 1->0 Toggle 0->1 Direction 
clk               Yes    Yes         Yes         INPUT     
rst_n             Yes    Yes         Yes         INPUT     
wr_sop            Yes    Yes         Yes         INPUT     
wr_eop            Yes    Yes         Yes         INPUT     
wr_vld            Yes    Yes         Yes         INPUT     
wr_data[31:0]     Yes    Yes         Yes         INPUT     
ram_wr_en         Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_addr[0]    No     No          No          OUTPUT    
ram_wr_addr[3:1]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[31:0] Yes    Yes         Yes         OUTPUT    

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
work_enable       Yes    Yes         Yes         
beat_cnt[2:0]     Yes    Yes         Yes         
beat_cnt[5:3]     No     No          No          
write_addr[0]     No     No          No          
write_addr[3:1]   Yes    Yes         Yes         
write_addr[4]     No     No          No          
write_addr[7:5]   Yes    Yes         Yes         
write_addr[8]     No     No          No          
write_addr[11:9]  Yes    Yes         Yes         
write_addr[12]    No     No          No          
write_addr[15:13] Yes    Yes         Yes         
write_addr[18:16] No     No          No          
write_addr[19]    Yes    Yes         Yes         
write_strb[8:0]   Yes    Yes         Yes         
write_strb[9]     No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_0
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       165      3     3       100.00  
IF       175      4     4       100.00  
IF       187      4     4       100.00  
IF       199      4     4       100.00  
IF       211      3     3       100.00  
IF       221      3     3       100.00  
IF       231      3     3       100.00  
IF       241      3     3       100.00  


165            if(~rst_n)
               -1-  
166                work_enable <= 1'b0;
                   ==>
167            else if(wr_sop || (beat_cnt == beat_msb))
                    -2-  
168                work_enable <= ~work_enable;
                   ==>
169            else
170                work_enable <= work_enable;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


175            if(~rst_n)
               -1-  
176                beat_cnt <= 1'b0;
                   ==>
177            else if(wr_sop || wr_eop)
                    -2-  
178                beat_cnt <= 1'b0;
                   ==>
179            else if(work_enable)
                    -3-  
180                beat_cnt <= beat_cnt + 1;
                   ==>
181            else
182                beat_cnt <= beat_cnt;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


187            if(~rst_n)
               -1-  
188                write_addr <= 20'd0;
                   ==>
189            else if(wr_sop)
                    -2-  
190                write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
                   ==>
191            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
192                write_addr <= write_addr >> 4;
                   ==>
193            else
194                write_addr <= write_addr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


199            if(~rst_n)
               -1-  
200                write_strb <= 10'd0;
                   ==>
201            else if(wr_sop)
                    -2-  
202                write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
                   ==>
203            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
204                write_strb <= write_strb >> 2;
                   ==>
205            else
206                write_strb <= write_strb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


211            if(~rst_n)
               -1-  
212                ram_wr_en <= 1'b0;
                   ==>
213            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
214                ram_wr_en <= 1'b1;
                   ==>
215            else
216                ram_wr_en <= 1'b0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


221            if(~rst_n)
               -1-  
222                ram_wr_addr <= 4'd0;
                   ==>
223            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
224                ram_wr_addr <= write_addr[3:0];
                   ==>
225            else
226                ram_wr_addr <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


231            if(~rst_n)
               -1-  
232                ram_wr_strb <= 2'd0;
                   ==>
233            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
234                ram_wr_strb <= write_strb;
                   ==>
235            else
236                ram_wr_strb <= 2'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


241            if(~rst_n)
               -1-  
242                ram_wr_data <= 32'd0;
                   ==>
243            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
244                ram_wr_data <= wr_data;
                   ==>
245            else
246                ram_wr_data <= 32'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 87.57 100.00  60.00  90.27 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 87.57 100.00  60.00  90.27 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                  
 94.12 100.00  80.00  96.46 --     100.00 ram_wr_control_weight 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_2

             Line No.   Total   Covered  Percent
TOTAL                       46       46   100.00
ALWAYS            165        5        5   100.00
ALWAYS            175        7        7   100.00
ALWAYS            187        7        7   100.00
ALWAYS            199        7        7   100.00
ALWAYS            211        5        5   100.00
ALWAYS            221        5        5   100.00
ALWAYS            231        5        5   100.00
ALWAYS            241        5        5   100.00

164                     begin
165        1/1              if(~rst_n)
166        1/1                  work_enable <= 1'b0;
167        1/1              else if(wr_sop || (beat_cnt == beat_msb))
168        1/1                  work_enable <= ~work_enable;
169                         else
170        1/1                  work_enable <= work_enable;
171                     end
172                     
173                     always@(posedge clk or negedge rst_n)
174                     begin
175        1/1              if(~rst_n)
176        1/1                  beat_cnt <= 1'b0;
177        1/1              else if(wr_sop || wr_eop)
178        1/1                  beat_cnt <= 1'b0;
179        1/1              else if(work_enable)
180        1/1                  beat_cnt <= beat_cnt + 1;
181                         else
182        1/1                  beat_cnt <= beat_cnt;
183                     end
184                     
185                     always@(posedge clk or negedge rst_n)
186                     begin
187        1/1              if(~rst_n)
188        1/1                  write_addr <= 20'd0;
189        1/1              else if(wr_sop)
190        1/1                  write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
191        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
192        1/1                  write_addr <= write_addr >> 4;
193                         else
194        1/1                  write_addr <= write_addr;
195                     end
196                     
197                     always@(posedge clk or negedge rst_n)
198                     begin
199        1/1              if(~rst_n)
200        1/1                  write_strb <= 10'd0;
201        1/1              else if(wr_sop)
202        1/1                  write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
203        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
204        1/1                  write_strb <= write_strb >> 2;
205                         else
206        1/1                  write_strb <= write_strb;
207                     end
208                     
209                     always@(posedge clk or negedge rst_n)
210                     begin
211        1/1              if(~rst_n)
212        1/1                  ram_wr_en <= 1'b0;
213        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
214        1/1                  ram_wr_en <= 1'b1;
215                         else
216        1/1                  ram_wr_en <= 1'b0;
217                     end
218                     
219                     always@(posedge clk or negedge rst_n)
220                     begin
221        1/1              if(~rst_n)
222        1/1                  ram_wr_addr <= 4'd0;
223        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
224        1/1                  ram_wr_addr <= write_addr[3:0];
225                         else
226        1/1                  ram_wr_addr <= 4'd0;
227                     end
228                     
229                     always@(posedge clk or negedge rst_n)
230                     begin
231        1/1              if(~rst_n)
232        1/1                  ram_wr_strb <= 2'd0;
233        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
234        1/1                  ram_wr_strb <= write_strb;
235                         else
236        1/1                  ram_wr_strb <= 2'd0;
237                     end
238                     
239                     always@(posedge clk or negedge rst_n)
240                     begin
241        1/1              if(~rst_n)
242        1/1                  ram_wr_data <= 32'd0;
243        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
244        1/1                  ram_wr_data <= wr_data;
245                         else
246        1/1                  ram_wr_data <= 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_2

               Total   Covered  Percent
Conditions         30       18    60.00
Logical            30       18    60.00
Non-Logical         0        0
Event               0        0

 LINE       167
 EXPRESSION (wr_sop || (beat_cnt == beat_msb))
             ---1--    -----------2----------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       177
 EXPRESSION (wr_sop || wr_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       191
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       203
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       213
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       223
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       233
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       243
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_2
                Total Covered Percent 
Totals          14    10      71.43   
Total Bits      226   204     90.27   
Total Bits 0->1 113   102     90.27   
Total Bits 1->0 113   102     90.27   

                              
Ports          10  9   90.00  
Port Bits      152 150 98.68  
Port Bits 0->1 76  75  98.68  
Port Bits 1->0 76  75  98.68  

                              
Signals          4  1  25.00  
Signal Bits      74 54 72.97  
Signal Bits 0->1 37 27 72.97  
Signal Bits 1->0 37 27 72.97  

Port Details
                  Toggle Toggle 1->0 Toggle 0->1 Direction 
clk               Yes    Yes         Yes         INPUT     
rst_n             Yes    Yes         Yes         INPUT     
wr_sop            Yes    Yes         Yes         INPUT     
wr_eop            Yes    Yes         Yes         INPUT     
wr_vld            Yes    Yes         Yes         INPUT     
wr_data[31:0]     Yes    Yes         Yes         INPUT     
ram_wr_en         Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_addr[0]    No     No          No          OUTPUT    
ram_wr_addr[3:1]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[31:0] Yes    Yes         Yes         OUTPUT    

Signal Details
                 Toggle Toggle 1->0 Toggle 0->1 
work_enable      Yes    Yes         Yes         
beat_cnt[3:0]    Yes    Yes         Yes         
beat_cnt[5:4]    No     No          No          
write_addr[0]    No     No          No          
write_addr[3:1]  Yes    Yes         Yes         
write_addr[4]    No     No          No          
write_addr[7:5]  Yes    Yes         Yes         
write_addr[8]    No     No          No          
write_addr[11:9] Yes    Yes         Yes         
write_addr[12]   No     No          No          
write_addr[13]   Yes    Yes         Yes         
write_addr[14]   No     No          No          
write_addr[15]   Yes    Yes         Yes         
write_addr[16]   No     No          No          
write_addr[17]   Yes    Yes         Yes         
write_addr[18]   No     No          No          
write_addr[19]   Yes    Yes         Yes         
write_strb[8:0]  Yes    Yes         Yes         
write_strb[9]    No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_2
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       165      3     3       100.00  
IF       175      4     4       100.00  
IF       187      4     4       100.00  
IF       199      4     4       100.00  
IF       211      3     3       100.00  
IF       221      3     3       100.00  
IF       231      3     3       100.00  
IF       241      3     3       100.00  


165            if(~rst_n)
               -1-  
166                work_enable <= 1'b0;
                   ==>
167            else if(wr_sop || (beat_cnt == beat_msb))
                    -2-  
168                work_enable <= ~work_enable;
                   ==>
169            else
170                work_enable <= work_enable;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


175            if(~rst_n)
               -1-  
176                beat_cnt <= 1'b0;
                   ==>
177            else if(wr_sop || wr_eop)
                    -2-  
178                beat_cnt <= 1'b0;
                   ==>
179            else if(work_enable)
                    -3-  
180                beat_cnt <= beat_cnt + 1;
                   ==>
181            else
182                beat_cnt <= beat_cnt;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


187            if(~rst_n)
               -1-  
188                write_addr <= 20'd0;
                   ==>
189            else if(wr_sop)
                    -2-  
190                write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
                   ==>
191            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
192                write_addr <= write_addr >> 4;
                   ==>
193            else
194                write_addr <= write_addr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


199            if(~rst_n)
               -1-  
200                write_strb <= 10'd0;
                   ==>
201            else if(wr_sop)
                    -2-  
202                write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
                   ==>
203            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
204                write_strb <= write_strb >> 2;
                   ==>
205            else
206                write_strb <= write_strb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


211            if(~rst_n)
               -1-  
212                ram_wr_en <= 1'b0;
                   ==>
213            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
214                ram_wr_en <= 1'b1;
                   ==>
215            else
216                ram_wr_en <= 1'b0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


221            if(~rst_n)
               -1-  
222                ram_wr_addr <= 4'd0;
                   ==>
223            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
224                ram_wr_addr <= write_addr[3:0];
                   ==>
225            else
226                ram_wr_addr <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


231            if(~rst_n)
               -1-  
232                ram_wr_strb <= 2'd0;
                   ==>
233            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
234                ram_wr_strb <= write_strb;
                   ==>
235            else
236                ram_wr_strb <= 2'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


241            if(~rst_n)
               -1-  
242                ram_wr_data <= 32'd0;
                   ==>
243            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
244                ram_wr_data <= wr_data;
                   ==>
245            else
246                ram_wr_data <= 32'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 87.79 100.00  60.00  91.15 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 87.79 100.00  60.00  91.15 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                  
 94.12 100.00  80.00  96.46 --     100.00 ram_wr_control_weight 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_4

             Line No.   Total   Covered  Percent
TOTAL                       46       46   100.00
ALWAYS            165        5        5   100.00
ALWAYS            175        7        7   100.00
ALWAYS            187        7        7   100.00
ALWAYS            199        7        7   100.00
ALWAYS            211        5        5   100.00
ALWAYS            221        5        5   100.00
ALWAYS            231        5        5   100.00
ALWAYS            241        5        5   100.00

164                     begin
165        1/1              if(~rst_n)
166        1/1                  work_enable <= 1'b0;
167        1/1              else if(wr_sop || (beat_cnt == beat_msb))
168        1/1                  work_enable <= ~work_enable;
169                         else
170        1/1                  work_enable <= work_enable;
171                     end
172                     
173                     always@(posedge clk or negedge rst_n)
174                     begin
175        1/1              if(~rst_n)
176        1/1                  beat_cnt <= 1'b0;
177        1/1              else if(wr_sop || wr_eop)
178        1/1                  beat_cnt <= 1'b0;
179        1/1              else if(work_enable)
180        1/1                  beat_cnt <= beat_cnt + 1;
181                         else
182        1/1                  beat_cnt <= beat_cnt;
183                     end
184                     
185                     always@(posedge clk or negedge rst_n)
186                     begin
187        1/1              if(~rst_n)
188        1/1                  write_addr <= 20'd0;
189        1/1              else if(wr_sop)
190        1/1                  write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
191        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
192        1/1                  write_addr <= write_addr >> 4;
193                         else
194        1/1                  write_addr <= write_addr;
195                     end
196                     
197                     always@(posedge clk or negedge rst_n)
198                     begin
199        1/1              if(~rst_n)
200        1/1                  write_strb <= 10'd0;
201        1/1              else if(wr_sop)
202        1/1                  write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
203        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
204        1/1                  write_strb <= write_strb >> 2;
205                         else
206        1/1                  write_strb <= write_strb;
207                     end
208                     
209                     always@(posedge clk or negedge rst_n)
210                     begin
211        1/1              if(~rst_n)
212        1/1                  ram_wr_en <= 1'b0;
213        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
214        1/1                  ram_wr_en <= 1'b1;
215                         else
216        1/1                  ram_wr_en <= 1'b0;
217                     end
218                     
219                     always@(posedge clk or negedge rst_n)
220                     begin
221        1/1              if(~rst_n)
222        1/1                  ram_wr_addr <= 4'd0;
223        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
224        1/1                  ram_wr_addr <= write_addr[3:0];
225                         else
226        1/1                  ram_wr_addr <= 4'd0;
227                     end
228                     
229                     always@(posedge clk or negedge rst_n)
230                     begin
231        1/1              if(~rst_n)
232        1/1                  ram_wr_strb <= 2'd0;
233        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
234        1/1                  ram_wr_strb <= write_strb;
235                         else
236        1/1                  ram_wr_strb <= 2'd0;
237                     end
238                     
239                     always@(posedge clk or negedge rst_n)
240                     begin
241        1/1              if(~rst_n)
242        1/1                  ram_wr_data <= 32'd0;
243        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
244        1/1                  ram_wr_data <= wr_data;
245                         else
246        1/1                  ram_wr_data <= 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_4

               Total   Covered  Percent
Conditions         30       18    60.00
Logical            30       18    60.00
Non-Logical         0        0
Event               0        0

 LINE       167
 EXPRESSION (wr_sop || (beat_cnt == beat_msb))
             ---1--    -----------2----------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       177
 EXPRESSION (wr_sop || wr_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       191
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       203
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       213
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       223
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       233
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       243
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_4
                Total Covered Percent 
Totals          14    9       64.29   
Total Bits      226   206     91.15   
Total Bits 0->1 113   103     91.15   
Total Bits 1->0 113   103     91.15   

                              
Ports          10  8   80.00  
Port Bits      152 148 97.37  
Port Bits 0->1 76  74  97.37  
Port Bits 1->0 76  74  97.37  

                              
Signals          4  1  25.00  
Signal Bits      74 58 78.38  
Signal Bits 0->1 37 29 78.38  
Signal Bits 1->0 37 29 78.38  

Port Details
                  Toggle Toggle 1->0 Toggle 0->1 Direction 
clk               Yes    Yes         Yes         INPUT     
rst_n             Yes    Yes         Yes         INPUT     
wr_sop            Yes    Yes         Yes         INPUT     
wr_eop            Yes    Yes         Yes         INPUT     
wr_vld            Yes    Yes         Yes         INPUT     
wr_data[31:0]     Yes    Yes         Yes         INPUT     
ram_wr_en         Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_addr[0]    No     No          No          OUTPUT    
ram_wr_addr[3:1]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[0]    No     No          No          OUTPUT    
ram_wr_data[31:1] Yes    Yes         Yes         OUTPUT    

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
work_enable       Yes    Yes         Yes         
beat_cnt[4:0]     Yes    Yes         Yes         
beat_cnt[5]       No     No          No          
write_addr[0]     No     No          No          
write_addr[3:1]   Yes    Yes         Yes         
write_addr[4]     No     No          No          
write_addr[7:5]   Yes    Yes         Yes         
write_addr[8]     No     No          No          
write_addr[11:9]  Yes    Yes         Yes         
write_addr[12]    No     No          No          
write_addr[15:13] Yes    Yes         Yes         
write_addr[17:16] No     No          No          
write_addr[19:18] Yes    Yes         Yes         
write_strb[8:0]   Yes    Yes         Yes         
write_strb[9]     No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_4
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       165      3     3       100.00  
IF       175      4     4       100.00  
IF       187      4     4       100.00  
IF       199      4     4       100.00  
IF       211      3     3       100.00  
IF       221      3     3       100.00  
IF       231      3     3       100.00  
IF       241      3     3       100.00  


165            if(~rst_n)
               -1-  
166                work_enable <= 1'b0;
                   ==>
167            else if(wr_sop || (beat_cnt == beat_msb))
                    -2-  
168                work_enable <= ~work_enable;
                   ==>
169            else
170                work_enable <= work_enable;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


175            if(~rst_n)
               -1-  
176                beat_cnt <= 1'b0;
                   ==>
177            else if(wr_sop || wr_eop)
                    -2-  
178                beat_cnt <= 1'b0;
                   ==>
179            else if(work_enable)
                    -3-  
180                beat_cnt <= beat_cnt + 1;
                   ==>
181            else
182                beat_cnt <= beat_cnt;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


187            if(~rst_n)
               -1-  
188                write_addr <= 20'd0;
                   ==>
189            else if(wr_sop)
                    -2-  
190                write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
                   ==>
191            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
192                write_addr <= write_addr >> 4;
                   ==>
193            else
194                write_addr <= write_addr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


199            if(~rst_n)
               -1-  
200                write_strb <= 10'd0;
                   ==>
201            else if(wr_sop)
                    -2-  
202                write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
                   ==>
203            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
204                write_strb <= write_strb >> 2;
                   ==>
205            else
206                write_strb <= write_strb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


211            if(~rst_n)
               -1-  
212                ram_wr_en <= 1'b0;
                   ==>
213            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
214                ram_wr_en <= 1'b1;
                   ==>
215            else
216                ram_wr_en <= 1'b0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


221            if(~rst_n)
               -1-  
222                ram_wr_addr <= 4'd0;
                   ==>
223            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
224                ram_wr_addr <= write_addr[3:0];
                   ==>
225            else
226                ram_wr_addr <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


231            if(~rst_n)
               -1-  
232                ram_wr_strb <= 2'd0;
                   ==>
233            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
234                ram_wr_strb <= write_strb;
                   ==>
235            else
236                ram_wr_strb <= 2'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


241            if(~rst_n)
               -1-  
242                ram_wr_data <= 32'd0;
                   ==>
243            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
244                ram_wr_data <= wr_data;
                   ==>
245            else
246                ram_wr_data <= 32'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.01 100.00  60.00  92.04 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.01 100.00  60.00  92.04 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                  
 94.12 100.00  80.00  96.46 --     100.00 ram_wr_control_weight 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_3

             Line No.   Total   Covered  Percent
TOTAL                       46       46   100.00
ALWAYS            165        5        5   100.00
ALWAYS            175        7        7   100.00
ALWAYS            187        7        7   100.00
ALWAYS            199        7        7   100.00
ALWAYS            211        5        5   100.00
ALWAYS            221        5        5   100.00
ALWAYS            231        5        5   100.00
ALWAYS            241        5        5   100.00

164                     begin
165        1/1              if(~rst_n)
166        1/1                  work_enable <= 1'b0;
167        1/1              else if(wr_sop || (beat_cnt == beat_msb))
168        1/1                  work_enable <= ~work_enable;
169                         else
170        1/1                  work_enable <= work_enable;
171                     end
172                     
173                     always@(posedge clk or negedge rst_n)
174                     begin
175        1/1              if(~rst_n)
176        1/1                  beat_cnt <= 1'b0;
177        1/1              else if(wr_sop || wr_eop)
178        1/1                  beat_cnt <= 1'b0;
179        1/1              else if(work_enable)
180        1/1                  beat_cnt <= beat_cnt + 1;
181                         else
182        1/1                  beat_cnt <= beat_cnt;
183                     end
184                     
185                     always@(posedge clk or negedge rst_n)
186                     begin
187        1/1              if(~rst_n)
188        1/1                  write_addr <= 20'd0;
189        1/1              else if(wr_sop)
190        1/1                  write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
191        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
192        1/1                  write_addr <= write_addr >> 4;
193                         else
194        1/1                  write_addr <= write_addr;
195                     end
196                     
197                     always@(posedge clk or negedge rst_n)
198                     begin
199        1/1              if(~rst_n)
200        1/1                  write_strb <= 10'd0;
201        1/1              else if(wr_sop)
202        1/1                  write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
203        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
204        1/1                  write_strb <= write_strb >> 2;
205                         else
206        1/1                  write_strb <= write_strb;
207                     end
208                     
209                     always@(posedge clk or negedge rst_n)
210                     begin
211        1/1              if(~rst_n)
212        1/1                  ram_wr_en <= 1'b0;
213        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
214        1/1                  ram_wr_en <= 1'b1;
215                         else
216        1/1                  ram_wr_en <= 1'b0;
217                     end
218                     
219                     always@(posedge clk or negedge rst_n)
220                     begin
221        1/1              if(~rst_n)
222        1/1                  ram_wr_addr <= 4'd0;
223        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
224        1/1                  ram_wr_addr <= write_addr[3:0];
225                         else
226        1/1                  ram_wr_addr <= 4'd0;
227                     end
228                     
229                     always@(posedge clk or negedge rst_n)
230                     begin
231        1/1              if(~rst_n)
232        1/1                  ram_wr_strb <= 2'd0;
233        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
234        1/1                  ram_wr_strb <= write_strb;
235                         else
236        1/1                  ram_wr_strb <= 2'd0;
237                     end
238                     
239                     always@(posedge clk or negedge rst_n)
240                     begin
241        1/1              if(~rst_n)
242        1/1                  ram_wr_data <= 32'd0;
243        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
244        1/1                  ram_wr_data <= wr_data;
245                         else
246        1/1                  ram_wr_data <= 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_3

               Total   Covered  Percent
Conditions         30       18    60.00
Logical            30       18    60.00
Non-Logical         0        0
Event               0        0

 LINE       167
 EXPRESSION (wr_sop || (beat_cnt == beat_msb))
             ---1--    -----------2----------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       177
 EXPRESSION (wr_sop || wr_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       191
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       203
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       213
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       223
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       233
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       243
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_3
                Total Covered Percent 
Totals          14    11      78.57   
Total Bits      226   208     92.04   
Total Bits 0->1 113   104     92.04   
Total Bits 1->0 113   104     92.04   

                              
Ports          10  9   90.00  
Port Bits      152 148 97.37  
Port Bits 0->1 76  74  97.37  
Port Bits 1->0 76  74  97.37  

                              
Signals          4  2  50.00  
Signal Bits      74 60 81.08  
Signal Bits 0->1 37 30 81.08  
Signal Bits 1->0 37 30 81.08  

Port Details
                   Toggle Toggle 1->0 Toggle 0->1 Direction 
clk                Yes    Yes         Yes         INPUT     
rst_n              Yes    Yes         Yes         INPUT     
wr_sop             Yes    Yes         Yes         INPUT     
wr_eop             Yes    Yes         Yes         INPUT     
wr_vld             Yes    Yes         Yes         INPUT     
wr_data[31:0]      Yes    Yes         Yes         INPUT     
ram_wr_en          Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[17:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[18]    No     No          No          OUTPUT    
ram_wr_data[20:19] Yes    Yes         Yes         OUTPUT    
ram_wr_data[21]    No     No          No          OUTPUT    
ram_wr_data[31:22] Yes    Yes         Yes         OUTPUT    

Signal Details
                 Toggle Toggle 1->0 Toggle 0->1 
work_enable      Yes    Yes         Yes         
beat_cnt[4:0]    Yes    Yes         Yes         
beat_cnt[5]      No     No          No          
write_addr[3:0]  Yes    Yes         Yes         
write_addr[4]    No     No          No          
write_addr[7:5]  Yes    Yes         Yes         
write_addr[8]    No     No          No          
write_addr[11:9] Yes    Yes         Yes         
write_addr[12]   No     No          No          
write_addr[13]   Yes    Yes         Yes         
write_addr[14]   No     No          No          
write_addr[15]   Yes    Yes         Yes         
write_addr[16]   No     No          No          
write_addr[17]   Yes    Yes         Yes         
write_addr[18]   No     No          No          
write_addr[19]   Yes    Yes         Yes         
write_strb[9:0]  Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_3
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       165      3     3       100.00  
IF       175      4     4       100.00  
IF       187      4     4       100.00  
IF       199      4     4       100.00  
IF       211      3     3       100.00  
IF       221      3     3       100.00  
IF       231      3     3       100.00  
IF       241      3     3       100.00  


165            if(~rst_n)
               -1-  
166                work_enable <= 1'b0;
                   ==>
167            else if(wr_sop || (beat_cnt == beat_msb))
                    -2-  
168                work_enable <= ~work_enable;
                   ==>
169            else
170                work_enable <= work_enable;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


175            if(~rst_n)
               -1-  
176                beat_cnt <= 1'b0;
                   ==>
177            else if(wr_sop || wr_eop)
                    -2-  
178                beat_cnt <= 1'b0;
                   ==>
179            else if(work_enable)
                    -3-  
180                beat_cnt <= beat_cnt + 1;
                   ==>
181            else
182                beat_cnt <= beat_cnt;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


187            if(~rst_n)
               -1-  
188                write_addr <= 20'd0;
                   ==>
189            else if(wr_sop)
                    -2-  
190                write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
                   ==>
191            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
192                write_addr <= write_addr >> 4;
                   ==>
193            else
194                write_addr <= write_addr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


199            if(~rst_n)
               -1-  
200                write_strb <= 10'd0;
                   ==>
201            else if(wr_sop)
                    -2-  
202                write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
                   ==>
203            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
204                write_strb <= write_strb >> 2;
                   ==>
205            else
206                write_strb <= write_strb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


211            if(~rst_n)
               -1-  
212                ram_wr_en <= 1'b0;
                   ==>
213            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
214                ram_wr_en <= 1'b1;
                   ==>
215            else
216                ram_wr_en <= 1'b0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


221            if(~rst_n)
               -1-  
222                ram_wr_addr <= 4'd0;
                   ==>
223            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
224                ram_wr_addr <= write_addr[3:0];
                   ==>
225            else
226                ram_wr_addr <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


231            if(~rst_n)
               -1-  
232                ram_wr_strb <= 2'd0;
                   ==>
233            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
234                ram_wr_strb <= write_strb;
                   ==>
235            else
236                ram_wr_strb <= 2'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


241            if(~rst_n)
               -1-  
242                ram_wr_data <= 32'd0;
                   ==>
243            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
244                ram_wr_data <= wr_data;
                   ==>
245            else
246                ram_wr_data <= 32'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.23 100.00  60.00  92.92 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.23 100.00  60.00  92.92 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                  
 94.12 100.00  80.00  96.46 --     100.00 ram_wr_control_weight 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_1

             Line No.   Total   Covered  Percent
TOTAL                       46       46   100.00
ALWAYS            165        5        5   100.00
ALWAYS            175        7        7   100.00
ALWAYS            187        7        7   100.00
ALWAYS            199        7        7   100.00
ALWAYS            211        5        5   100.00
ALWAYS            221        5        5   100.00
ALWAYS            231        5        5   100.00
ALWAYS            241        5        5   100.00

164                     begin
165        1/1              if(~rst_n)
166        1/1                  work_enable <= 1'b0;
167        1/1              else if(wr_sop || (beat_cnt == beat_msb))
168        1/1                  work_enable <= ~work_enable;
169                         else
170        1/1                  work_enable <= work_enable;
171                     end
172                     
173                     always@(posedge clk or negedge rst_n)
174                     begin
175        1/1              if(~rst_n)
176        1/1                  beat_cnt <= 1'b0;
177        1/1              else if(wr_sop || wr_eop)
178        1/1                  beat_cnt <= 1'b0;
179        1/1              else if(work_enable)
180        1/1                  beat_cnt <= beat_cnt + 1;
181                         else
182        1/1                  beat_cnt <= beat_cnt;
183                     end
184                     
185                     always@(posedge clk or negedge rst_n)
186                     begin
187        1/1              if(~rst_n)
188        1/1                  write_addr <= 20'd0;
189        1/1              else if(wr_sop)
190        1/1                  write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
191        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
192        1/1                  write_addr <= write_addr >> 4;
193                         else
194        1/1                  write_addr <= write_addr;
195                     end
196                     
197                     always@(posedge clk or negedge rst_n)
198                     begin
199        1/1              if(~rst_n)
200        1/1                  write_strb <= 10'd0;
201        1/1              else if(wr_sop)
202        1/1                  write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
203        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
204        1/1                  write_strb <= write_strb >> 2;
205                         else
206        1/1                  write_strb <= write_strb;
207                     end
208                     
209                     always@(posedge clk or negedge rst_n)
210                     begin
211        1/1              if(~rst_n)
212        1/1                  ram_wr_en <= 1'b0;
213        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
214        1/1                  ram_wr_en <= 1'b1;
215                         else
216        1/1                  ram_wr_en <= 1'b0;
217                     end
218                     
219                     always@(posedge clk or negedge rst_n)
220                     begin
221        1/1              if(~rst_n)
222        1/1                  ram_wr_addr <= 4'd0;
223        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
224        1/1                  ram_wr_addr <= write_addr[3:0];
225                         else
226        1/1                  ram_wr_addr <= 4'd0;
227                     end
228                     
229                     always@(posedge clk or negedge rst_n)
230                     begin
231        1/1              if(~rst_n)
232        1/1                  ram_wr_strb <= 2'd0;
233        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
234        1/1                  ram_wr_strb <= write_strb;
235                         else
236        1/1                  ram_wr_strb <= 2'd0;
237                     end
238                     
239                     always@(posedge clk or negedge rst_n)
240                     begin
241        1/1              if(~rst_n)
242        1/1                  ram_wr_data <= 32'd0;
243        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
244        1/1                  ram_wr_data <= wr_data;
245                         else
246        1/1                  ram_wr_data <= 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_1

               Total   Covered  Percent
Conditions         30       18    60.00
Logical            30       18    60.00
Non-Logical         0        0
Event               0        0

 LINE       167
 EXPRESSION (wr_sop || (beat_cnt == beat_msb))
             ---1--    -----------2----------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       177
 EXPRESSION (wr_sop || wr_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       191
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       203
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       213
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       223
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       233
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       243
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_1
                Total Covered Percent 
Totals          14    12      85.71   
Total Bits      226   210     92.92   
Total Bits 0->1 113   105     92.92   
Total Bits 1->0 113   105     92.92   

                              
Ports          10  10  100.00 
Port Bits      152 152 100.00 
Port Bits 0->1 76  76  100.00 
Port Bits 1->0 76  76  100.00 

                              
Signals          4  2  50.00  
Signal Bits      74 58 78.38  
Signal Bits 0->1 37 29 78.38  
Signal Bits 1->0 37 29 78.38  

Port Details
                  Toggle Toggle 1->0 Toggle 0->1 Direction 
clk               Yes    Yes         Yes         INPUT     
rst_n             Yes    Yes         Yes         INPUT     
wr_sop            Yes    Yes         Yes         INPUT     
wr_eop            Yes    Yes         Yes         INPUT     
wr_vld            Yes    Yes         Yes         INPUT     
wr_data[31:0]     Yes    Yes         Yes         INPUT     
ram_wr_en         Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[31:0] Yes    Yes         Yes         OUTPUT    

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
work_enable       Yes    Yes         Yes         
beat_cnt[3:0]     Yes    Yes         Yes         
beat_cnt[5:4]     No     No          No          
write_addr[3:0]   Yes    Yes         Yes         
write_addr[4]     No     No          No          
write_addr[7:5]   Yes    Yes         Yes         
write_addr[8]     No     No          No          
write_addr[11:9]  Yes    Yes         Yes         
write_addr[12]    No     No          No          
write_addr[15:13] Yes    Yes         Yes         
write_addr[18:16] No     No          No          
write_addr[19]    Yes    Yes         Yes         
write_strb[9:0]   Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_1
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       165      3     3       100.00  
IF       175      4     4       100.00  
IF       187      4     4       100.00  
IF       199      4     4       100.00  
IF       211      3     3       100.00  
IF       221      3     3       100.00  
IF       231      3     3       100.00  
IF       241      3     3       100.00  


165            if(~rst_n)
               -1-  
166                work_enable <= 1'b0;
                   ==>
167            else if(wr_sop || (beat_cnt == beat_msb))
                    -2-  
168                work_enable <= ~work_enable;
                   ==>
169            else
170                work_enable <= work_enable;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


175            if(~rst_n)
               -1-  
176                beat_cnt <= 1'b0;
                   ==>
177            else if(wr_sop || wr_eop)
                    -2-  
178                beat_cnt <= 1'b0;
                   ==>
179            else if(work_enable)
                    -3-  
180                beat_cnt <= beat_cnt + 1;
                   ==>
181            else
182                beat_cnt <= beat_cnt;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


187            if(~rst_n)
               -1-  
188                write_addr <= 20'd0;
                   ==>
189            else if(wr_sop)
                    -2-  
190                write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
                   ==>
191            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
192                write_addr <= write_addr >> 4;
                   ==>
193            else
194                write_addr <= write_addr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


199            if(~rst_n)
               -1-  
200                write_strb <= 10'd0;
                   ==>
201            else if(wr_sop)
                    -2-  
202                write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
                   ==>
203            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
204                write_strb <= write_strb >> 2;
                   ==>
205            else
206                write_strb <= write_strb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


211            if(~rst_n)
               -1-  
212                ram_wr_en <= 1'b0;
                   ==>
213            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
214                ram_wr_en <= 1'b1;
                   ==>
215            else
216                ram_wr_en <= 1'b0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


221            if(~rst_n)
               -1-  
222                ram_wr_addr <= 4'd0;
                   ==>
223            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
224                ram_wr_addr <= write_addr[3:0];
                   ==>
225            else
226                ram_wr_addr <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


231            if(~rst_n)
               -1-  
232                ram_wr_strb <= 2'd0;
                   ==>
233            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
234                ram_wr_strb <= write_strb;
                   ==>
235            else
236                ram_wr_strb <= 2'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


241            if(~rst_n)
               -1-  
242                ram_wr_data <= 32'd0;
                   ==>
243            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
244                ram_wr_data <= wr_data;
                   ==>
245            else
246                ram_wr_data <= 32'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.45 100.00  60.00  93.81 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.45 100.00  60.00  93.81 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                  
 94.12 100.00  80.00  96.46 --     100.00 ram_wr_control_weight 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_6

             Line No.   Total   Covered  Percent
TOTAL                       46       46   100.00
ALWAYS            165        5        5   100.00
ALWAYS            175        7        7   100.00
ALWAYS            187        7        7   100.00
ALWAYS            199        7        7   100.00
ALWAYS            211        5        5   100.00
ALWAYS            221        5        5   100.00
ALWAYS            231        5        5   100.00
ALWAYS            241        5        5   100.00

164                     begin
165        1/1              if(~rst_n)
166        1/1                  work_enable <= 1'b0;
167        1/1              else if(wr_sop || (beat_cnt == beat_msb))
168        1/1                  work_enable <= ~work_enable;
169                         else
170        1/1                  work_enable <= work_enable;
171                     end
172                     
173                     always@(posedge clk or negedge rst_n)
174                     begin
175        1/1              if(~rst_n)
176        1/1                  beat_cnt <= 1'b0;
177        1/1              else if(wr_sop || wr_eop)
178        1/1                  beat_cnt <= 1'b0;
179        1/1              else if(work_enable)
180        1/1                  beat_cnt <= beat_cnt + 1;
181                         else
182        1/1                  beat_cnt <= beat_cnt;
183                     end
184                     
185                     always@(posedge clk or negedge rst_n)
186                     begin
187        1/1              if(~rst_n)
188        1/1                  write_addr <= 20'd0;
189        1/1              else if(wr_sop)
190        1/1                  write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
191        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
192        1/1                  write_addr <= write_addr >> 4;
193                         else
194        1/1                  write_addr <= write_addr;
195                     end
196                     
197                     always@(posedge clk or negedge rst_n)
198                     begin
199        1/1              if(~rst_n)
200        1/1                  write_strb <= 10'd0;
201        1/1              else if(wr_sop)
202        1/1                  write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
203        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
204        1/1                  write_strb <= write_strb >> 2;
205                         else
206        1/1                  write_strb <= write_strb;
207                     end
208                     
209                     always@(posedge clk or negedge rst_n)
210                     begin
211        1/1              if(~rst_n)
212        1/1                  ram_wr_en <= 1'b0;
213        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
214        1/1                  ram_wr_en <= 1'b1;
215                         else
216        1/1                  ram_wr_en <= 1'b0;
217                     end
218                     
219                     always@(posedge clk or negedge rst_n)
220                     begin
221        1/1              if(~rst_n)
222        1/1                  ram_wr_addr <= 4'd0;
223        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
224        1/1                  ram_wr_addr <= write_addr[3:0];
225                         else
226        1/1                  ram_wr_addr <= 4'd0;
227                     end
228                     
229                     always@(posedge clk or negedge rst_n)
230                     begin
231        1/1              if(~rst_n)
232        1/1                  ram_wr_strb <= 2'd0;
233        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
234        1/1                  ram_wr_strb <= write_strb;
235                         else
236        1/1                  ram_wr_strb <= 2'd0;
237                     end
238                     
239                     always@(posedge clk or negedge rst_n)
240                     begin
241        1/1              if(~rst_n)
242        1/1                  ram_wr_data <= 32'd0;
243        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
244        1/1                  ram_wr_data <= wr_data;
245                         else
246        1/1                  ram_wr_data <= 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_6

               Total   Covered  Percent
Conditions         30       18    60.00
Logical            30       18    60.00
Non-Logical         0        0
Event               0        0

 LINE       167
 EXPRESSION (wr_sop || (beat_cnt == beat_msb))
             ---1--    -----------2----------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       177
 EXPRESSION (wr_sop || wr_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       191
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       203
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       213
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       223
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       233
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       243
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_6
                Total Covered Percent 
Totals          14    11      78.57   
Total Bits      226   212     93.81   
Total Bits 0->1 113   106     93.81   
Total Bits 1->0 113   106     93.81   

                              
Ports          10  9   90.00  
Port Bits      152 150 98.68  
Port Bits 0->1 76  75  98.68  
Port Bits 1->0 76  75  98.68  

                              
Signals          4  2  50.00  
Signal Bits      74 62 83.78  
Signal Bits 0->1 37 31 83.78  
Signal Bits 1->0 37 31 83.78  

Port Details
                  Toggle Toggle 1->0 Toggle 0->1 Direction 
clk               Yes    Yes         Yes         INPUT     
rst_n             Yes    Yes         Yes         INPUT     
wr_sop            Yes    Yes         Yes         INPUT     
wr_eop            Yes    Yes         Yes         INPUT     
wr_vld            Yes    Yes         Yes         INPUT     
wr_data[31:0]     Yes    Yes         Yes         INPUT     
ram_wr_en         Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_addr[0]    No     No          No          OUTPUT    
ram_wr_addr[3:1]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[31:0] Yes    Yes         Yes         OUTPUT    

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
work_enable       Yes    Yes         Yes         
beat_cnt[5:0]     Yes    Yes         Yes         
write_addr[0]     No     No          No          
write_addr[3:1]   Yes    Yes         Yes         
write_addr[4]     No     No          No          
write_addr[7:5]   Yes    Yes         Yes         
write_addr[8]     No     No          No          
write_addr[11:9]  Yes    Yes         Yes         
write_addr[12]    No     No          No          
write_addr[15:13] Yes    Yes         Yes         
write_addr[16]    No     No          No          
write_addr[19:17] Yes    Yes         Yes         
write_strb[8:0]   Yes    Yes         Yes         
write_strb[9]     No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_6
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       165      3     3       100.00  
IF       175      4     4       100.00  
IF       187      4     4       100.00  
IF       199      4     4       100.00  
IF       211      3     3       100.00  
IF       221      3     3       100.00  
IF       231      3     3       100.00  
IF       241      3     3       100.00  


165            if(~rst_n)
               -1-  
166                work_enable <= 1'b0;
                   ==>
167            else if(wr_sop || (beat_cnt == beat_msb))
                    -2-  
168                work_enable <= ~work_enable;
                   ==>
169            else
170                work_enable <= work_enable;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


175            if(~rst_n)
               -1-  
176                beat_cnt <= 1'b0;
                   ==>
177            else if(wr_sop || wr_eop)
                    -2-  
178                beat_cnt <= 1'b0;
                   ==>
179            else if(work_enable)
                    -3-  
180                beat_cnt <= beat_cnt + 1;
                   ==>
181            else
182                beat_cnt <= beat_cnt;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


187            if(~rst_n)
               -1-  
188                write_addr <= 20'd0;
                   ==>
189            else if(wr_sop)
                    -2-  
190                write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
                   ==>
191            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
192                write_addr <= write_addr >> 4;
                   ==>
193            else
194                write_addr <= write_addr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


199            if(~rst_n)
               -1-  
200                write_strb <= 10'd0;
                   ==>
201            else if(wr_sop)
                    -2-  
202                write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
                   ==>
203            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
204                write_strb <= write_strb >> 2;
                   ==>
205            else
206                write_strb <= write_strb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


211            if(~rst_n)
               -1-  
212                ram_wr_en <= 1'b0;
                   ==>
213            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
214                ram_wr_en <= 1'b1;
                   ==>
215            else
216                ram_wr_en <= 1'b0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


221            if(~rst_n)
               -1-  
222                ram_wr_addr <= 4'd0;
                   ==>
223            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
224                ram_wr_addr <= write_addr[3:0];
                   ==>
225            else
226                ram_wr_addr <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


231            if(~rst_n)
               -1-  
232                ram_wr_strb <= 2'd0;
                   ==>
233            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
234                ram_wr_strb <= write_strb;
                   ==>
235            else
236                ram_wr_strb <= 2'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


241            if(~rst_n)
               -1-  
242                ram_wr_data <= 32'd0;
                   ==>
243            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
244                ram_wr_data <= wr_data;
                   ==>
245            else
246                ram_wr_data <= 32'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.67 100.00  60.00  94.69 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.67 100.00  60.00  94.69 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                  
 94.12 100.00  80.00  96.46 --     100.00 ram_wr_control_weight 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_5

             Line No.   Total   Covered  Percent
TOTAL                       46       46   100.00
ALWAYS            165        5        5   100.00
ALWAYS            175        7        7   100.00
ALWAYS            187        7        7   100.00
ALWAYS            199        7        7   100.00
ALWAYS            211        5        5   100.00
ALWAYS            221        5        5   100.00
ALWAYS            231        5        5   100.00
ALWAYS            241        5        5   100.00

164                     begin
165        1/1              if(~rst_n)
166        1/1                  work_enable <= 1'b0;
167        1/1              else if(wr_sop || (beat_cnt == beat_msb))
168        1/1                  work_enable <= ~work_enable;
169                         else
170        1/1                  work_enable <= work_enable;
171                     end
172                     
173                     always@(posedge clk or negedge rst_n)
174                     begin
175        1/1              if(~rst_n)
176        1/1                  beat_cnt <= 1'b0;
177        1/1              else if(wr_sop || wr_eop)
178        1/1                  beat_cnt <= 1'b0;
179        1/1              else if(work_enable)
180        1/1                  beat_cnt <= beat_cnt + 1;
181                         else
182        1/1                  beat_cnt <= beat_cnt;
183                     end
184                     
185                     always@(posedge clk or negedge rst_n)
186                     begin
187        1/1              if(~rst_n)
188        1/1                  write_addr <= 20'd0;
189        1/1              else if(wr_sop)
190        1/1                  write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
191        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
192        1/1                  write_addr <= write_addr >> 4;
193                         else
194        1/1                  write_addr <= write_addr;
195                     end
196                     
197                     always@(posedge clk or negedge rst_n)
198                     begin
199        1/1              if(~rst_n)
200        1/1                  write_strb <= 10'd0;
201        1/1              else if(wr_sop)
202        1/1                  write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
203        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
204        1/1                  write_strb <= write_strb >> 2;
205                         else
206        1/1                  write_strb <= write_strb;
207                     end
208                     
209                     always@(posedge clk or negedge rst_n)
210                     begin
211        1/1              if(~rst_n)
212        1/1                  ram_wr_en <= 1'b0;
213        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
214        1/1                  ram_wr_en <= 1'b1;
215                         else
216        1/1                  ram_wr_en <= 1'b0;
217                     end
218                     
219                     always@(posedge clk or negedge rst_n)
220                     begin
221        1/1              if(~rst_n)
222        1/1                  ram_wr_addr <= 4'd0;
223        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
224        1/1                  ram_wr_addr <= write_addr[3:0];
225                         else
226        1/1                  ram_wr_addr <= 4'd0;
227                     end
228                     
229                     always@(posedge clk or negedge rst_n)
230                     begin
231        1/1              if(~rst_n)
232        1/1                  ram_wr_strb <= 2'd0;
233        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
234        1/1                  ram_wr_strb <= write_strb;
235                         else
236        1/1                  ram_wr_strb <= 2'd0;
237                     end
238                     
239                     always@(posedge clk or negedge rst_n)
240                     begin
241        1/1              if(~rst_n)
242        1/1                  ram_wr_data <= 32'd0;
243        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
244        1/1                  ram_wr_data <= wr_data;
245                         else
246        1/1                  ram_wr_data <= 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_5

               Total   Covered  Percent
Conditions         30       18    60.00
Logical            30       18    60.00
Non-Logical         0        0
Event               0        0

 LINE       167
 EXPRESSION (wr_sop || (beat_cnt == beat_msb))
             ---1--    -----------2----------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       177
 EXPRESSION (wr_sop || wr_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       191
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       203
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       213
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       223
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       233
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       243
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_5
                Total Covered Percent 
Totals          14    12      85.71   
Total Bits      226   214     94.69   
Total Bits 0->1 113   107     94.69   
Total Bits 1->0 113   107     94.69   

                              
Ports          10  10  100.00 
Port Bits      152 152 100.00 
Port Bits 0->1 76  76  100.00 
Port Bits 1->0 76  76  100.00 

                              
Signals          4  2  50.00  
Signal Bits      74 62 83.78  
Signal Bits 0->1 37 31 83.78  
Signal Bits 1->0 37 31 83.78  

Port Details
                  Toggle Toggle 1->0 Toggle 0->1 Direction 
clk               Yes    Yes         Yes         INPUT     
rst_n             Yes    Yes         Yes         INPUT     
wr_sop            Yes    Yes         Yes         INPUT     
wr_eop            Yes    Yes         Yes         INPUT     
wr_vld            Yes    Yes         Yes         INPUT     
wr_data[31:0]     Yes    Yes         Yes         INPUT     
ram_wr_en         Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[31:0] Yes    Yes         Yes         OUTPUT    

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
work_enable       Yes    Yes         Yes         
beat_cnt[4:0]     Yes    Yes         Yes         
beat_cnt[5]       No     No          No          
write_addr[3:0]   Yes    Yes         Yes         
write_addr[4]     No     No          No          
write_addr[7:5]   Yes    Yes         Yes         
write_addr[8]     No     No          No          
write_addr[11:9]  Yes    Yes         Yes         
write_addr[12]    No     No          No          
write_addr[15:13] Yes    Yes         Yes         
write_addr[17:16] No     No          No          
write_addr[19:18] Yes    Yes         Yes         
write_strb[9:0]   Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_5
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       165      3     3       100.00  
IF       175      4     4       100.00  
IF       187      4     4       100.00  
IF       199      4     4       100.00  
IF       211      3     3       100.00  
IF       221      3     3       100.00  
IF       231      3     3       100.00  
IF       241      3     3       100.00  


165            if(~rst_n)
               -1-  
166                work_enable <= 1'b0;
                   ==>
167            else if(wr_sop || (beat_cnt == beat_msb))
                    -2-  
168                work_enable <= ~work_enable;
                   ==>
169            else
170                work_enable <= work_enable;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


175            if(~rst_n)
               -1-  
176                beat_cnt <= 1'b0;
                   ==>
177            else if(wr_sop || wr_eop)
                    -2-  
178                beat_cnt <= 1'b0;
                   ==>
179            else if(work_enable)
                    -3-  
180                beat_cnt <= beat_cnt + 1;
                   ==>
181            else
182                beat_cnt <= beat_cnt;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


187            if(~rst_n)
               -1-  
188                write_addr <= 20'd0;
                   ==>
189            else if(wr_sop)
                    -2-  
190                write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
                   ==>
191            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
192                write_addr <= write_addr >> 4;
                   ==>
193            else
194                write_addr <= write_addr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


199            if(~rst_n)
               -1-  
200                write_strb <= 10'd0;
                   ==>
201            else if(wr_sop)
                    -2-  
202                write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
                   ==>
203            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
204                write_strb <= write_strb >> 2;
                   ==>
205            else
206                write_strb <= write_strb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


211            if(~rst_n)
               -1-  
212                ram_wr_en <= 1'b0;
                   ==>
213            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
214                ram_wr_en <= 1'b1;
                   ==>
215            else
216                ram_wr_en <= 1'b0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


221            if(~rst_n)
               -1-  
222                ram_wr_addr <= 4'd0;
                   ==>
223            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
224                ram_wr_addr <= write_addr[3:0];
                   ==>
225            else
226                ram_wr_addr <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


231            if(~rst_n)
               -1-  
232                ram_wr_strb <= 2'd0;
                   ==>
233            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
234                ram_wr_strb <= write_strb;
                   ==>
235            else
236                ram_wr_strb <= 2'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


241            if(~rst_n)
               -1-  
242                ram_wr_data <= 32'd0;
                   ==>
243            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
244                ram_wr_data <= wr_data;
                   ==>
245            else
246                ram_wr_data <= 32'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.89 100.00  60.00  95.58 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.89 100.00  60.00  95.58 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                  
 94.12 100.00  80.00  96.46 --     100.00 ram_wr_control_weight 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_7

             Line No.   Total   Covered  Percent
TOTAL                       46       46   100.00
ALWAYS            165        5        5   100.00
ALWAYS            175        7        7   100.00
ALWAYS            187        7        7   100.00
ALWAYS            199        7        7   100.00
ALWAYS            211        5        5   100.00
ALWAYS            221        5        5   100.00
ALWAYS            231        5        5   100.00
ALWAYS            241        5        5   100.00

164                     begin
165        1/1              if(~rst_n)
166        1/1                  work_enable <= 1'b0;
167        1/1              else if(wr_sop || (beat_cnt == beat_msb))
168        1/1                  work_enable <= ~work_enable;
169                         else
170        1/1                  work_enable <= work_enable;
171                     end
172                     
173                     always@(posedge clk or negedge rst_n)
174                     begin
175        1/1              if(~rst_n)
176        1/1                  beat_cnt <= 1'b0;
177        1/1              else if(wr_sop || wr_eop)
178        1/1                  beat_cnt <= 1'b0;
179        1/1              else if(work_enable)
180        1/1                  beat_cnt <= beat_cnt + 1;
181                         else
182        1/1                  beat_cnt <= beat_cnt;
183                     end
184                     
185                     always@(posedge clk or negedge rst_n)
186                     begin
187        1/1              if(~rst_n)
188        1/1                  write_addr <= 20'd0;
189        1/1              else if(wr_sop)
190        1/1                  write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
191        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
192        1/1                  write_addr <= write_addr >> 4;
193                         else
194        1/1                  write_addr <= write_addr;
195                     end
196                     
197                     always@(posedge clk or negedge rst_n)
198                     begin
199        1/1              if(~rst_n)
200        1/1                  write_strb <= 10'd0;
201        1/1              else if(wr_sop)
202        1/1                  write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
203        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
204        1/1                  write_strb <= write_strb >> 2;
205                         else
206        1/1                  write_strb <= write_strb;
207                     end
208                     
209                     always@(posedge clk or negedge rst_n)
210                     begin
211        1/1              if(~rst_n)
212        1/1                  ram_wr_en <= 1'b0;
213        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
214        1/1                  ram_wr_en <= 1'b1;
215                         else
216        1/1                  ram_wr_en <= 1'b0;
217                     end
218                     
219                     always@(posedge clk or negedge rst_n)
220                     begin
221        1/1              if(~rst_n)
222        1/1                  ram_wr_addr <= 4'd0;
223        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
224        1/1                  ram_wr_addr <= write_addr[3:0];
225                         else
226        1/1                  ram_wr_addr <= 4'd0;
227                     end
228                     
229                     always@(posedge clk or negedge rst_n)
230                     begin
231        1/1              if(~rst_n)
232        1/1                  ram_wr_strb <= 2'd0;
233        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
234        1/1                  ram_wr_strb <= write_strb;
235                         else
236        1/1                  ram_wr_strb <= 2'd0;
237                     end
238                     
239                     always@(posedge clk or negedge rst_n)
240                     begin
241        1/1              if(~rst_n)
242        1/1                  ram_wr_data <= 32'd0;
243        1/1              else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
244        1/1                  ram_wr_data <= wr_data;
245                         else
246        1/1                  ram_wr_data <= 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_7

               Total   Covered  Percent
Conditions         30       18    60.00
Logical            30       18    60.00
Non-Logical         0        0
Event               0        0

 LINE       167
 EXPRESSION (wr_sop || (beat_cnt == beat_msb))
             ---1--    -----------2----------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       177
 EXPRESSION (wr_sop || wr_eop)
             ---1--    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       191
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       203
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       213
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       223
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       233
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       243
 EXPRESSION (work_enable && (beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb))
             -----1-----    -----------2----------    -----------3----------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_7
                Total Covered Percent 
Totals          14    12      85.71   
Total Bits      226   216     95.58   
Total Bits 0->1 113   108     95.58   
Total Bits 1->0 113   108     95.58   

                              
Ports          10  9   90.00  
Port Bits      152 150 98.68  
Port Bits 0->1 76  75  98.68  
Port Bits 1->0 76  75  98.68  

                              
Signals          4  3  75.00  
Signal Bits      74 66 89.19  
Signal Bits 0->1 37 33 89.19  
Signal Bits 1->0 37 33 89.19  

Port Details
                  Toggle Toggle 1->0 Toggle 0->1 Direction 
clk               Yes    Yes         Yes         INPUT     
rst_n             Yes    Yes         Yes         INPUT     
wr_sop            Yes    Yes         Yes         INPUT     
wr_eop            Yes    Yes         Yes         INPUT     
wr_vld            Yes    Yes         Yes         INPUT     
wr_data[31:0]     Yes    Yes         Yes         INPUT     
ram_wr_en         Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[1:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[2]    No     No          No          OUTPUT    
ram_wr_data[31:3] Yes    Yes         Yes         OUTPUT    

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
work_enable       Yes    Yes         Yes         
beat_cnt[5:0]     Yes    Yes         Yes         
write_addr[3:0]   Yes    Yes         Yes         
write_addr[4]     No     No          No          
write_addr[7:5]   Yes    Yes         Yes         
write_addr[8]     No     No          No          
write_addr[11:9]  Yes    Yes         Yes         
write_addr[12]    No     No          No          
write_addr[15:13] Yes    Yes         Yes         
write_addr[16]    No     No          No          
write_addr[19:17] Yes    Yes         Yes         
write_strb[9:0]   Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_wr_control_7
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       165      3     3       100.00  
IF       175      4     4       100.00  
IF       187      4     4       100.00  
IF       199      4     4       100.00  
IF       211      3     3       100.00  
IF       221      3     3       100.00  
IF       231      3     3       100.00  
IF       241      3     3       100.00  


165            if(~rst_n)
               -1-  
166                work_enable <= 1'b0;
                   ==>
167            else if(wr_sop || (beat_cnt == beat_msb))
                    -2-  
168                work_enable <= ~work_enable;
                   ==>
169            else
170                work_enable <= work_enable;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


175            if(~rst_n)
               -1-  
176                beat_cnt <= 1'b0;
                   ==>
177            else if(wr_sop || wr_eop)
                    -2-  
178                beat_cnt <= 1'b0;
                   ==>
179            else if(work_enable)
                    -3-  
180                beat_cnt <= beat_cnt + 1;
                   ==>
181            else
182                beat_cnt <= beat_cnt;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


187            if(~rst_n)
               -1-  
188                write_addr <= 20'd0;
                   ==>
189            else if(wr_sop)
                    -2-  
190                write_addr <= {wr_addr5, wr_addr4, wr_addr3, wr_addr2, wr_addr1};
                   ==>
191            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
192                write_addr <= write_addr >> 4;
                   ==>
193            else
194                write_addr <= write_addr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


199            if(~rst_n)
               -1-  
200                write_strb <= 10'd0;
                   ==>
201            else if(wr_sop)
                    -2-  
202                write_strb <= {wr_strb5, wr_strb4, wr_strb3, wr_strb2, wr_strb1};
                   ==>
203            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -3-  
204                write_strb <= write_strb >> 2;
                   ==>
205            else
206                write_strb <= write_strb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


211            if(~rst_n)
               -1-  
212                ram_wr_en <= 1'b0;
                   ==>
213            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
214                ram_wr_en <= 1'b1;
                   ==>
215            else
216                ram_wr_en <= 1'b0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


221            if(~rst_n)
               -1-  
222                ram_wr_addr <= 4'd0;
                   ==>
223            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
224                ram_wr_addr <= write_addr[3:0];
                   ==>
225            else
226                ram_wr_addr <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


231            if(~rst_n)
               -1-  
232                ram_wr_strb <= 2'd0;
                   ==>
233            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
234                ram_wr_strb <= write_strb;
                   ==>
235            else
236                ram_wr_strb <= 2'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


241            if(~rst_n)
               -1-  
242                ram_wr_data <= 32'd0;
                   ==>
243            else if(work_enable && ((beat_cnt <= beat_msb) && (beat_cnt >= beat_lsb)))
                    -2-  
244                ram_wr_data <= wr_data;
                   ==>
245            else
246                ram_wr_data <= 32'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


===============================================================================
Module : dual_port_ram
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.55  96.15 --     100.00 --      87.50 

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/rtl/dual_port_ram.v

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                                           
 76.20  92.31 --      61.29 --      75.00 npu_tb.u_NPU.pe_control_data.dual_port_ram_2   
 77.81  92.31 --      66.13 --      75.00 npu_tb.u_NPU.pe_control_data.dual_port_ram_4   
 79.43  92.31 --      70.97 --      75.00 npu_tb.u_NPU.pe_control_data.dual_port_ram_3   
 79.96  92.31 --      72.58 --      75.00 npu_tb.u_NPU.pe_control_data.dual_port_ram_5   
 81.04  92.31 --      75.81 --      75.00 npu_tb.u_NPU.pe_control_data.dual_port_ram_1   
 84.26  92.31 --      85.48 --      75.00 npu_tb.u_NPU.pe_control_data.dual_port_ram_7   
 86.68  92.31 --      92.74 --      75.00 npu_tb.u_NPU.pe_control_data.dual_port_ram_0   
 88.03  92.31 --      96.77 --      75.00 npu_tb.u_NPU.pe_control_weight.dual_port_ram_3 
 88.03  92.31 --      96.77 --      75.00 npu_tb.u_NPU.pe_control_weight.dual_port_ram_4 
 88.56  92.31 --      98.39 --      75.00 npu_tb.u_NPU.pe_control_data.dual_port_ram_6   
 88.56  92.31 --      98.39 --      75.00 npu_tb.u_NPU.pe_control_weight.dual_port_ram_0 
 88.56  92.31 --      98.39 --      75.00 npu_tb.u_NPU.pe_control_weight.dual_port_ram_2 
 88.56  92.31 --      98.39 --      75.00 npu_tb.u_NPU.pe_control_weight.dual_port_ram_6 
 88.56  92.31 --      98.39 --      75.00 npu_tb.u_NPU.pe_control_weight.dual_port_ram_7 
 89.10  92.31 --     100.00 --      75.00 npu_tb.u_NPU.pe_control_weight.dual_port_ram_1 
 89.10  92.31 --     100.00 --      75.00 npu_tb.u_NPU.pe_control_weight.dual_port_ram_5 



-------------------------------------------------------------------------------
Line Coverage for Module : dual_port_ram

             Line No.   Total   Covered  Percent
TOTAL                       26       25    96.15
ALWAYS             40       24       23    95.83
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         1/1                          mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Module : dual_port_ram
                Total Covered Percent 
Totals          9     9       100.00  
Total Bits      124   124     100.00  
Total Bits 0->1 62    62      100.00  
Total Bits 1->0 62    62      100.00  

                              
Ports          9   9   100.00 
Port Bits      124 124 100.00 
Port Bits 0->1 62  62  100.00 
Port Bits 1->0 62  62  100.00 

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[31:0]  Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[15:0]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Module : dual_port_ram
         Line No. Total Covered Percent 
Branches          8     7       87.50   
IF       40       6     5       83.33   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Covered     
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 76.20  92.31 --      61.29 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 76.20  92.31 --      61.29 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_2

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         0/1     ==>                  mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_2
                Total Covered Percent 
Totals          9     7       77.78   
Total Bits      124   76      61.29   
Total Bits 0->1 62    38      61.29   
Total Bits 1->0 62    38      61.29   

                             
Ports          9   7  77.78  
Port Bits      124 76 61.29  
Port Bits 0->1 62  38 61.29  
Port Bits 1->0 62  38 61.29  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[0]     Yes    Yes         Yes         INPUT     
wdata[1]     No     No          No          INPUT     
wdata[2]     Yes    Yes         Yes         INPUT     
wdata[4:3]   No     No          No          INPUT     
wdata[5]     Yes    Yes         Yes         INPUT     
wdata[15:6]  No     No          No          INPUT     
wdata[17:16] Yes    Yes         Yes         INPUT     
wdata[18]    No     No          No          INPUT     
wdata[31:19] Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[0]     Yes    Yes         Yes         OUTPUT    
rdata[1]     No     No          No          OUTPUT    
rdata[6:2]   Yes    Yes         Yes         OUTPUT    
rdata[15:7]  No     No          No          OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_2
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Not Covered 
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 77.81  92.31 --      66.13 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 77.81  92.31 --      66.13 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_4

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         0/1     ==>                  mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_4
                Total Covered Percent 
Totals          9     7       77.78   
Total Bits      124   82      66.13   
Total Bits 0->1 62    41      66.13   
Total Bits 1->0 62    41      66.13   

                             
Ports          9   7  77.78  
Port Bits      124 82 66.13  
Port Bits 0->1 62  41 66.13  
Port Bits 1->0 62  41 66.13  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[1:0]   Yes    Yes         Yes         INPUT     
wdata[3:2]   No     No          No          INPUT     
wdata[4]     Yes    Yes         Yes         INPUT     
wdata[5]     No     No          No          INPUT     
wdata[7:6]   Yes    Yes         Yes         INPUT     
wdata[16:8]  No     No          No          INPUT     
wdata[21:17] Yes    Yes         Yes         INPUT     
wdata[22]    No     No          No          INPUT     
wdata[31:23] Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[7:0]   Yes    Yes         Yes         OUTPUT    
rdata[15:8]  No     No          No          OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_4
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Not Covered 
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 79.43  92.31 --      70.97 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 79.43  92.31 --      70.97 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_3

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         0/1     ==>                  mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_3
                Total Covered Percent 
Totals          9     7       77.78   
Total Bits      124   88      70.97   
Total Bits 0->1 62    44      70.97   
Total Bits 1->0 62    44      70.97   

                             
Ports          9   7  77.78  
Port Bits      124 88 70.97  
Port Bits 0->1 62  44 70.97  
Port Bits 1->0 62  44 70.97  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[0]     No     No          No          INPUT     
wdata[1]     Yes    Yes         Yes         INPUT     
wdata[4:2]   No     No          No          INPUT     
wdata[5]     Yes    Yes         Yes         INPUT     
wdata[15:6]  No     No          No          INPUT     
wdata[21:16] Yes    Yes         Yes         INPUT     
wdata[22]    No     No          No          INPUT     
wdata[31:23] Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[1:0]   Yes    Yes         Yes         OUTPUT    
rdata[2]     No     No          No          OUTPUT    
rdata[3]     Yes    Yes         Yes         OUTPUT    
rdata[4]     No     No          No          OUTPUT    
rdata[5]     Yes    Yes         Yes         OUTPUT    
rdata[6]     No     No          No          OUTPUT    
rdata[15:7]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_3
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Not Covered 
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 79.96  92.31 --      72.58 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 79.96  92.31 --      72.58 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_5

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         0/1     ==>                  mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_5
                Total Covered Percent 
Totals          9     7       77.78   
Total Bits      124   90      72.58   
Total Bits 0->1 62    45      72.58   
Total Bits 1->0 62    45      72.58   

                             
Ports          9   7  77.78  
Port Bits      124 90 72.58  
Port Bits 0->1 62  45 72.58  
Port Bits 1->0 62  45 72.58  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[2:0]   Yes    Yes         Yes         INPUT     
wdata[3]     No     No          No          INPUT     
wdata[4]     Yes    Yes         Yes         INPUT     
wdata[5]     No     No          No          INPUT     
wdata[7:6]   Yes    Yes         Yes         INPUT     
wdata[16:8]  No     No          No          INPUT     
wdata[17]    Yes    Yes         Yes         INPUT     
wdata[19:18] No     No          No          INPUT     
wdata[20]    Yes    Yes         Yes         INPUT     
wdata[22:21] No     No          No          INPUT     
wdata[31:23] Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[2:0]   Yes    Yes         Yes         OUTPUT    
rdata[3]     No     No          No          OUTPUT    
rdata[4]     Yes    Yes         Yes         OUTPUT    
rdata[5]     No     No          No          OUTPUT    
rdata[15:6]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_5
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Not Covered 
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.04  92.31 --      75.81 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.04  92.31 --      75.81 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_1

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         0/1     ==>                  mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_1
                Total Covered Percent 
Totals          9     7       77.78   
Total Bits      124   94      75.81   
Total Bits 0->1 62    47      75.81   
Total Bits 1->0 62    47      75.81   

                             
Ports          9   7  77.78  
Port Bits      124 94 75.81  
Port Bits 0->1 62  47 75.81  
Port Bits 1->0 62  47 75.81  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[0]     Yes    Yes         Yes         INPUT     
wdata[1]     No     No          No          INPUT     
wdata[5:2]   Yes    Yes         Yes         INPUT     
wdata[7:6]   No     No          No          INPUT     
wdata[15:8]  Yes    Yes         Yes         INPUT     
wdata[18:16] No     No          No          INPUT     
wdata[23:19] Yes    Yes         Yes         INPUT     
wdata[31:24] No     No          No          INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[0]     Yes    Yes         Yes         OUTPUT    
rdata[1]     No     No          No          OUTPUT    
rdata[15:2]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_1
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Not Covered 
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 84.26  92.31 --      85.48 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 84.26  92.31 --      85.48 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_7

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         0/1     ==>                  mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_7
                Total Covered Percent 
Totals          9     7       77.78   
Total Bits      124   106     85.48   
Total Bits 0->1 62    58      93.55   
Total Bits 1->0 62    48      77.42   

                              
Ports          9   7   77.78  
Port Bits      124 106 85.48  
Port Bits 0->1 62  58  93.55  
Port Bits 1->0 62  48  77.42  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[0]     Yes    Yes         Yes         INPUT     
wdata[1]     No     No          No          INPUT     
wdata[3:2]   Yes    Yes         Yes         INPUT     
wdata[4]     No     No          No          INPUT     
wdata[6:5]   Yes    Yes         Yes         INPUT     
wdata[7]     No     No          No          INPUT     
wdata[21:8]  Yes    Yes         Yes         INPUT     
wdata[22]    No     No          No          INPUT     
wdata[31:23] Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[0]     No     No          Yes         OUTPUT    
rdata[4:1]   Yes    Yes         Yes         OUTPUT    
rdata[5]     No     No          Yes         OUTPUT    
rdata[7:6]   Yes    Yes         Yes         OUTPUT    
rdata[15:8]  No     No          Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_7
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Not Covered 
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 86.68  92.31 --      92.74 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 86.68  92.31 --      92.74 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_0

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         0/1     ==>                  mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_0
                Total Covered Percent 
Totals          9     7       77.78   
Total Bits      124   115     92.74   
Total Bits 0->1 62    57      91.94   
Total Bits 1->0 62    58      93.55   

                              
Ports          9   7   77.78  
Port Bits      124 115 92.74  
Port Bits 0->1 62  57  91.94  
Port Bits 1->0 62  58  93.55  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[0]     Yes    Yes         Yes         INPUT     
wdata[1]     No     No          No          INPUT     
wdata[5:2]   Yes    Yes         Yes         INPUT     
wdata[7:6]   No     No          No          INPUT     
wdata[31:8]  Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[1:0]   Yes    Yes         Yes         OUTPUT    
rdata[2]     No     Yes         No          OUTPUT    
rdata[6:3]   Yes    Yes         Yes         OUTPUT    
rdata[7]     No     No          No          OUTPUT    
rdata[15:8]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_0
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Not Covered 
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.03  92.31 --      96.77 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.03  92.31 --      96.77 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_3

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         1/1                          mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         0/1     ==>                  mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_3
                Total Covered Percent 
Totals          9     8       88.89   
Total Bits      124   120     96.77   
Total Bits 0->1 62    60      96.77   
Total Bits 1->0 62    60      96.77   

                              
Ports          9   8   88.89  
Port Bits      124 120 96.77  
Port Bits 0->1 62  60  96.77  
Port Bits 1->0 62  60  96.77  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[17:0]  Yes    Yes         Yes         INPUT     
wdata[18]    No     No          No          INPUT     
wdata[20:19] Yes    Yes         Yes         INPUT     
wdata[21]    No     No          No          INPUT     
wdata[31:22] Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[15:0]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_3
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Covered     
0   1   2'b01   Not Covered 
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.03  92.31 --      96.77 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.03  92.31 --      96.77 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_4

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         0/1     ==>                  mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_4
                Total Covered Percent 
Totals          9     7       77.78   
Total Bits      124   120     96.77   
Total Bits 0->1 62    60      96.77   
Total Bits 1->0 62    60      96.77   

                              
Ports          9   7   77.78  
Port Bits      124 120 96.77  
Port Bits 0->1 62  60  96.77  
Port Bits 1->0 62  60  96.77  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[0]     No     No          No          INPUT     
waddr[3:1]   Yes    Yes         Yes         INPUT     
wdata[0]     No     No          No          INPUT     
wdata[31:1]  Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[15:0]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_4
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Not Covered 
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.56  92.31 --      98.39 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.56  92.31 --      98.39 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_6

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         0/1     ==>                  mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_6
                Total Covered Percent 
Totals          9     8       88.89   
Total Bits      124   122     98.39   
Total Bits 0->1 62    61      98.39   
Total Bits 1->0 62    61      98.39   

                              
Ports          9   8   88.89  
Port Bits      124 122 98.39  
Port Bits 0->1 62  61  98.39  
Port Bits 1->0 62  61  98.39  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[21:0]  Yes    Yes         Yes         INPUT     
wdata[22]    No     No          No          INPUT     
wdata[31:23] Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[15:0]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.dual_port_ram_6
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Not Covered 
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.56  92.31 --      98.39 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.56  92.31 --      98.39 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_0

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         0/1     ==>                  mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_0
                Total Covered Percent 
Totals          9     8       88.89   
Total Bits      124   122     98.39   
Total Bits 0->1 62    61      98.39   
Total Bits 1->0 62    61      98.39   

                              
Ports          9   8   88.89  
Port Bits      124 122 98.39  
Port Bits 0->1 62  61  98.39  
Port Bits 1->0 62  61  98.39  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[0]     No     No          No          INPUT     
waddr[3:1]   Yes    Yes         Yes         INPUT     
wdata[31:0]  Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[15:0]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_0
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Not Covered 
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.56  92.31 --      98.39 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.56  92.31 --      98.39 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_2

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         0/1     ==>                  mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_2
                Total Covered Percent 
Totals          9     8       88.89   
Total Bits      124   122     98.39   
Total Bits 0->1 62    61      98.39   
Total Bits 1->0 62    61      98.39   

                              
Ports          9   8   88.89  
Port Bits      124 122 98.39  
Port Bits 0->1 62  61  98.39  
Port Bits 1->0 62  61  98.39  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[0]     No     No          No          INPUT     
waddr[3:1]   Yes    Yes         Yes         INPUT     
wdata[31:0]  Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[15:0]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_2
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Not Covered 
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.56  92.31 --      98.39 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.56  92.31 --      98.39 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_6

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         0/1     ==>                  mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         1/1                          mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_6
                Total Covered Percent 
Totals          9     8       88.89   
Total Bits      124   122     98.39   
Total Bits 0->1 62    61      98.39   
Total Bits 1->0 62    61      98.39   

                              
Ports          9   8   88.89  
Port Bits      124 122 98.39  
Port Bits 0->1 62  61  98.39  
Port Bits 1->0 62  61  98.39  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[0]     No     No          No          INPUT     
waddr[3:1]   Yes    Yes         Yes         INPUT     
wdata[31:0]  Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[15:0]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_6
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Not Covered 
0   1   2'b01   Covered     
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.56  92.31 --      98.39 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.56  92.31 --      98.39 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_7

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         1/1                          mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         0/1     ==>                  mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_7
                Total Covered Percent 
Totals          9     8       88.89   
Total Bits      124   122     98.39   
Total Bits 0->1 62    61      98.39   
Total Bits 1->0 62    61      98.39   

                              
Ports          9   8   88.89  
Port Bits      124 122 98.39  
Port Bits 0->1 62  61  98.39  
Port Bits 1->0 62  61  98.39  

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[1:0]   Yes    Yes         Yes         INPUT     
wdata[2]     No     No          No          INPUT     
wdata[31:3]  Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[15:0]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_7
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Covered     
0   1   2'b01   Not Covered 
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 89.10  92.31 --     100.00 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 89.10  92.31 --     100.00 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_1

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         1/1                          mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         0/1     ==>                  mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_1
                Total Covered Percent 
Totals          9     9       100.00  
Total Bits      124   124     100.00  
Total Bits 0->1 62    62      100.00  
Total Bits 1->0 62    62      100.00  

                              
Ports          9   9   100.00 
Port Bits      124 124 100.00 
Port Bits 0->1 62  62  100.00 
Port Bits 1->0 62  62  100.00 

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[31:0]  Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[15:0]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_1
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Covered     
0   1   2'b01   Not Covered 
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 89.10  92.31 --     100.00 --      75.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 89.10  92.31 --     100.00 --      75.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 94.55  96.15 --     100.00 --      87.50 dual_port_ram 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_5

             Line No.   Total   Covered  Percent
TOTAL                       26       24    92.31
ALWAYS             40       24       22    91.67
ALWAYS             76        2        2   100.00

39                      always@(posedge clk or negedge rst_n)begin
40         1/1              if(~rst_n)begin
41         1/1                  mem[0] <= 16'd0;
42         1/1                  mem[1] <= 16'd0;
43         1/1                  mem[2] <= 16'd0;
44         1/1                  mem[3] <= 16'd0;
45         1/1                  mem[4] <= 16'd0;
46         1/1                  mem[5] <= 16'd0;
47         1/1                  mem[6] <= 16'd0;
48         1/1                  mem[7] <= 16'd0;
49         1/1                  mem[8] <= 16'd0;
50         1/1                  mem[9] <= 16'd0;
51         1/1                  mem[10] <= 16'd0;
52         1/1                  mem[11] <= 16'd0;
53         1/1                  mem[12] <= 16'd0;
54         1/1                  mem[13] <= 16'd0;
55         1/1                  mem[14] <= 16'd0;
56         1/1                  mem[15] <= 16'd0;
57                          end
58         1/1              else if(wr_en)begin
59         1/1                  case(wr_strb)
60                                  2'b11:begin
61         1/1                          mem[waddr] <= wdata[15:0];
62         1/1                          mem[waddr+1] <= wdata[31:16];
63                                  end
64                                  2'b10:begin
65         1/1                          mem[waddr] <= wdata[31:16];
66                                  end
67                                  2'b01:begin
68         0/1     ==>                  mem[waddr] <= wdata[15:0];
69                                  end
70         0/1     ==>              default:mem[waddr] <= mem[waddr];
71                              endcase
72                          end
                        MISSING_ELSE
73                      end
74                      
75                      always@(posedge clk)begin
76         1/1              if(rd_en)
77         1/1                  rdata <= mem[raddr];
                        MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_5
                Total Covered Percent 
Totals          9     9       100.00  
Total Bits      124   124     100.00  
Total Bits 0->1 62    62      100.00  
Total Bits 1->0 62    62      100.00  

                              
Ports          9   9   100.00 
Port Bits      124 124 100.00 
Port Bits 0->1 62  62  100.00 
Port Bits 1->0 62  62  100.00 

Port Details
             Toggle Toggle 1->0 Toggle 0->1 Direction 
clk          Yes    Yes         Yes         INPUT     
rst_n        Yes    Yes         Yes         INPUT     
wr_en        Yes    Yes         Yes         INPUT     
wr_strb[1:0] Yes    Yes         Yes         INPUT     
waddr[3:0]   Yes    Yes         Yes         INPUT     
wdata[31:0]  Yes    Yes         Yes         INPUT     
rd_en        Yes    Yes         Yes         INPUT     
raddr[3:0]   Yes    Yes         Yes         INPUT     
rdata[15:0]  Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.dual_port_ram_5
         Line No. Total Covered Percent 
Branches          8     6       75.00   
IF       40       6     4       66.67   
IF       76       2     2       100.00  


40             if(~rst_n)begin
               -1-  
41                 mem[0] <= 16'd0;
                   ==>
42                 mem[1] <= 16'd0;
43                 mem[2] <= 16'd0;
44                 mem[3] <= 16'd0;
45                 mem[4] <= 16'd0;
46                 mem[5] <= 16'd0;
47                 mem[6] <= 16'd0;
48                 mem[7] <= 16'd0;
49                 mem[8] <= 16'd0;
50                 mem[9] <= 16'd0;
51                 mem[10] <= 16'd0;
52                 mem[11] <= 16'd0;
53                 mem[12] <= 16'd0;
54                 mem[13] <= 16'd0;
55                 mem[14] <= 16'd0;
56                 mem[15] <= 16'd0;
57             end
58             else if(wr_en)begin
                    -2-  
59                 case(wr_strb)
                   -3-  
60                     2'b11:begin
61                         mem[waddr] <= wdata[15:0];
                           ==>
62                         mem[waddr+1] <= wdata[31:16];
63                     end
64                     2'b10:begin
65                         mem[waddr] <= wdata[31:16];
                           ==>
66                     end
67                     2'b01:begin
68                         mem[waddr] <= wdata[15:0];
                           ==>
69                     end
70                     default:mem[waddr] <= mem[waddr];
                       ==>
71                 endcase
72             end
               MISSING_ELSE
               ==>

Branches:

-1- -2- -3-     Status      
1   -   -       Covered     
0   1   2'b11   Covered     
0   1   2'b10   Covered     
0   1   2'b01   Not Covered 
0   1   default Not Covered 
0   0   -       Covered     


76             if(rd_en)
               -1-  
77                 rdata <= mem[raddr];
                   ==>
                   MISSING_ELSE
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


===============================================================================
Module : ram_wr_control_data
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.11 100.00  81.25  99.20 --     100.00 

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/rtl/ram_wr_control.v

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                                          
 90.51 100.00  81.25  80.80 --     100.00 npu_tb.u_NPU.pe_control_data.ram_wr_control_2 
 90.71 100.00  81.25  81.60 --     100.00 npu_tb.u_NPU.pe_control_data.ram_wr_control_1 
 90.71 100.00  81.25  81.60 --     100.00 npu_tb.u_NPU.pe_control_data.ram_wr_control_3 
 91.31 100.00  81.25  84.00 --     100.00 npu_tb.u_NPU.pe_control_data.ram_wr_control_4 
 91.51 100.00  81.25  84.80 --     100.00 npu_tb.u_NPU.pe_control_data.ram_wr_control_5 
 92.31 100.00  81.25  88.00 --     100.00 npu_tb.u_NPU.pe_control_data.ram_wr_control_0 
 94.31 100.00  81.25  96.00 --     100.00 npu_tb.u_NPU.pe_control_data.ram_wr_control_6 
 94.31 100.00  81.25  96.00 --     100.00 npu_tb.u_NPU.pe_control_data.ram_wr_control_7 



-------------------------------------------------------------------------------
Line Coverage for Module : ram_wr_control_data

             Line No.   Total   Covered  Percent
TOTAL                       38       38   100.00
ALWAYS             57        7        7   100.00
ALWAYS             69        7        7   100.00
ALWAYS             81        7        7   100.00
ALWAYS             93        5        5   100.00
ALWAYS            103        3        3   100.00
ALWAYS            111        3        3   100.00
ALWAYS            119        3        3   100.00
ALWAYS            127        3        3   100.00

56                      begin
57         1/1              if(~rst_n)
58         1/1                  d_select <= 10'd0;
59         1/1              else if(wr_sop)
60         1/1                  d_select <= bus_data_vld;
61         1/1              else if(wr_vld)
62         1/1                  d_select <= d_select >> 1;
63                          else
64         1/1                  d_select <= d_select;
65                      end
66                      
67                      always@(posedge clk or negedge rst_n)
68                      begin
69         1/1              if(~rst_n)
70         1/1                  waddr <= 24'd0;
71         1/1              else if(wr_sop && decode_rst)
72         1/1                  waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
73         1/1              else if(wr_vld && d_select[0])
74         1/1                  waddr <= waddr >> 4;
75                          else
76         1/1                  waddr <= waddr;
77                      end
78                      
79                      always@(posedge clk or negedge rst_n)
80                      begin
81         1/1              if(~rst_n)
82         1/1                  wstrb <= 12'd0;
83         1/1              else if(wr_sop && decode_rst)
84         1/1                  wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
85         1/1              else if(wr_vld && d_select[0])
86         1/1                  wstrb <= wstrb >> 2;
87                          else
88         1/1                  wstrb <= wstrb;
89                      end
90                      
91                      always@(posedge clk or negedge rst_n)
92                      begin
93         1/1              if(~rst_n)
94         1/1                  wr_sop_cnt <= 2'd0;
95         1/1              else if(wr_sop_cnt == 2'b11)
96         1/1                  wr_sop_cnt <= 2'd0;
97                          else
98         1/1                  wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
99                      end
100                     
101                     always@(posedge clk or negedge rst_n)
102                     begin
103        1/1              if(~rst_n)
104        1/1                  ram_wr_en <= 1'b0;
105                         else
106        1/1                  ram_wr_en <= wr_vld && d_select[0];
107                     end
108                     
109                     always@(posedge clk or negedge rst_n)
110                     begin
111        1/1              if(~rst_n)
112        1/1                  ram_wr_strb <= 2'b00;
113                         else
114        1/1                  ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
115                     end
116                     
117                     always@(posedge clk or negedge rst_n)
118                     begin
119        1/1              if(~rst_n)
120        1/1                  ram_wr_addr <= 4'b0000;
121                         else
122        1/1                  ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
123                     end
124                     
125                     always@(posedge clk or negedge rst_n)
126                     begin
127        1/1              if(~rst_n)
128        1/1                  ram_wr_data <= 32'd0;
129                         else
130        1/1                  ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Module : ram_wr_control_data

               Total   Covered  Percent
Conditions         32       26    81.25
Logical            32       26    81.25
Non-Logical         0        0
Event               0        0

 LINE       71
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       73
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       83
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       85
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       98
 EXPRESSION (wr_sop ? ((wr_sop_cnt + 1'b1)) : wr_sop_cnt)
             ---1--

-1- Status
 0  Covered
 1  Covered

 LINE       106
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       114
 EXPRESSION ((wr_vld && d_select[0]) ? wstrb[1:0] : 2'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       114
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       122
 EXPRESSION ((wr_vld && d_select[0]) ? waddr[3:0] : 4'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       122
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       130
 EXPRESSION ((wr_vld && d_select[0]) ? wr_data : 32'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       130
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Module : ram_wr_control_data
                Total Covered Percent 
Totals          15    14      93.33   
Total Bits      250   248     99.20   
Total Bits 0->1 125   124     99.20   
Total Bits 1->0 125   124     99.20   

                              
Ports          10  10  100.00 
Port Bits      152 152 100.00 
Port Bits 0->1 76  76  100.00 
Port Bits 1->0 76  76  100.00 

                              
Signals          5  4  80.00  
Signal Bits      98 96 97.96  
Signal Bits 0->1 49 48 97.96  
Signal Bits 1->0 49 48 97.96  

Port Details
                  Toggle Toggle 1->0 Toggle 0->1 Direction 
clk               Yes    Yes         Yes         INPUT     
rst_n             Yes    Yes         Yes         INPUT     
wr_sop            Yes    Yes         Yes         INPUT     
wr_eop            Yes    Yes         Yes         INPUT     
wr_vld            Yes    Yes         Yes         INPUT     
wr_data[31:0]     Yes    Yes         Yes         INPUT     
ram_wr_en         Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[31:0] Yes    Yes         Yes         OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
d_select[9:0]   Yes    Yes         Yes         
waddr[23:0]     Yes    Yes         Yes         
wstrb[10:0]     Yes    Yes         Yes         
wstrb[11]       No     No          No          
wr_sop_cnt[1:0] Yes    Yes         Yes         
decode_rst      Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Module : ram_wr_control_data
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       57       4     4       100.00  
IF       69       4     4       100.00  
IF       81       4     4       100.00  
IF       93       4     4       100.00  
IF       103      2     2       100.00  
IF       111      3     3       100.00  
IF       119      3     3       100.00  
IF       127      3     3       100.00  


57             if(~rst_n)
               -1-  
58                 d_select <= 10'd0;
                   ==>
59             else if(wr_sop)
                    -2-  
60                 d_select <= bus_data_vld;
                   ==>
61             else if(wr_vld)
                    -3-  
62                 d_select <= d_select >> 1;
                   ==>
63             else
64                 d_select <= d_select;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


69             if(~rst_n)
               -1-  
70                 waddr <= 24'd0;
                   ==>
71             else if(wr_sop && decode_rst)
                    -2-  
72                 waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
                   ==>
73             else if(wr_vld && d_select[0])
                    -3-  
74                 waddr <= waddr >> 4;
                   ==>
75             else
76                 waddr <= waddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


81             if(~rst_n)
               -1-  
82                 wstrb <= 12'd0;
                   ==>
83             else if(wr_sop && decode_rst)
                    -2-  
84                 wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
                   ==>
85             else if(wr_vld && d_select[0])
                    -3-  
86                 wstrb <= wstrb >> 2;
                   ==>
87             else
88                 wstrb <= wstrb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


93             if(~rst_n)
               -1-  
94                 wr_sop_cnt <= 2'd0;
                   ==>
95             else if(wr_sop_cnt == 2'b11)
                    -2-  
96                 wr_sop_cnt <= 2'd0;
                   ==>
97             else
98                 wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
                                        -3-  
                                        ==>  
                                        ==>  

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


103            if(~rst_n)
               -1-  
104                ram_wr_en <= 1'b0;
                   ==>
105            else
106                ram_wr_en <= wr_vld && d_select[0];
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


111            if(~rst_n)
               -1-  
112                ram_wr_strb <= 2'b00;
                   ==>
113            else
114                ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


119            if(~rst_n)
               -1-  
120                ram_wr_addr <= 4'b0000;
                   ==>
121            else
122                ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


127            if(~rst_n)
               -1-  
128                ram_wr_data <= 32'd0;
                   ==>
129            else
130                ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 90.51 100.00  81.25  80.80 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 90.51 100.00  81.25  80.80 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
 95.11 100.00  81.25  99.20 --     100.00 ram_wr_control_data 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_2

             Line No.   Total   Covered  Percent
TOTAL                       38       38   100.00
ALWAYS             57        7        7   100.00
ALWAYS             69        7        7   100.00
ALWAYS             81        7        7   100.00
ALWAYS             93        5        5   100.00
ALWAYS            103        3        3   100.00
ALWAYS            111        3        3   100.00
ALWAYS            119        3        3   100.00
ALWAYS            127        3        3   100.00

56                      begin
57         1/1              if(~rst_n)
58         1/1                  d_select <= 10'd0;
59         1/1              else if(wr_sop)
60         1/1                  d_select <= bus_data_vld;
61         1/1              else if(wr_vld)
62         1/1                  d_select <= d_select >> 1;
63                          else
64         1/1                  d_select <= d_select;
65                      end
66                      
67                      always@(posedge clk or negedge rst_n)
68                      begin
69         1/1              if(~rst_n)
70         1/1                  waddr <= 24'd0;
71         1/1              else if(wr_sop && decode_rst)
72         1/1                  waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
73         1/1              else if(wr_vld && d_select[0])
74         1/1                  waddr <= waddr >> 4;
75                          else
76         1/1                  waddr <= waddr;
77                      end
78                      
79                      always@(posedge clk or negedge rst_n)
80                      begin
81         1/1              if(~rst_n)
82         1/1                  wstrb <= 12'd0;
83         1/1              else if(wr_sop && decode_rst)
84         1/1                  wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
85         1/1              else if(wr_vld && d_select[0])
86         1/1                  wstrb <= wstrb >> 2;
87                          else
88         1/1                  wstrb <= wstrb;
89                      end
90                      
91                      always@(posedge clk or negedge rst_n)
92                      begin
93         1/1              if(~rst_n)
94         1/1                  wr_sop_cnt <= 2'd0;
95         1/1              else if(wr_sop_cnt == 2'b11)
96         1/1                  wr_sop_cnt <= 2'd0;
97                          else
98         1/1                  wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
99                      end
100                     
101                     always@(posedge clk or negedge rst_n)
102                     begin
103        1/1              if(~rst_n)
104        1/1                  ram_wr_en <= 1'b0;
105                         else
106        1/1                  ram_wr_en <= wr_vld && d_select[0];
107                     end
108                     
109                     always@(posedge clk or negedge rst_n)
110                     begin
111        1/1              if(~rst_n)
112        1/1                  ram_wr_strb <= 2'b00;
113                         else
114        1/1                  ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
115                     end
116                     
117                     always@(posedge clk or negedge rst_n)
118                     begin
119        1/1              if(~rst_n)
120        1/1                  ram_wr_addr <= 4'b0000;
121                         else
122        1/1                  ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
123                     end
124                     
125                     always@(posedge clk or negedge rst_n)
126                     begin
127        1/1              if(~rst_n)
128        1/1                  ram_wr_data <= 32'd0;
129                         else
130        1/1                  ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_2

               Total   Covered  Percent
Conditions         32       26    81.25
Logical            32       26    81.25
Non-Logical         0        0
Event               0        0

 LINE       71
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       73
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       83
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       85
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       98
 EXPRESSION (wr_sop ? ((wr_sop_cnt + 1'b1)) : wr_sop_cnt)
             ---1--

-1- Status
 0  Covered
 1  Covered

 LINE       106
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       114
 EXPRESSION ((wr_vld && d_select[0]) ? wstrb[1:0] : 2'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       114
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       122
 EXPRESSION ((wr_vld && d_select[0]) ? waddr[3:0] : 4'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       122
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       130
 EXPRESSION ((wr_vld && d_select[0]) ? wr_data : 32'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       130
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_2
                Total Covered Percent 
Totals          15    11      73.33   
Total Bits      250   202     80.80   
Total Bits 0->1 125   101     80.80   
Total Bits 1->0 125   101     80.80   

                              
Ports          10  9   90.00  
Port Bits      152 124 81.58  
Port Bits 0->1 76  62  81.58  
Port Bits 1->0 76  62  81.58  

                              
Signals          5  2  40.00  
Signal Bits      98 78 79.59  
Signal Bits 0->1 49 39 79.59  
Signal Bits 1->0 49 39 79.59  

Port Details
                   Toggle Toggle 1->0 Toggle 0->1 Direction 
clk                Yes    Yes         Yes         INPUT     
rst_n              Yes    Yes         Yes         INPUT     
wr_sop             Yes    Yes         Yes         INPUT     
wr_eop             Yes    Yes         Yes         INPUT     
wr_vld             Yes    Yes         Yes         INPUT     
wr_data[31:0]      Yes    Yes         Yes         INPUT     
ram_wr_en          Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[0]     Yes    Yes         Yes         OUTPUT    
ram_wr_data[1]     No     No          No          OUTPUT    
ram_wr_data[2]     Yes    Yes         Yes         OUTPUT    
ram_wr_data[4:3]   No     No          No          OUTPUT    
ram_wr_data[5]     Yes    Yes         Yes         OUTPUT    
ram_wr_data[15:6]  No     No          No          OUTPUT    
ram_wr_data[17:16] Yes    Yes         Yes         OUTPUT    
ram_wr_data[18]    No     No          No          OUTPUT    
ram_wr_data[31:19] Yes    Yes         Yes         OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
d_select[4:0]   Yes    Yes         Yes         
d_select[9:5]   No     No          No          
waddr[15:0]     Yes    Yes         Yes         
waddr[16]       No     No          No          
waddr[17]       Yes    Yes         Yes         
waddr[18]       No     No          No          
waddr[19]       Yes    Yes         Yes         
waddr[20]       No     No          No          
waddr[21]       Yes    Yes         Yes         
waddr[22]       No     No          No          
waddr[23]       Yes    Yes         Yes         
wstrb[10:0]     Yes    Yes         Yes         
wstrb[11]       No     No          No          
wr_sop_cnt[1:0] Yes    Yes         Yes         
decode_rst      Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_2
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       57       4     4       100.00  
IF       69       4     4       100.00  
IF       81       4     4       100.00  
IF       93       4     4       100.00  
IF       103      2     2       100.00  
IF       111      3     3       100.00  
IF       119      3     3       100.00  
IF       127      3     3       100.00  


57             if(~rst_n)
               -1-  
58                 d_select <= 10'd0;
                   ==>
59             else if(wr_sop)
                    -2-  
60                 d_select <= bus_data_vld;
                   ==>
61             else if(wr_vld)
                    -3-  
62                 d_select <= d_select >> 1;
                   ==>
63             else
64                 d_select <= d_select;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


69             if(~rst_n)
               -1-  
70                 waddr <= 24'd0;
                   ==>
71             else if(wr_sop && decode_rst)
                    -2-  
72                 waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
                   ==>
73             else if(wr_vld && d_select[0])
                    -3-  
74                 waddr <= waddr >> 4;
                   ==>
75             else
76                 waddr <= waddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


81             if(~rst_n)
               -1-  
82                 wstrb <= 12'd0;
                   ==>
83             else if(wr_sop && decode_rst)
                    -2-  
84                 wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
                   ==>
85             else if(wr_vld && d_select[0])
                    -3-  
86                 wstrb <= wstrb >> 2;
                   ==>
87             else
88                 wstrb <= wstrb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


93             if(~rst_n)
               -1-  
94                 wr_sop_cnt <= 2'd0;
                   ==>
95             else if(wr_sop_cnt == 2'b11)
                    -2-  
96                 wr_sop_cnt <= 2'd0;
                   ==>
97             else
98                 wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
                                        -3-  
                                        ==>  
                                        ==>  

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


103            if(~rst_n)
               -1-  
104                ram_wr_en <= 1'b0;
                   ==>
105            else
106                ram_wr_en <= wr_vld && d_select[0];
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


111            if(~rst_n)
               -1-  
112                ram_wr_strb <= 2'b00;
                   ==>
113            else
114                ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


119            if(~rst_n)
               -1-  
120                ram_wr_addr <= 4'b0000;
                   ==>
121            else
122                ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


127            if(~rst_n)
               -1-  
128                ram_wr_data <= 32'd0;
                   ==>
129            else
130                ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 90.71 100.00  81.25  81.60 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 90.71 100.00  81.25  81.60 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
 95.11 100.00  81.25  99.20 --     100.00 ram_wr_control_data 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_1

             Line No.   Total   Covered  Percent
TOTAL                       38       38   100.00
ALWAYS             57        7        7   100.00
ALWAYS             69        7        7   100.00
ALWAYS             81        7        7   100.00
ALWAYS             93        5        5   100.00
ALWAYS            103        3        3   100.00
ALWAYS            111        3        3   100.00
ALWAYS            119        3        3   100.00
ALWAYS            127        3        3   100.00

56                      begin
57         1/1              if(~rst_n)
58         1/1                  d_select <= 10'd0;
59         1/1              else if(wr_sop)
60         1/1                  d_select <= bus_data_vld;
61         1/1              else if(wr_vld)
62         1/1                  d_select <= d_select >> 1;
63                          else
64         1/1                  d_select <= d_select;
65                      end
66                      
67                      always@(posedge clk or negedge rst_n)
68                      begin
69         1/1              if(~rst_n)
70         1/1                  waddr <= 24'd0;
71         1/1              else if(wr_sop && decode_rst)
72         1/1                  waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
73         1/1              else if(wr_vld && d_select[0])
74         1/1                  waddr <= waddr >> 4;
75                          else
76         1/1                  waddr <= waddr;
77                      end
78                      
79                      always@(posedge clk or negedge rst_n)
80                      begin
81         1/1              if(~rst_n)
82         1/1                  wstrb <= 12'd0;
83         1/1              else if(wr_sop && decode_rst)
84         1/1                  wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
85         1/1              else if(wr_vld && d_select[0])
86         1/1                  wstrb <= wstrb >> 2;
87                          else
88         1/1                  wstrb <= wstrb;
89                      end
90                      
91                      always@(posedge clk or negedge rst_n)
92                      begin
93         1/1              if(~rst_n)
94         1/1                  wr_sop_cnt <= 2'd0;
95         1/1              else if(wr_sop_cnt == 2'b11)
96         1/1                  wr_sop_cnt <= 2'd0;
97                          else
98         1/1                  wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
99                      end
100                     
101                     always@(posedge clk or negedge rst_n)
102                     begin
103        1/1              if(~rst_n)
104        1/1                  ram_wr_en <= 1'b0;
105                         else
106        1/1                  ram_wr_en <= wr_vld && d_select[0];
107                     end
108                     
109                     always@(posedge clk or negedge rst_n)
110                     begin
111        1/1              if(~rst_n)
112        1/1                  ram_wr_strb <= 2'b00;
113                         else
114        1/1                  ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
115                     end
116                     
117                     always@(posedge clk or negedge rst_n)
118                     begin
119        1/1              if(~rst_n)
120        1/1                  ram_wr_addr <= 4'b0000;
121                         else
122        1/1                  ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
123                     end
124                     
125                     always@(posedge clk or negedge rst_n)
126                     begin
127        1/1              if(~rst_n)
128        1/1                  ram_wr_data <= 32'd0;
129                         else
130        1/1                  ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_1

               Total   Covered  Percent
Conditions         32       26    81.25
Logical            32       26    81.25
Non-Logical         0        0
Event               0        0

 LINE       71
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       73
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       83
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       85
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       98
 EXPRESSION (wr_sop ? ((wr_sop_cnt + 1'b1)) : wr_sop_cnt)
             ---1--

-1- Status
 0  Covered
 1  Covered

 LINE       106
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       114
 EXPRESSION ((wr_vld && d_select[0]) ? wstrb[1:0] : 2'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       114
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       122
 EXPRESSION ((wr_vld && d_select[0]) ? waddr[3:0] : 4'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       122
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       130
 EXPRESSION ((wr_vld && d_select[0]) ? wr_data : 32'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       130
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_1
                Total Covered Percent 
Totals          15    11      73.33   
Total Bits      250   204     81.60   
Total Bits 0->1 125   102     81.60   
Total Bits 1->0 125   102     81.60   

                              
Ports          10  9   90.00  
Port Bits      152 124 81.58  
Port Bits 0->1 76  62  81.58  
Port Bits 1->0 76  62  81.58  

                              
Signals          5  2  40.00  
Signal Bits      98 80 81.63  
Signal Bits 0->1 49 40 81.63  
Signal Bits 1->0 49 40 81.63  

Port Details
                   Toggle Toggle 1->0 Toggle 0->1 Direction 
clk                Yes    Yes         Yes         INPUT     
rst_n              Yes    Yes         Yes         INPUT     
wr_sop             Yes    Yes         Yes         INPUT     
wr_eop             Yes    Yes         Yes         INPUT     
wr_vld             Yes    Yes         Yes         INPUT     
wr_data[31:0]      Yes    Yes         Yes         INPUT     
ram_wr_en          Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[0]     Yes    Yes         Yes         OUTPUT    
ram_wr_data[1]     No     No          No          OUTPUT    
ram_wr_data[5:2]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[7:6]   No     No          No          OUTPUT    
ram_wr_data[15:8]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[18:16] No     No          No          OUTPUT    
ram_wr_data[23:19] Yes    Yes         Yes         OUTPUT    
ram_wr_data[31:24] No     No          No          OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
d_select[3:0]   Yes    Yes         Yes         
d_select[9:4]   No     No          No          
waddr[20:0]     Yes    Yes         Yes         
waddr[22:21]    No     No          No          
waddr[23]       Yes    Yes         Yes         
wstrb[10:0]     Yes    Yes         Yes         
wstrb[11]       No     No          No          
wr_sop_cnt[1:0] Yes    Yes         Yes         
decode_rst      Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_1
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       57       4     4       100.00  
IF       69       4     4       100.00  
IF       81       4     4       100.00  
IF       93       4     4       100.00  
IF       103      2     2       100.00  
IF       111      3     3       100.00  
IF       119      3     3       100.00  
IF       127      3     3       100.00  


57             if(~rst_n)
               -1-  
58                 d_select <= 10'd0;
                   ==>
59             else if(wr_sop)
                    -2-  
60                 d_select <= bus_data_vld;
                   ==>
61             else if(wr_vld)
                    -3-  
62                 d_select <= d_select >> 1;
                   ==>
63             else
64                 d_select <= d_select;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


69             if(~rst_n)
               -1-  
70                 waddr <= 24'd0;
                   ==>
71             else if(wr_sop && decode_rst)
                    -2-  
72                 waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
                   ==>
73             else if(wr_vld && d_select[0])
                    -3-  
74                 waddr <= waddr >> 4;
                   ==>
75             else
76                 waddr <= waddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


81             if(~rst_n)
               -1-  
82                 wstrb <= 12'd0;
                   ==>
83             else if(wr_sop && decode_rst)
                    -2-  
84                 wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
                   ==>
85             else if(wr_vld && d_select[0])
                    -3-  
86                 wstrb <= wstrb >> 2;
                   ==>
87             else
88                 wstrb <= wstrb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


93             if(~rst_n)
               -1-  
94                 wr_sop_cnt <= 2'd0;
                   ==>
95             else if(wr_sop_cnt == 2'b11)
                    -2-  
96                 wr_sop_cnt <= 2'd0;
                   ==>
97             else
98                 wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
                                        -3-  
                                        ==>  
                                        ==>  

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


103            if(~rst_n)
               -1-  
104                ram_wr_en <= 1'b0;
                   ==>
105            else
106                ram_wr_en <= wr_vld && d_select[0];
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


111            if(~rst_n)
               -1-  
112                ram_wr_strb <= 2'b00;
                   ==>
113            else
114                ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


119            if(~rst_n)
               -1-  
120                ram_wr_addr <= 4'b0000;
                   ==>
121            else
122                ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


127            if(~rst_n)
               -1-  
128                ram_wr_data <= 32'd0;
                   ==>
129            else
130                ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 90.71 100.00  81.25  81.60 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 90.71 100.00  81.25  81.60 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
 95.11 100.00  81.25  99.20 --     100.00 ram_wr_control_data 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_3

             Line No.   Total   Covered  Percent
TOTAL                       38       38   100.00
ALWAYS             57        7        7   100.00
ALWAYS             69        7        7   100.00
ALWAYS             81        7        7   100.00
ALWAYS             93        5        5   100.00
ALWAYS            103        3        3   100.00
ALWAYS            111        3        3   100.00
ALWAYS            119        3        3   100.00
ALWAYS            127        3        3   100.00

56                      begin
57         1/1              if(~rst_n)
58         1/1                  d_select <= 10'd0;
59         1/1              else if(wr_sop)
60         1/1                  d_select <= bus_data_vld;
61         1/1              else if(wr_vld)
62         1/1                  d_select <= d_select >> 1;
63                          else
64         1/1                  d_select <= d_select;
65                      end
66                      
67                      always@(posedge clk or negedge rst_n)
68                      begin
69         1/1              if(~rst_n)
70         1/1                  waddr <= 24'd0;
71         1/1              else if(wr_sop && decode_rst)
72         1/1                  waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
73         1/1              else if(wr_vld && d_select[0])
74         1/1                  waddr <= waddr >> 4;
75                          else
76         1/1                  waddr <= waddr;
77                      end
78                      
79                      always@(posedge clk or negedge rst_n)
80                      begin
81         1/1              if(~rst_n)
82         1/1                  wstrb <= 12'd0;
83         1/1              else if(wr_sop && decode_rst)
84         1/1                  wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
85         1/1              else if(wr_vld && d_select[0])
86         1/1                  wstrb <= wstrb >> 2;
87                          else
88         1/1                  wstrb <= wstrb;
89                      end
90                      
91                      always@(posedge clk or negedge rst_n)
92                      begin
93         1/1              if(~rst_n)
94         1/1                  wr_sop_cnt <= 2'd0;
95         1/1              else if(wr_sop_cnt == 2'b11)
96         1/1                  wr_sop_cnt <= 2'd0;
97                          else
98         1/1                  wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
99                      end
100                     
101                     always@(posedge clk or negedge rst_n)
102                     begin
103        1/1              if(~rst_n)
104        1/1                  ram_wr_en <= 1'b0;
105                         else
106        1/1                  ram_wr_en <= wr_vld && d_select[0];
107                     end
108                     
109                     always@(posedge clk or negedge rst_n)
110                     begin
111        1/1              if(~rst_n)
112        1/1                  ram_wr_strb <= 2'b00;
113                         else
114        1/1                  ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
115                     end
116                     
117                     always@(posedge clk or negedge rst_n)
118                     begin
119        1/1              if(~rst_n)
120        1/1                  ram_wr_addr <= 4'b0000;
121                         else
122        1/1                  ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
123                     end
124                     
125                     always@(posedge clk or negedge rst_n)
126                     begin
127        1/1              if(~rst_n)
128        1/1                  ram_wr_data <= 32'd0;
129                         else
130        1/1                  ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_3

               Total   Covered  Percent
Conditions         32       26    81.25
Logical            32       26    81.25
Non-Logical         0        0
Event               0        0

 LINE       71
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       73
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       83
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       85
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       98
 EXPRESSION (wr_sop ? ((wr_sop_cnt + 1'b1)) : wr_sop_cnt)
             ---1--

-1- Status
 0  Covered
 1  Covered

 LINE       106
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       114
 EXPRESSION ((wr_vld && d_select[0]) ? wstrb[1:0] : 2'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       114
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       122
 EXPRESSION ((wr_vld && d_select[0]) ? waddr[3:0] : 4'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       122
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       130
 EXPRESSION ((wr_vld && d_select[0]) ? wr_data : 32'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       130
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_3
                Total Covered Percent 
Totals          15    11      73.33   
Total Bits      250   204     81.60   
Total Bits 0->1 125   102     81.60   
Total Bits 1->0 125   102     81.60   

                              
Ports          10  9   90.00  
Port Bits      152 122 80.26  
Port Bits 0->1 76  61  80.26  
Port Bits 1->0 76  61  80.26  

                              
Signals          5  2  40.00  
Signal Bits      98 82 83.67  
Signal Bits 0->1 49 41 83.67  
Signal Bits 1->0 49 41 83.67  

Port Details
                   Toggle Toggle 1->0 Toggle 0->1 Direction 
clk                Yes    Yes         Yes         INPUT     
rst_n              Yes    Yes         Yes         INPUT     
wr_sop             Yes    Yes         Yes         INPUT     
wr_eop             Yes    Yes         Yes         INPUT     
wr_vld             Yes    Yes         Yes         INPUT     
wr_data[31:0]      Yes    Yes         Yes         INPUT     
ram_wr_en          Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[0]     No     No          No          OUTPUT    
ram_wr_data[1]     Yes    Yes         Yes         OUTPUT    
ram_wr_data[4:2]   No     No          No          OUTPUT    
ram_wr_data[5]     Yes    Yes         Yes         OUTPUT    
ram_wr_data[15:6]  No     No          No          OUTPUT    
ram_wr_data[21:16] Yes    Yes         Yes         OUTPUT    
ram_wr_data[22]    No     No          No          OUTPUT    
ram_wr_data[31:23] Yes    Yes         Yes         OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
d_select[5:0]   Yes    Yes         Yes         
d_select[9:6]   No     No          No          
waddr[13:0]     Yes    Yes         Yes         
waddr[14]       No     No          No          
waddr[17:15]    Yes    Yes         Yes         
waddr[18]       No     No          No          
waddr[21:19]    Yes    Yes         Yes         
waddr[22]       No     No          No          
waddr[23]       Yes    Yes         Yes         
wstrb[10:0]     Yes    Yes         Yes         
wstrb[11]       No     No          No          
wr_sop_cnt[1:0] Yes    Yes         Yes         
decode_rst      Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_3
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       57       4     4       100.00  
IF       69       4     4       100.00  
IF       81       4     4       100.00  
IF       93       4     4       100.00  
IF       103      2     2       100.00  
IF       111      3     3       100.00  
IF       119      3     3       100.00  
IF       127      3     3       100.00  


57             if(~rst_n)
               -1-  
58                 d_select <= 10'd0;
                   ==>
59             else if(wr_sop)
                    -2-  
60                 d_select <= bus_data_vld;
                   ==>
61             else if(wr_vld)
                    -3-  
62                 d_select <= d_select >> 1;
                   ==>
63             else
64                 d_select <= d_select;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


69             if(~rst_n)
               -1-  
70                 waddr <= 24'd0;
                   ==>
71             else if(wr_sop && decode_rst)
                    -2-  
72                 waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
                   ==>
73             else if(wr_vld && d_select[0])
                    -3-  
74                 waddr <= waddr >> 4;
                   ==>
75             else
76                 waddr <= waddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


81             if(~rst_n)
               -1-  
82                 wstrb <= 12'd0;
                   ==>
83             else if(wr_sop && decode_rst)
                    -2-  
84                 wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
                   ==>
85             else if(wr_vld && d_select[0])
                    -3-  
86                 wstrb <= wstrb >> 2;
                   ==>
87             else
88                 wstrb <= wstrb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


93             if(~rst_n)
               -1-  
94                 wr_sop_cnt <= 2'd0;
                   ==>
95             else if(wr_sop_cnt == 2'b11)
                    -2-  
96                 wr_sop_cnt <= 2'd0;
                   ==>
97             else
98                 wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
                                        -3-  
                                        ==>  
                                        ==>  

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


103            if(~rst_n)
               -1-  
104                ram_wr_en <= 1'b0;
                   ==>
105            else
106                ram_wr_en <= wr_vld && d_select[0];
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


111            if(~rst_n)
               -1-  
112                ram_wr_strb <= 2'b00;
                   ==>
113            else
114                ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


119            if(~rst_n)
               -1-  
120                ram_wr_addr <= 4'b0000;
                   ==>
121            else
122                ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


127            if(~rst_n)
               -1-  
128                ram_wr_data <= 32'd0;
                   ==>
129            else
130                ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 91.31 100.00  81.25  84.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 91.31 100.00  81.25  84.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
 95.11 100.00  81.25  99.20 --     100.00 ram_wr_control_data 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_4

             Line No.   Total   Covered  Percent
TOTAL                       38       38   100.00
ALWAYS             57        7        7   100.00
ALWAYS             69        7        7   100.00
ALWAYS             81        7        7   100.00
ALWAYS             93        5        5   100.00
ALWAYS            103        3        3   100.00
ALWAYS            111        3        3   100.00
ALWAYS            119        3        3   100.00
ALWAYS            127        3        3   100.00

56                      begin
57         1/1              if(~rst_n)
58         1/1                  d_select <= 10'd0;
59         1/1              else if(wr_sop)
60         1/1                  d_select <= bus_data_vld;
61         1/1              else if(wr_vld)
62         1/1                  d_select <= d_select >> 1;
63                          else
64         1/1                  d_select <= d_select;
65                      end
66                      
67                      always@(posedge clk or negedge rst_n)
68                      begin
69         1/1              if(~rst_n)
70         1/1                  waddr <= 24'd0;
71         1/1              else if(wr_sop && decode_rst)
72         1/1                  waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
73         1/1              else if(wr_vld && d_select[0])
74         1/1                  waddr <= waddr >> 4;
75                          else
76         1/1                  waddr <= waddr;
77                      end
78                      
79                      always@(posedge clk or negedge rst_n)
80                      begin
81         1/1              if(~rst_n)
82         1/1                  wstrb <= 12'd0;
83         1/1              else if(wr_sop && decode_rst)
84         1/1                  wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
85         1/1              else if(wr_vld && d_select[0])
86         1/1                  wstrb <= wstrb >> 2;
87                          else
88         1/1                  wstrb <= wstrb;
89                      end
90                      
91                      always@(posedge clk or negedge rst_n)
92                      begin
93         1/1              if(~rst_n)
94         1/1                  wr_sop_cnt <= 2'd0;
95         1/1              else if(wr_sop_cnt == 2'b11)
96         1/1                  wr_sop_cnt <= 2'd0;
97                          else
98         1/1                  wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
99                      end
100                     
101                     always@(posedge clk or negedge rst_n)
102                     begin
103        1/1              if(~rst_n)
104        1/1                  ram_wr_en <= 1'b0;
105                         else
106        1/1                  ram_wr_en <= wr_vld && d_select[0];
107                     end
108                     
109                     always@(posedge clk or negedge rst_n)
110                     begin
111        1/1              if(~rst_n)
112        1/1                  ram_wr_strb <= 2'b00;
113                         else
114        1/1                  ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
115                     end
116                     
117                     always@(posedge clk or negedge rst_n)
118                     begin
119        1/1              if(~rst_n)
120        1/1                  ram_wr_addr <= 4'b0000;
121                         else
122        1/1                  ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
123                     end
124                     
125                     always@(posedge clk or negedge rst_n)
126                     begin
127        1/1              if(~rst_n)
128        1/1                  ram_wr_data <= 32'd0;
129                         else
130        1/1                  ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_4

               Total   Covered  Percent
Conditions         32       26    81.25
Logical            32       26    81.25
Non-Logical         0        0
Event               0        0

 LINE       71
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       73
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       83
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       85
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       98
 EXPRESSION (wr_sop ? ((wr_sop_cnt + 1'b1)) : wr_sop_cnt)
             ---1--

-1- Status
 0  Covered
 1  Covered

 LINE       106
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       114
 EXPRESSION ((wr_vld && d_select[0]) ? wstrb[1:0] : 2'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       114
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       122
 EXPRESSION ((wr_vld && d_select[0]) ? waddr[3:0] : 4'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       122
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       130
 EXPRESSION ((wr_vld && d_select[0]) ? wr_data : 32'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       130
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_4
                Total Covered Percent 
Totals          15    11      73.33   
Total Bits      250   210     84.00   
Total Bits 0->1 125   105     84.00   
Total Bits 1->0 125   105     84.00   

                              
Ports          10  9   90.00  
Port Bits      152 126 82.89  
Port Bits 0->1 76  63  82.89  
Port Bits 1->0 76  63  82.89  

                              
Signals          5  2  40.00  
Signal Bits      98 84 85.71  
Signal Bits 0->1 49 42 85.71  
Signal Bits 1->0 49 42 85.71  

Port Details
                   Toggle Toggle 1->0 Toggle 0->1 Direction 
clk                Yes    Yes         Yes         INPUT     
rst_n              Yes    Yes         Yes         INPUT     
wr_sop             Yes    Yes         Yes         INPUT     
wr_eop             Yes    Yes         Yes         INPUT     
wr_vld             Yes    Yes         Yes         INPUT     
wr_data[31:0]      Yes    Yes         Yes         INPUT     
ram_wr_en          Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[1:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[3:2]   No     No          No          OUTPUT    
ram_wr_data[4]     Yes    Yes         Yes         OUTPUT    
ram_wr_data[5]     No     No          No          OUTPUT    
ram_wr_data[7:6]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[16:8]  No     No          No          OUTPUT    
ram_wr_data[21:17] Yes    Yes         Yes         OUTPUT    
ram_wr_data[22]    No     No          No          OUTPUT    
ram_wr_data[31:23] Yes    Yes         Yes         OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
d_select[6:0]   Yes    Yes         Yes         
d_select[9:7]   No     No          No          
waddr[15:0]     Yes    Yes         Yes         
waddr[16]       No     No          No          
waddr[19:17]    Yes    Yes         Yes         
waddr[21:20]    No     No          No          
waddr[23:22]    Yes    Yes         Yes         
wstrb[10:0]     Yes    Yes         Yes         
wstrb[11]       No     No          No          
wr_sop_cnt[1:0] Yes    Yes         Yes         
decode_rst      Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_4
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       57       4     4       100.00  
IF       69       4     4       100.00  
IF       81       4     4       100.00  
IF       93       4     4       100.00  
IF       103      2     2       100.00  
IF       111      3     3       100.00  
IF       119      3     3       100.00  
IF       127      3     3       100.00  


57             if(~rst_n)
               -1-  
58                 d_select <= 10'd0;
                   ==>
59             else if(wr_sop)
                    -2-  
60                 d_select <= bus_data_vld;
                   ==>
61             else if(wr_vld)
                    -3-  
62                 d_select <= d_select >> 1;
                   ==>
63             else
64                 d_select <= d_select;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


69             if(~rst_n)
               -1-  
70                 waddr <= 24'd0;
                   ==>
71             else if(wr_sop && decode_rst)
                    -2-  
72                 waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
                   ==>
73             else if(wr_vld && d_select[0])
                    -3-  
74                 waddr <= waddr >> 4;
                   ==>
75             else
76                 waddr <= waddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


81             if(~rst_n)
               -1-  
82                 wstrb <= 12'd0;
                   ==>
83             else if(wr_sop && decode_rst)
                    -2-  
84                 wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
                   ==>
85             else if(wr_vld && d_select[0])
                    -3-  
86                 wstrb <= wstrb >> 2;
                   ==>
87             else
88                 wstrb <= wstrb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


93             if(~rst_n)
               -1-  
94                 wr_sop_cnt <= 2'd0;
                   ==>
95             else if(wr_sop_cnt == 2'b11)
                    -2-  
96                 wr_sop_cnt <= 2'd0;
                   ==>
97             else
98                 wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
                                        -3-  
                                        ==>  
                                        ==>  

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


103            if(~rst_n)
               -1-  
104                ram_wr_en <= 1'b0;
                   ==>
105            else
106                ram_wr_en <= wr_vld && d_select[0];
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


111            if(~rst_n)
               -1-  
112                ram_wr_strb <= 2'b00;
                   ==>
113            else
114                ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


119            if(~rst_n)
               -1-  
120                ram_wr_addr <= 4'b0000;
                   ==>
121            else
122                ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


127            if(~rst_n)
               -1-  
128                ram_wr_data <= 32'd0;
                   ==>
129            else
130                ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 91.51 100.00  81.25  84.80 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 91.51 100.00  81.25  84.80 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
 95.11 100.00  81.25  99.20 --     100.00 ram_wr_control_data 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_5

             Line No.   Total   Covered  Percent
TOTAL                       38       38   100.00
ALWAYS             57        7        7   100.00
ALWAYS             69        7        7   100.00
ALWAYS             81        7        7   100.00
ALWAYS             93        5        5   100.00
ALWAYS            103        3        3   100.00
ALWAYS            111        3        3   100.00
ALWAYS            119        3        3   100.00
ALWAYS            127        3        3   100.00

56                      begin
57         1/1              if(~rst_n)
58         1/1                  d_select <= 10'd0;
59         1/1              else if(wr_sop)
60         1/1                  d_select <= bus_data_vld;
61         1/1              else if(wr_vld)
62         1/1                  d_select <= d_select >> 1;
63                          else
64         1/1                  d_select <= d_select;
65                      end
66                      
67                      always@(posedge clk or negedge rst_n)
68                      begin
69         1/1              if(~rst_n)
70         1/1                  waddr <= 24'd0;
71         1/1              else if(wr_sop && decode_rst)
72         1/1                  waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
73         1/1              else if(wr_vld && d_select[0])
74         1/1                  waddr <= waddr >> 4;
75                          else
76         1/1                  waddr <= waddr;
77                      end
78                      
79                      always@(posedge clk or negedge rst_n)
80                      begin
81         1/1              if(~rst_n)
82         1/1                  wstrb <= 12'd0;
83         1/1              else if(wr_sop && decode_rst)
84         1/1                  wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
85         1/1              else if(wr_vld && d_select[0])
86         1/1                  wstrb <= wstrb >> 2;
87                          else
88         1/1                  wstrb <= wstrb;
89                      end
90                      
91                      always@(posedge clk or negedge rst_n)
92                      begin
93         1/1              if(~rst_n)
94         1/1                  wr_sop_cnt <= 2'd0;
95         1/1              else if(wr_sop_cnt == 2'b11)
96         1/1                  wr_sop_cnt <= 2'd0;
97                          else
98         1/1                  wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
99                      end
100                     
101                     always@(posedge clk or negedge rst_n)
102                     begin
103        1/1              if(~rst_n)
104        1/1                  ram_wr_en <= 1'b0;
105                         else
106        1/1                  ram_wr_en <= wr_vld && d_select[0];
107                     end
108                     
109                     always@(posedge clk or negedge rst_n)
110                     begin
111        1/1              if(~rst_n)
112        1/1                  ram_wr_strb <= 2'b00;
113                         else
114        1/1                  ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
115                     end
116                     
117                     always@(posedge clk or negedge rst_n)
118                     begin
119        1/1              if(~rst_n)
120        1/1                  ram_wr_addr <= 4'b0000;
121                         else
122        1/1                  ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
123                     end
124                     
125                     always@(posedge clk or negedge rst_n)
126                     begin
127        1/1              if(~rst_n)
128        1/1                  ram_wr_data <= 32'd0;
129                         else
130        1/1                  ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_5

               Total   Covered  Percent
Conditions         32       26    81.25
Logical            32       26    81.25
Non-Logical         0        0
Event               0        0

 LINE       71
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       73
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       83
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       85
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       98
 EXPRESSION (wr_sop ? ((wr_sop_cnt + 1'b1)) : wr_sop_cnt)
             ---1--

-1- Status
 0  Covered
 1  Covered

 LINE       106
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       114
 EXPRESSION ((wr_vld && d_select[0]) ? wstrb[1:0] : 2'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       114
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       122
 EXPRESSION ((wr_vld && d_select[0]) ? waddr[3:0] : 4'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       122
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       130
 EXPRESSION ((wr_vld && d_select[0]) ? wr_data : 32'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       130
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_5
                Total Covered Percent 
Totals          15    11      73.33   
Total Bits      250   212     84.80   
Total Bits 0->1 125   106     84.80   
Total Bits 1->0 125   106     84.80   

                              
Ports          10  9   90.00  
Port Bits      152 122 80.26  
Port Bits 0->1 76  61  80.26  
Port Bits 1->0 76  61  80.26  

                              
Signals          5  2  40.00  
Signal Bits      98 90 91.84  
Signal Bits 0->1 49 45 91.84  
Signal Bits 1->0 49 45 91.84  

Port Details
                   Toggle Toggle 1->0 Toggle 0->1 Direction 
clk                Yes    Yes         Yes         INPUT     
rst_n              Yes    Yes         Yes         INPUT     
wr_sop             Yes    Yes         Yes         INPUT     
wr_eop             Yes    Yes         Yes         INPUT     
wr_vld             Yes    Yes         Yes         INPUT     
wr_data[31:0]      Yes    Yes         Yes         INPUT     
ram_wr_en          Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[2:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[3]     No     No          No          OUTPUT    
ram_wr_data[4]     Yes    Yes         Yes         OUTPUT    
ram_wr_data[5]     No     No          No          OUTPUT    
ram_wr_data[7:6]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[16:8]  No     No          No          OUTPUT    
ram_wr_data[17]    Yes    Yes         Yes         OUTPUT    
ram_wr_data[19:18] No     No          No          OUTPUT    
ram_wr_data[20]    Yes    Yes         Yes         OUTPUT    
ram_wr_data[22:21] No     No          No          OUTPUT    
ram_wr_data[31:23] Yes    Yes         Yes         OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
d_select[7:0]   Yes    Yes         Yes         
d_select[9:8]   No     No          No          
waddr[20:0]     Yes    Yes         Yes         
waddr[21]       No     No          No          
waddr[23:22]    Yes    Yes         Yes         
wstrb[10:0]     Yes    Yes         Yes         
wstrb[11]       No     No          No          
wr_sop_cnt[1:0] Yes    Yes         Yes         
decode_rst      Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_5
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       57       4     4       100.00  
IF       69       4     4       100.00  
IF       81       4     4       100.00  
IF       93       4     4       100.00  
IF       103      2     2       100.00  
IF       111      3     3       100.00  
IF       119      3     3       100.00  
IF       127      3     3       100.00  


57             if(~rst_n)
               -1-  
58                 d_select <= 10'd0;
                   ==>
59             else if(wr_sop)
                    -2-  
60                 d_select <= bus_data_vld;
                   ==>
61             else if(wr_vld)
                    -3-  
62                 d_select <= d_select >> 1;
                   ==>
63             else
64                 d_select <= d_select;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


69             if(~rst_n)
               -1-  
70                 waddr <= 24'd0;
                   ==>
71             else if(wr_sop && decode_rst)
                    -2-  
72                 waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
                   ==>
73             else if(wr_vld && d_select[0])
                    -3-  
74                 waddr <= waddr >> 4;
                   ==>
75             else
76                 waddr <= waddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


81             if(~rst_n)
               -1-  
82                 wstrb <= 12'd0;
                   ==>
83             else if(wr_sop && decode_rst)
                    -2-  
84                 wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
                   ==>
85             else if(wr_vld && d_select[0])
                    -3-  
86                 wstrb <= wstrb >> 2;
                   ==>
87             else
88                 wstrb <= wstrb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


93             if(~rst_n)
               -1-  
94                 wr_sop_cnt <= 2'd0;
                   ==>
95             else if(wr_sop_cnt == 2'b11)
                    -2-  
96                 wr_sop_cnt <= 2'd0;
                   ==>
97             else
98                 wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
                                        -3-  
                                        ==>  
                                        ==>  

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


103            if(~rst_n)
               -1-  
104                ram_wr_en <= 1'b0;
                   ==>
105            else
106                ram_wr_en <= wr_vld && d_select[0];
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


111            if(~rst_n)
               -1-  
112                ram_wr_strb <= 2'b00;
                   ==>
113            else
114                ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


119            if(~rst_n)
               -1-  
120                ram_wr_addr <= 4'b0000;
                   ==>
121            else
122                ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


127            if(~rst_n)
               -1-  
128                ram_wr_data <= 32'd0;
                   ==>
129            else
130                ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 92.31 100.00  81.25  88.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 92.31 100.00  81.25  88.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
 95.11 100.00  81.25  99.20 --     100.00 ram_wr_control_data 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_0

             Line No.   Total   Covered  Percent
TOTAL                       38       38   100.00
ALWAYS             57        7        7   100.00
ALWAYS             69        7        7   100.00
ALWAYS             81        7        7   100.00
ALWAYS             93        5        5   100.00
ALWAYS            103        3        3   100.00
ALWAYS            111        3        3   100.00
ALWAYS            119        3        3   100.00
ALWAYS            127        3        3   100.00

56                      begin
57         1/1              if(~rst_n)
58         1/1                  d_select <= 10'd0;
59         1/1              else if(wr_sop)
60         1/1                  d_select <= bus_data_vld;
61         1/1              else if(wr_vld)
62         1/1                  d_select <= d_select >> 1;
63                          else
64         1/1                  d_select <= d_select;
65                      end
66                      
67                      always@(posedge clk or negedge rst_n)
68                      begin
69         1/1              if(~rst_n)
70         1/1                  waddr <= 24'd0;
71         1/1              else if(wr_sop && decode_rst)
72         1/1                  waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
73         1/1              else if(wr_vld && d_select[0])
74         1/1                  waddr <= waddr >> 4;
75                          else
76         1/1                  waddr <= waddr;
77                      end
78                      
79                      always@(posedge clk or negedge rst_n)
80                      begin
81         1/1              if(~rst_n)
82         1/1                  wstrb <= 12'd0;
83         1/1              else if(wr_sop && decode_rst)
84         1/1                  wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
85         1/1              else if(wr_vld && d_select[0])
86         1/1                  wstrb <= wstrb >> 2;
87                          else
88         1/1                  wstrb <= wstrb;
89                      end
90                      
91                      always@(posedge clk or negedge rst_n)
92                      begin
93         1/1              if(~rst_n)
94         1/1                  wr_sop_cnt <= 2'd0;
95         1/1              else if(wr_sop_cnt == 2'b11)
96         1/1                  wr_sop_cnt <= 2'd0;
97                          else
98         1/1                  wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
99                      end
100                     
101                     always@(posedge clk or negedge rst_n)
102                     begin
103        1/1              if(~rst_n)
104        1/1                  ram_wr_en <= 1'b0;
105                         else
106        1/1                  ram_wr_en <= wr_vld && d_select[0];
107                     end
108                     
109                     always@(posedge clk or negedge rst_n)
110                     begin
111        1/1              if(~rst_n)
112        1/1                  ram_wr_strb <= 2'b00;
113                         else
114        1/1                  ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
115                     end
116                     
117                     always@(posedge clk or negedge rst_n)
118                     begin
119        1/1              if(~rst_n)
120        1/1                  ram_wr_addr <= 4'b0000;
121                         else
122        1/1                  ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
123                     end
124                     
125                     always@(posedge clk or negedge rst_n)
126                     begin
127        1/1              if(~rst_n)
128        1/1                  ram_wr_data <= 32'd0;
129                         else
130        1/1                  ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_0

               Total   Covered  Percent
Conditions         32       26    81.25
Logical            32       26    81.25
Non-Logical         0        0
Event               0        0

 LINE       71
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       73
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       83
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       85
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       98
 EXPRESSION (wr_sop ? ((wr_sop_cnt + 1'b1)) : wr_sop_cnt)
             ---1--

-1- Status
 0  Covered
 1  Covered

 LINE       106
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       114
 EXPRESSION ((wr_vld && d_select[0]) ? wstrb[1:0] : 2'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       114
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       122
 EXPRESSION ((wr_vld && d_select[0]) ? waddr[3:0] : 4'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       122
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       130
 EXPRESSION ((wr_vld && d_select[0]) ? wr_data : 32'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       130
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_0
                Total Covered Percent 
Totals          15    11      73.33   
Total Bits      250   220     88.00   
Total Bits 0->1 125   110     88.00   
Total Bits 1->0 125   110     88.00   

                              
Ports          10  9   90.00  
Port Bits      152 146 96.05  
Port Bits 0->1 76  73  96.05  
Port Bits 1->0 76  73  96.05  

                              
Signals          5  2  40.00  
Signal Bits      98 74 75.51  
Signal Bits 0->1 49 37 75.51  
Signal Bits 1->0 49 37 75.51  

Port Details
                  Toggle Toggle 1->0 Toggle 0->1 Direction 
clk               Yes    Yes         Yes         INPUT     
rst_n             Yes    Yes         Yes         INPUT     
wr_sop            Yes    Yes         Yes         INPUT     
wr_eop            Yes    Yes         Yes         INPUT     
wr_vld            Yes    Yes         Yes         INPUT     
wr_data[31:0]     Yes    Yes         Yes         INPUT     
ram_wr_en         Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[0]    Yes    Yes         Yes         OUTPUT    
ram_wr_data[1]    No     No          No          OUTPUT    
ram_wr_data[5:2]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[7:6]  No     No          No          OUTPUT    
ram_wr_data[31:8] Yes    Yes         Yes         OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
d_select[2:0]   Yes    Yes         Yes         
d_select[9:3]   No     No          No          
waddr[15:0]     Yes    Yes         Yes         
waddr[16]       No     No          No          
waddr[19:17]    Yes    Yes         Yes         
waddr[22:20]    No     No          No          
waddr[23]       Yes    Yes         Yes         
wstrb[10:0]     Yes    Yes         Yes         
wstrb[11]       No     No          No          
wr_sop_cnt[1:0] Yes    Yes         Yes         
decode_rst      Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_0
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       57       4     4       100.00  
IF       69       4     4       100.00  
IF       81       4     4       100.00  
IF       93       4     4       100.00  
IF       103      2     2       100.00  
IF       111      3     3       100.00  
IF       119      3     3       100.00  
IF       127      3     3       100.00  


57             if(~rst_n)
               -1-  
58                 d_select <= 10'd0;
                   ==>
59             else if(wr_sop)
                    -2-  
60                 d_select <= bus_data_vld;
                   ==>
61             else if(wr_vld)
                    -3-  
62                 d_select <= d_select >> 1;
                   ==>
63             else
64                 d_select <= d_select;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


69             if(~rst_n)
               -1-  
70                 waddr <= 24'd0;
                   ==>
71             else if(wr_sop && decode_rst)
                    -2-  
72                 waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
                   ==>
73             else if(wr_vld && d_select[0])
                    -3-  
74                 waddr <= waddr >> 4;
                   ==>
75             else
76                 waddr <= waddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


81             if(~rst_n)
               -1-  
82                 wstrb <= 12'd0;
                   ==>
83             else if(wr_sop && decode_rst)
                    -2-  
84                 wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
                   ==>
85             else if(wr_vld && d_select[0])
                    -3-  
86                 wstrb <= wstrb >> 2;
                   ==>
87             else
88                 wstrb <= wstrb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


93             if(~rst_n)
               -1-  
94                 wr_sop_cnt <= 2'd0;
                   ==>
95             else if(wr_sop_cnt == 2'b11)
                    -2-  
96                 wr_sop_cnt <= 2'd0;
                   ==>
97             else
98                 wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
                                        -3-  
                                        ==>  
                                        ==>  

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


103            if(~rst_n)
               -1-  
104                ram_wr_en <= 1'b0;
                   ==>
105            else
106                ram_wr_en <= wr_vld && d_select[0];
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


111            if(~rst_n)
               -1-  
112                ram_wr_strb <= 2'b00;
                   ==>
113            else
114                ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


119            if(~rst_n)
               -1-  
120                ram_wr_addr <= 4'b0000;
                   ==>
121            else
122                ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


127            if(~rst_n)
               -1-  
128                ram_wr_data <= 32'd0;
                   ==>
129            else
130                ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.31 100.00  81.25  96.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.31 100.00  81.25  96.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
 95.11 100.00  81.25  99.20 --     100.00 ram_wr_control_data 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_6

             Line No.   Total   Covered  Percent
TOTAL                       38       38   100.00
ALWAYS             57        7        7   100.00
ALWAYS             69        7        7   100.00
ALWAYS             81        7        7   100.00
ALWAYS             93        5        5   100.00
ALWAYS            103        3        3   100.00
ALWAYS            111        3        3   100.00
ALWAYS            119        3        3   100.00
ALWAYS            127        3        3   100.00

56                      begin
57         1/1              if(~rst_n)
58         1/1                  d_select <= 10'd0;
59         1/1              else if(wr_sop)
60         1/1                  d_select <= bus_data_vld;
61         1/1              else if(wr_vld)
62         1/1                  d_select <= d_select >> 1;
63                          else
64         1/1                  d_select <= d_select;
65                      end
66                      
67                      always@(posedge clk or negedge rst_n)
68                      begin
69         1/1              if(~rst_n)
70         1/1                  waddr <= 24'd0;
71         1/1              else if(wr_sop && decode_rst)
72         1/1                  waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
73         1/1              else if(wr_vld && d_select[0])
74         1/1                  waddr <= waddr >> 4;
75                          else
76         1/1                  waddr <= waddr;
77                      end
78                      
79                      always@(posedge clk or negedge rst_n)
80                      begin
81         1/1              if(~rst_n)
82         1/1                  wstrb <= 12'd0;
83         1/1              else if(wr_sop && decode_rst)
84         1/1                  wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
85         1/1              else if(wr_vld && d_select[0])
86         1/1                  wstrb <= wstrb >> 2;
87                          else
88         1/1                  wstrb <= wstrb;
89                      end
90                      
91                      always@(posedge clk or negedge rst_n)
92                      begin
93         1/1              if(~rst_n)
94         1/1                  wr_sop_cnt <= 2'd0;
95         1/1              else if(wr_sop_cnt == 2'b11)
96         1/1                  wr_sop_cnt <= 2'd0;
97                          else
98         1/1                  wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
99                      end
100                     
101                     always@(posedge clk or negedge rst_n)
102                     begin
103        1/1              if(~rst_n)
104        1/1                  ram_wr_en <= 1'b0;
105                         else
106        1/1                  ram_wr_en <= wr_vld && d_select[0];
107                     end
108                     
109                     always@(posedge clk or negedge rst_n)
110                     begin
111        1/1              if(~rst_n)
112        1/1                  ram_wr_strb <= 2'b00;
113                         else
114        1/1                  ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
115                     end
116                     
117                     always@(posedge clk or negedge rst_n)
118                     begin
119        1/1              if(~rst_n)
120        1/1                  ram_wr_addr <= 4'b0000;
121                         else
122        1/1                  ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
123                     end
124                     
125                     always@(posedge clk or negedge rst_n)
126                     begin
127        1/1              if(~rst_n)
128        1/1                  ram_wr_data <= 32'd0;
129                         else
130        1/1                  ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_6

               Total   Covered  Percent
Conditions         32       26    81.25
Logical            32       26    81.25
Non-Logical         0        0
Event               0        0

 LINE       71
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       73
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       83
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       85
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       98
 EXPRESSION (wr_sop ? ((wr_sop_cnt + 1'b1)) : wr_sop_cnt)
             ---1--

-1- Status
 0  Covered
 1  Covered

 LINE       106
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       114
 EXPRESSION ((wr_vld && d_select[0]) ? wstrb[1:0] : 2'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       114
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       122
 EXPRESSION ((wr_vld && d_select[0]) ? waddr[3:0] : 4'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       122
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       130
 EXPRESSION ((wr_vld && d_select[0]) ? wr_data : 32'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       130
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_6
                Total Covered Percent 
Totals          15    11      73.33   
Total Bits      250   240     96.00   
Total Bits 0->1 125   120     96.00   
Total Bits 1->0 125   120     96.00   

                              
Ports          10  9   90.00  
Port Bits      152 150 98.68  
Port Bits 0->1 76  75  98.68  
Port Bits 1->0 76  75  98.68  

                              
Signals          5  2  40.00  
Signal Bits      98 90 91.84  
Signal Bits 0->1 49 45 91.84  
Signal Bits 1->0 49 45 91.84  

Port Details
                   Toggle Toggle 1->0 Toggle 0->1 Direction 
clk                Yes    Yes         Yes         INPUT     
rst_n              Yes    Yes         Yes         INPUT     
wr_sop             Yes    Yes         Yes         INPUT     
wr_eop             Yes    Yes         Yes         INPUT     
wr_vld             Yes    Yes         Yes         INPUT     
wr_data[31:0]      Yes    Yes         Yes         INPUT     
ram_wr_en          Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[21:0]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[22]    No     No          No          OUTPUT    
ram_wr_data[31:23] Yes    Yes         Yes         OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
d_select[8:0]   Yes    Yes         Yes         
d_select[9]     No     No          No          
waddr[15:0]     Yes    Yes         Yes         
waddr[16]       No     No          No          
waddr[19:17]    Yes    Yes         Yes         
waddr[20]       No     No          No          
waddr[23:21]    Yes    Yes         Yes         
wstrb[10:0]     Yes    Yes         Yes         
wstrb[11]       No     No          No          
wr_sop_cnt[1:0] Yes    Yes         Yes         
decode_rst      Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_6
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       57       4     4       100.00  
IF       69       4     4       100.00  
IF       81       4     4       100.00  
IF       93       4     4       100.00  
IF       103      2     2       100.00  
IF       111      3     3       100.00  
IF       119      3     3       100.00  
IF       127      3     3       100.00  


57             if(~rst_n)
               -1-  
58                 d_select <= 10'd0;
                   ==>
59             else if(wr_sop)
                    -2-  
60                 d_select <= bus_data_vld;
                   ==>
61             else if(wr_vld)
                    -3-  
62                 d_select <= d_select >> 1;
                   ==>
63             else
64                 d_select <= d_select;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


69             if(~rst_n)
               -1-  
70                 waddr <= 24'd0;
                   ==>
71             else if(wr_sop && decode_rst)
                    -2-  
72                 waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
                   ==>
73             else if(wr_vld && d_select[0])
                    -3-  
74                 waddr <= waddr >> 4;
                   ==>
75             else
76                 waddr <= waddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


81             if(~rst_n)
               -1-  
82                 wstrb <= 12'd0;
                   ==>
83             else if(wr_sop && decode_rst)
                    -2-  
84                 wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
                   ==>
85             else if(wr_vld && d_select[0])
                    -3-  
86                 wstrb <= wstrb >> 2;
                   ==>
87             else
88                 wstrb <= wstrb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


93             if(~rst_n)
               -1-  
94                 wr_sop_cnt <= 2'd0;
                   ==>
95             else if(wr_sop_cnt == 2'b11)
                    -2-  
96                 wr_sop_cnt <= 2'd0;
                   ==>
97             else
98                 wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
                                        -3-  
                                        ==>  
                                        ==>  

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


103            if(~rst_n)
               -1-  
104                ram_wr_en <= 1'b0;
                   ==>
105            else
106                ram_wr_en <= wr_vld && d_select[0];
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


111            if(~rst_n)
               -1-  
112                ram_wr_strb <= 2'b00;
                   ==>
113            else
114                ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


119            if(~rst_n)
               -1-  
120                ram_wr_addr <= 4'b0000;
                   ==>
121            else
122                ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


127            if(~rst_n)
               -1-  
128                ram_wr_data <= 32'd0;
                   ==>
129            else
130                ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.31 100.00  81.25  96.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.31 100.00  81.25  96.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
 95.11 100.00  81.25  99.20 --     100.00 ram_wr_control_data 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_7

             Line No.   Total   Covered  Percent
TOTAL                       38       38   100.00
ALWAYS             57        7        7   100.00
ALWAYS             69        7        7   100.00
ALWAYS             81        7        7   100.00
ALWAYS             93        5        5   100.00
ALWAYS            103        3        3   100.00
ALWAYS            111        3        3   100.00
ALWAYS            119        3        3   100.00
ALWAYS            127        3        3   100.00

56                      begin
57         1/1              if(~rst_n)
58         1/1                  d_select <= 10'd0;
59         1/1              else if(wr_sop)
60         1/1                  d_select <= bus_data_vld;
61         1/1              else if(wr_vld)
62         1/1                  d_select <= d_select >> 1;
63                          else
64         1/1                  d_select <= d_select;
65                      end
66                      
67                      always@(posedge clk or negedge rst_n)
68                      begin
69         1/1              if(~rst_n)
70         1/1                  waddr <= 24'd0;
71         1/1              else if(wr_sop && decode_rst)
72         1/1                  waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
73         1/1              else if(wr_vld && d_select[0])
74         1/1                  waddr <= waddr >> 4;
75                          else
76         1/1                  waddr <= waddr;
77                      end
78                      
79                      always@(posedge clk or negedge rst_n)
80                      begin
81         1/1              if(~rst_n)
82         1/1                  wstrb <= 12'd0;
83         1/1              else if(wr_sop && decode_rst)
84         1/1                  wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
85         1/1              else if(wr_vld && d_select[0])
86         1/1                  wstrb <= wstrb >> 2;
87                          else
88         1/1                  wstrb <= wstrb;
89                      end
90                      
91                      always@(posedge clk or negedge rst_n)
92                      begin
93         1/1              if(~rst_n)
94         1/1                  wr_sop_cnt <= 2'd0;
95         1/1              else if(wr_sop_cnt == 2'b11)
96         1/1                  wr_sop_cnt <= 2'd0;
97                          else
98         1/1                  wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
99                      end
100                     
101                     always@(posedge clk or negedge rst_n)
102                     begin
103        1/1              if(~rst_n)
104        1/1                  ram_wr_en <= 1'b0;
105                         else
106        1/1                  ram_wr_en <= wr_vld && d_select[0];
107                     end
108                     
109                     always@(posedge clk or negedge rst_n)
110                     begin
111        1/1              if(~rst_n)
112        1/1                  ram_wr_strb <= 2'b00;
113                         else
114        1/1                  ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
115                     end
116                     
117                     always@(posedge clk or negedge rst_n)
118                     begin
119        1/1              if(~rst_n)
120        1/1                  ram_wr_addr <= 4'b0000;
121                         else
122        1/1                  ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
123                     end
124                     
125                     always@(posedge clk or negedge rst_n)
126                     begin
127        1/1              if(~rst_n)
128        1/1                  ram_wr_data <= 32'd0;
129                         else
130        1/1                  ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_7

               Total   Covered  Percent
Conditions         32       26    81.25
Logical            32       26    81.25
Non-Logical         0        0
Event               0        0

 LINE       71
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       73
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       83
 EXPRESSION (wr_sop && decode_rst)
             ---1--    -----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       85
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       98
 EXPRESSION (wr_sop ? ((wr_sop_cnt + 1'b1)) : wr_sop_cnt)
             ---1--

-1- Status
 0  Covered
 1  Covered

 LINE       106
 EXPRESSION (wr_vld && d_select[0])
             ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       114
 EXPRESSION ((wr_vld && d_select[0]) ? wstrb[1:0] : 2'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       114
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       122
 EXPRESSION ((wr_vld && d_select[0]) ? waddr[3:0] : 4'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       122
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

 LINE       130
 EXPRESSION ((wr_vld && d_select[0]) ? wr_data : 32'b0)
             -----------1-----------

-1- Status
 0  Covered
 1  Covered

 LINE       130
 SUB-EXPRESSION (wr_vld && d_select[0])
                 ---1--    -----2-----

-1- -2- Status
 0   1  Not Covered
 1   0  Covered
 1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_7
                Total Covered Percent 
Totals          15    13      86.67   
Total Bits      250   240     96.00   
Total Bits 0->1 125   120     96.00   
Total Bits 1->0 125   120     96.00   

                              
Ports          10  9   90.00  
Port Bits      152 144 94.74  
Port Bits 0->1 76  72  94.74  
Port Bits 1->0 76  72  94.74  

                              
Signals          5  4  80.00  
Signal Bits      98 96 97.96  
Signal Bits 0->1 49 48 97.96  
Signal Bits 1->0 49 48 97.96  

Port Details
                   Toggle Toggle 1->0 Toggle 0->1 Direction 
clk                Yes    Yes         Yes         INPUT     
rst_n              Yes    Yes         Yes         INPUT     
wr_sop             Yes    Yes         Yes         INPUT     
wr_eop             Yes    Yes         Yes         INPUT     
wr_vld             Yes    Yes         Yes         INPUT     
wr_data[31:0]      Yes    Yes         Yes         INPUT     
ram_wr_en          Yes    Yes         Yes         OUTPUT    
ram_wr_strb[1:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_addr[3:0]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[0]     Yes    Yes         Yes         OUTPUT    
ram_wr_data[1]     No     No          No          OUTPUT    
ram_wr_data[3:2]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[4]     No     No          No          OUTPUT    
ram_wr_data[6:5]   Yes    Yes         Yes         OUTPUT    
ram_wr_data[7]     No     No          No          OUTPUT    
ram_wr_data[21:8]  Yes    Yes         Yes         OUTPUT    
ram_wr_data[22]    No     No          No          OUTPUT    
ram_wr_data[31:23] Yes    Yes         Yes         OUTPUT    

Signal Details
                Toggle Toggle 1->0 Toggle 0->1 
d_select[9:0]   Yes    Yes         Yes         
waddr[23:0]     Yes    Yes         Yes         
wstrb[10:0]     Yes    Yes         Yes         
wstrb[11]       No     No          No          
wr_sop_cnt[1:0] Yes    Yes         Yes         
decode_rst      Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_wr_control_7
         Line No. Total Covered Percent 
Branches          27    27      100.00  
IF       57       4     4       100.00  
IF       69       4     4       100.00  
IF       81       4     4       100.00  
IF       93       4     4       100.00  
IF       103      2     2       100.00  
IF       111      3     3       100.00  
IF       119      3     3       100.00  
IF       127      3     3       100.00  


57             if(~rst_n)
               -1-  
58                 d_select <= 10'd0;
                   ==>
59             else if(wr_sop)
                    -2-  
60                 d_select <= bus_data_vld;
                   ==>
61             else if(wr_vld)
                    -3-  
62                 d_select <= d_select >> 1;
                   ==>
63             else
64                 d_select <= d_select;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


69             if(~rst_n)
               -1-  
70                 waddr <= 24'd0;
                   ==>
71             else if(wr_sop && decode_rst)
                    -2-  
72                 waddr <= {waddr6,waddr5,waddr4,waddr3,waddr2,waddr1};
                   ==>
73             else if(wr_vld && d_select[0])
                    -3-  
74                 waddr <= waddr >> 4;
                   ==>
75             else
76                 waddr <= waddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


81             if(~rst_n)
               -1-  
82                 wstrb <= 12'd0;
                   ==>
83             else if(wr_sop && decode_rst)
                    -2-  
84                 wstrb <= {wr_strb6,wr_strb5,wr_strb4,wr_strb3,wr_strb2,wr_strb1};
                   ==>
85             else if(wr_vld && d_select[0])
                    -3-  
86                 wstrb <= wstrb >> 2;
                   ==>
87             else
88                 wstrb <= wstrb;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


93             if(~rst_n)
               -1-  
94                 wr_sop_cnt <= 2'd0;
                   ==>
95             else if(wr_sop_cnt == 2'b11)
                    -2-  
96                 wr_sop_cnt <= 2'd0;
                   ==>
97             else
98                 wr_sop_cnt <= wr_sop ? wr_sop_cnt + 1'b1 : wr_sop_cnt;
                                        -3-  
                                        ==>  
                                        ==>  

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


103            if(~rst_n)
               -1-  
104                ram_wr_en <= 1'b0;
                   ==>
105            else
106                ram_wr_en <= wr_vld && d_select[0];
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


111            if(~rst_n)
               -1-  
112                ram_wr_strb <= 2'b00;
                   ==>
113            else
114                ram_wr_strb <= (wr_vld && d_select[0]) ? wstrb[1:0] : 2'b00;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


119            if(~rst_n)
               -1-  
120                ram_wr_addr <= 4'b0000;
                   ==>
121            else
122                ram_wr_addr <= (wr_vld && d_select[0]) ? waddr[3:0] : 4'b0000;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


127            if(~rst_n)
               -1-  
128                ram_wr_data <= 32'd0;
                   ==>
129            else
130                ram_wr_data <= (wr_vld && d_select[0]) ? wr_data : 32'd0;
                                                          -2-  
                                                          ==>  
                                                          ==>  

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


===============================================================================
Module : pe_array
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.31 100.00 --      88.94 --     100.00 

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/rtl/pe_array.v

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                  
 96.31 100.00 --      88.94 --     100.00 npu_tb.u_NPU.pe_array 



-------------------------------------------------------------------------------
Line Coverage for Module : pe_array

             Line No.   Total   Covered  Percent
TOTAL                       17       17   100.00
ALWAYS            546       17       17   100.00

545                     begin
546        1/1              if(~rst_n)
547                         begin
548        1/1                  i_clear_0 <= 1'b0;
549        1/1                  i_clear_1 <= 1'b0;
550        1/1                  i_clear_2 <= 1'b0;
551        1/1                  i_clear_3 <= 1'b0;
552        1/1                  i_clear_4 <= 1'b0;
553        1/1                  i_clear_5 <= 1'b0;
554        1/1                  i_clear_6 <= 1'b0;
555        1/1                  i_clear_7 <= 1'b0;
556                         end
557                         else
558                         begin
559        1/1                  i_clear_0 <= i_pe_array_clear;
560        1/1                  i_clear_1 <= i_clear_0;
561        1/1                  i_clear_2 <= i_clear_1;
562        1/1                  i_clear_3 <= i_clear_2;
563        1/1                  i_clear_4 <= i_clear_3;
564        1/1                  i_clear_5 <= i_clear_4;
565        1/1                  i_clear_6 <= i_clear_5;
566        1/1                  i_clear_7 <= i_clear_6;

-------------------------------------------------------------------------------
Toggle Coverage for Module : pe_array
                Total Covered Percent 
Totals          475   301     63.37   
Total Bits      12950 11518   88.94   
Total Bits 0->1 6475  5950    91.89   
Total Bits 1->0 6475  5568    85.99   

                                
Ports          83   41   49.40  
Port Bits      2566 2225 86.71  
Port Bits 0->1 1283 1208 94.15  
Port Bits 1->0 1283 1017 79.27  

                                   
Signals          392   260  66.33  
Signal Bits      10384 9293 89.49  
Signal Bits 0->1 5192  4742 91.33  
Signal Bits 1->0 5192  4551 87.65  

Port Details
                           Toggle Toggle 1->0 Toggle 0->1 Direction 
clk                        Yes    Yes         Yes         INPUT     
rst_n                      Yes    Yes         Yes         INPUT     
i_pe_array_weight0[15:0]   Yes    Yes         Yes         INPUT     
i_pe_array_weight1[15:0]   Yes    Yes         Yes         INPUT     
i_pe_array_weight2[15:0]   Yes    Yes         Yes         INPUT     
i_pe_array_weight3[15:0]   Yes    Yes         Yes         INPUT     
i_pe_array_weight4[15:0]   Yes    Yes         Yes         INPUT     
i_pe_array_weight5[15:0]   Yes    Yes         Yes         INPUT     
i_pe_array_weight6[15:0]   Yes    Yes         Yes         INPUT     
i_pe_array_weight7[15:0]   Yes    Yes         Yes         INPUT     
i_pe_array_map0[1:0]       Yes    Yes         Yes         INPUT     
i_pe_array_map0[2]         No     Yes         No          INPUT     
i_pe_array_map0[6:3]       Yes    Yes         Yes         INPUT     
i_pe_array_map0[7]         No     No          No          INPUT     
i_pe_array_map0[15:8]      Yes    Yes         Yes         INPUT     
i_pe_array_map1[0]         Yes    Yes         Yes         INPUT     
i_pe_array_map1[1]         No     No          No          INPUT     
i_pe_array_map1[15:2]      Yes    Yes         Yes         INPUT     
i_pe_array_map2[0]         Yes    Yes         Yes         INPUT     
i_pe_array_map2[1]         No     No          No          INPUT     
i_pe_array_map2[6:2]       Yes    Yes         Yes         INPUT     
i_pe_array_map2[15:7]      No     No          No          INPUT     
i_pe_array_map3[1:0]       Yes    Yes         Yes         INPUT     
i_pe_array_map3[2]         No     No          No          INPUT     
i_pe_array_map3[3]         Yes    Yes         Yes         INPUT     
i_pe_array_map3[4]         No     No          No          INPUT     
i_pe_array_map3[5]         Yes    Yes         Yes         INPUT     
i_pe_array_map3[6]         No     No          No          INPUT     
i_pe_array_map3[15:7]      Yes    Yes         Yes         INPUT     
i_pe_array_map4[7:0]       Yes    Yes         Yes         INPUT     
i_pe_array_map4[15:8]      No     No          No          INPUT     
i_pe_array_map5[2:0]       Yes    Yes         Yes         INPUT     
i_pe_array_map5[3]         No     No          No          INPUT     
i_pe_array_map5[4]         Yes    Yes         Yes         INPUT     
i_pe_array_map5[5]         No     No          No          INPUT     
i_pe_array_map5[15:6]      Yes    Yes         Yes         INPUT     
i_pe_array_map6[15:0]      Yes    Yes         Yes         INPUT     
i_pe_array_map7[0]         No     No          Yes         INPUT     
i_pe_array_map7[4:1]       Yes    Yes         Yes         INPUT     
i_pe_array_map7[5]         No     No          Yes         INPUT     
i_pe_array_map7[7:6]       Yes    Yes         Yes         INPUT     
i_pe_array_map7[15:8]      No     No          Yes         INPUT     
o_pe_array_result0_0[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result0_1[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result0_1[15:9] No     No          Yes         OUTPUT    
o_pe_array_result0_2[7:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result0_2[15:8] No     No          No          OUTPUT    
o_pe_array_result0_3[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result0_4[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result0_5[5:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result0_5[6]    No     No          No          OUTPUT    
o_pe_array_result0_5[8:7]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result0_5[15:9] No     No          Yes         OUTPUT    
o_pe_array_result0_6[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result0_7[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_0[3:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_0[4]    No     No          Yes         OUTPUT    
o_pe_array_result1_0[5]    Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_0[6]    No     No          Yes         OUTPUT    
o_pe_array_result1_0[7]    Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_0[8]    No     No          Yes         OUTPUT    
o_pe_array_result1_0[15:9] No     No          No          OUTPUT    
o_pe_array_result1_1[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_1[15:9] No     No          No          OUTPUT    
o_pe_array_result1_2[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_2[15:9] No     No          Yes         OUTPUT    
o_pe_array_result1_3[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_3[15:9] No     No          Yes         OUTPUT    
o_pe_array_result1_4[3:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_4[4]    No     No          Yes         OUTPUT    
o_pe_array_result1_4[7:5]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_4[15:8] No     No          No          OUTPUT    
o_pe_array_result1_5[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_6[4:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_6[5]    No     No          Yes         OUTPUT    
o_pe_array_result1_6[15:6] Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_7[3:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result1_7[4]    No     No          Yes         OUTPUT    
o_pe_array_result1_7[15:5] Yes    Yes         Yes         OUTPUT    
o_pe_array_result2_0[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result2_1[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result2_2[6:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result2_2[15:7] No     No          Yes         OUTPUT    
o_pe_array_result2_3[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result2_4[0]    No     No          Yes         OUTPUT    
o_pe_array_result2_4[15:1] Yes    Yes         Yes         OUTPUT    
o_pe_array_result2_5[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result2_6[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result2_7[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result3_0[7:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result3_0[15:8] No     No          Yes         OUTPUT    
o_pe_array_result3_1[6:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result3_1[15:7] No     No          Yes         OUTPUT    
o_pe_array_result3_2[6:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result3_2[15:7] No     No          No          OUTPUT    
o_pe_array_result3_3[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result3_4[3:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result3_4[4]    No     No          Yes         OUTPUT    
o_pe_array_result3_4[6:5]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result3_4[15:7] No     No          Yes         OUTPUT    
o_pe_array_result3_5[4:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result3_5[5]    No     No          Yes         OUTPUT    
o_pe_array_result3_5[7:6]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result3_5[15:8] No     No          Yes         OUTPUT    
o_pe_array_result3_6[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result3_7[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result4_0[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result4_1[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result4_2[2:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result4_2[3]    No     No          Yes         OUTPUT    
o_pe_array_result4_2[6:4]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result4_2[7]    No     No          Yes         OUTPUT    
o_pe_array_result4_2[8]    Yes    Yes         Yes         OUTPUT    
o_pe_array_result4_2[15:9] No     No          Yes         OUTPUT    
o_pe_array_result4_3[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result4_4[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result4_5[0]    Yes    Yes         Yes         OUTPUT    
o_pe_array_result4_5[1]    No     No          No          OUTPUT    
o_pe_array_result4_5[4:2]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result4_5[5]    No     No          Yes         OUTPUT    
o_pe_array_result4_5[15:6] Yes    Yes         Yes         OUTPUT    
o_pe_array_result4_6[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result4_7[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result5_0[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result5_0[15:9] No     No          Yes         OUTPUT    
o_pe_array_result5_1[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result5_2[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result5_2[15:9] No     No          Yes         OUTPUT    
o_pe_array_result5_3[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result5_4[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result5_4[15:9] No     No          Yes         OUTPUT    
o_pe_array_result5_5[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result5_5[15:9] No     No          Yes         OUTPUT    
o_pe_array_result5_6[0]    No     No          Yes         OUTPUT    
o_pe_array_result5_6[15:1] Yes    Yes         Yes         OUTPUT    
o_pe_array_result5_7[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result6_0[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result6_0[15:9] No     No          Yes         OUTPUT    
o_pe_array_result6_1[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result6_1[15:9] No     No          Yes         OUTPUT    
o_pe_array_result6_2[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result6_3[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result6_4[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result6_5[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result6_5[15:9] No     No          Yes         OUTPUT    
o_pe_array_result6_6[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result6_7[0]    No     No          Yes         OUTPUT    
o_pe_array_result6_7[3:1]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result6_7[4]    No     No          Yes         OUTPUT    
o_pe_array_result6_7[5]    Yes    Yes         Yes         OUTPUT    
o_pe_array_result6_7[6]    No     No          Yes         OUTPUT    
o_pe_array_result6_7[15:7] Yes    Yes         Yes         OUTPUT    
o_pe_array_result7_0[6:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result7_0[15:7] No     No          Yes         OUTPUT    
o_pe_array_result7_1[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result7_1[15:9] No     No          Yes         OUTPUT    
o_pe_array_result7_2[15:0] Yes    Yes         Yes         OUTPUT    
o_pe_array_result7_3[7:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result7_3[15:8] No     No          Yes         OUTPUT    
o_pe_array_result7_4[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result7_4[15:9] No     No          Yes         OUTPUT    
o_pe_array_result7_5[8:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result7_5[15:9] No     No          Yes         OUTPUT    
o_pe_array_result7_6[4:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result7_6[5]    No     No          Yes         OUTPUT    
o_pe_array_result7_6[15:6] Yes    Yes         Yes         OUTPUT    
o_pe_array_result7_7[7:0]  Yes    Yes         Yes         OUTPUT    
o_pe_array_result7_7[15:8] No     No          No          OUTPUT    
i_pe_array_clear           Yes    Yes         Yes         INPUT     

Signal Details
                   Toggle Toggle 1->0 Toggle 0->1 
i_clear_0          Yes    Yes         Yes         
i_clear_1          Yes    Yes         Yes         
i_clear_2          Yes    Yes         Yes         
i_clear_3          Yes    Yes         Yes         
i_clear_4          Yes    Yes         Yes         
i_clear_5          Yes    Yes         Yes         
i_clear_6          Yes    Yes         Yes         
i_clear_7          Yes    Yes         Yes         
i_clear_0_0        Yes    Yes         Yes         
i_weight_0_0[15:0] Yes    Yes         Yes         
i_map_0_0[1:0]     Yes    Yes         Yes         
i_map_0_0[2]       No     Yes         No          
i_map_0_0[6:3]     Yes    Yes         Yes         
i_map_0_0[7]       No     No          No          
i_map_0_0[15:8]    Yes    Yes         Yes         
o_weight_0_0[15:0] Yes    Yes         Yes         
o_map_0_0[6:0]     Yes    Yes         Yes         
o_map_0_0[7]       No     No          No          
o_map_0_0[15:8]    Yes    Yes         Yes         
o_result_0_0[15:0] Yes    Yes         Yes         
i_clear_0_1        Yes    Yes         Yes         
i_weight_0_1[15:0] Yes    Yes         Yes         
i_map_0_1[6:0]     Yes    Yes         Yes         
i_map_0_1[7]       No     No          No          
i_map_0_1[15:8]    Yes    Yes         Yes         
o_weight_0_1[15:0] Yes    Yes         Yes         
o_map_0_1[6:0]     Yes    Yes         Yes         
o_map_0_1[7]       No     No          No          
o_map_0_1[15:8]    Yes    Yes         Yes         
o_result_0_1[8:0]  Yes    Yes         Yes         
o_result_0_1[15:9] No     No          Yes         
i_clear_0_2        Yes    Yes         Yes         
i_weight_0_2[15:0] Yes    Yes         Yes         
i_map_0_2[6:0]     Yes    Yes         Yes         
i_map_0_2[7]       No     No          No          
i_map_0_2[15:8]    Yes    Yes         Yes         
o_weight_0_2[15:0] Yes    Yes         Yes         
o_map_0_2[6:0]     Yes    Yes         Yes         
o_map_0_2[7]       No     No          No          
o_map_0_2[15:8]    Yes    Yes         Yes         
o_result_0_2[7:0]  Yes    Yes         Yes         
o_result_0_2[15:8] No     No          No          
i_clear_0_3        Yes    Yes         Yes         
i_weight_0_3[15:0] Yes    Yes         Yes         
i_map_0_3[6:0]     Yes    Yes         Yes         
i_map_0_3[7]       No     No          No          
i_map_0_3[15:8]    Yes    Yes         Yes         
o_weight_0_3[15:0] Yes    Yes         Yes         
o_map_0_3[6:0]     Yes    Yes         Yes         
o_map_0_3[7]       No     No          No          
o_map_0_3[15:8]    Yes    Yes         Yes         
o_result_0_3[15:0] Yes    Yes         Yes         
i_clear_0_4        Yes    Yes         Yes         
i_weight_0_4[15:0] Yes    Yes         Yes         
i_map_0_4[6:0]     Yes    Yes         Yes         
i_map_0_4[7]       No     No          No          
i_map_0_4[15:8]    Yes    Yes         Yes         
o_weight_0_4[15:0] Yes    Yes         Yes         
o_map_0_4[6:0]     Yes    Yes         Yes         
o_map_0_4[7]       No     No          No          
o_map_0_4[15:8]    Yes    Yes         Yes         
o_result_0_4[15:0] Yes    Yes         Yes         
i_clear_0_5        Yes    Yes         Yes         
i_weight_0_5[15:0] Yes    Yes         Yes         
i_map_0_5[6:0]     Yes    Yes         Yes         
i_map_0_5[7]       No     No          No          
i_map_0_5[15:8]    Yes    Yes         Yes         
o_weight_0_5[15:0] Yes    Yes         Yes         
o_map_0_5[6:0]     Yes    Yes         Yes         
o_map_0_5[7]       No     No          No          
o_map_0_5[15:8]    Yes    Yes         Yes         
o_result_0_5[5:0]  Yes    Yes         Yes         
o_result_0_5[6]    No     No          No          
o_result_0_5[8:7]  Yes    Yes         Yes         
o_result_0_5[15:9] No     No          Yes         
i_clear_0_6        Yes    Yes         Yes         
i_weight_0_6[15:0] Yes    Yes         Yes         
i_map_0_6[6:0]     Yes    Yes         Yes         
i_map_0_6[7]       No     No          No          
i_map_0_6[15:8]    Yes    Yes         Yes         
o_weight_0_6[15:0] Yes    Yes         Yes         
o_map_0_6[6:0]     Yes    Yes         Yes         
o_map_0_6[7]       No     No          No          
o_map_0_6[15:8]    Yes    Yes         Yes         
o_result_0_6[15:0] Yes    Yes         Yes         
i_clear_0_7        Yes    Yes         Yes         
i_weight_0_7[15:0] Yes    Yes         Yes         
i_map_0_7[6:0]     Yes    Yes         Yes         
i_map_0_7[7]       No     No          No          
i_map_0_7[15:8]    Yes    Yes         Yes         
o_weight_0_7[15:0] Yes    Yes         Yes         
o_map_0_7[6:0]     Yes    Yes         Yes         
o_map_0_7[7]       No     No          No          
o_map_0_7[15:8]    Yes    Yes         Yes         
o_result_0_7[15:0] Yes    Yes         Yes         
i_clear_1_0        Yes    Yes         Yes         
i_weight_1_0[15:0] Yes    Yes         Yes         
i_map_1_0[0]       Yes    Yes         Yes         
i_map_1_0[1]       No     No          No          
i_map_1_0[15:2]    Yes    Yes         Yes         
o_weight_1_0[15:0] Yes    Yes         Yes         
o_map_1_0[0]       Yes    Yes         Yes         
o_map_1_0[1]       No     No          No          
o_map_1_0[15:2]    Yes    Yes         Yes         
o_result_1_0[3:0]  Yes    Yes         Yes         
o_result_1_0[4]    No     No          Yes         
o_result_1_0[5]    Yes    Yes         Yes         
o_result_1_0[6]    No     No          Yes         
o_result_1_0[7]    Yes    Yes         Yes         
o_result_1_0[8]    No     No          Yes         
o_result_1_0[15:9] No     No          No          
i_clear_1_1        Yes    Yes         Yes         
i_weight_1_1[15:0] Yes    Yes         Yes         
i_map_1_1[0]       Yes    Yes         Yes         
i_map_1_1[1]       No     No          No          
i_map_1_1[15:2]    Yes    Yes         Yes         
o_weight_1_1[15:0] Yes    Yes         Yes         
o_map_1_1[0]       Yes    Yes         Yes         
o_map_1_1[1]       No     No          No          
o_map_1_1[15:2]    Yes    Yes         Yes         
o_result_1_1[8:0]  Yes    Yes         Yes         
o_result_1_1[15:9] No     No          No          
i_clear_1_2        Yes    Yes         Yes         
i_weight_1_2[15:0] Yes    Yes         Yes         
i_map_1_2[0]       Yes    Yes         Yes         
i_map_1_2[1]       No     No          No          
i_map_1_2[15:2]    Yes    Yes         Yes         
o_weight_1_2[15:0] Yes    Yes         Yes         
o_map_1_2[0]       Yes    Yes         Yes         
o_map_1_2[1]       No     No          No          
o_map_1_2[15:2]    Yes    Yes         Yes         
o_result_1_2[8:0]  Yes    Yes         Yes         
o_result_1_2[15:9] No     No          Yes         
i_clear_1_3        Yes    Yes         Yes         
i_weight_1_3[15:0] Yes    Yes         Yes         
i_map_1_3[0]       Yes    Yes         Yes         
i_map_1_3[1]       No     No          No          
i_map_1_3[15:2]    Yes    Yes         Yes         
o_weight_1_3[15:0] Yes    Yes         Yes         
o_map_1_3[0]       Yes    Yes         Yes         
o_map_1_3[1]       No     No          No          
o_map_1_3[15:2]    Yes    Yes         Yes         
o_result_1_3[8:0]  Yes    Yes         Yes         
o_result_1_3[15:9] No     No          Yes         
i_clear_1_4        Yes    Yes         Yes         
i_weight_1_4[15:0] Yes    Yes         Yes         
i_map_1_4[0]       Yes    Yes         Yes         
i_map_1_4[1]       No     No          No          
i_map_1_4[15:2]    Yes    Yes         Yes         
o_weight_1_4[15:0] Yes    Yes         Yes         
o_map_1_4[0]       Yes    Yes         Yes         
o_map_1_4[1]       No     No          No          
o_map_1_4[15:2]    Yes    Yes         Yes         
o_result_1_4[3:0]  Yes    Yes         Yes         
o_result_1_4[4]    No     No          Yes         
o_result_1_4[7:5]  Yes    Yes         Yes         
o_result_1_4[15:8] No     No          No          
i_clear_1_5        Yes    Yes         Yes         
i_weight_1_5[15:0] Yes    Yes         Yes         
i_map_1_5[0]       Yes    Yes         Yes         
i_map_1_5[1]       No     No          No          
i_map_1_5[15:2]    Yes    Yes         Yes         
o_weight_1_5[15:0] Yes    Yes         Yes         
o_map_1_5[0]       Yes    Yes         Yes         
o_map_1_5[1]       No     No          No          
o_map_1_5[15:2]    Yes    Yes         Yes         
o_result_1_5[15:0] Yes    Yes         Yes         
i_clear_1_6        Yes    Yes         Yes         
i_weight_1_6[15:0] Yes    Yes         Yes         
i_map_1_6[0]       Yes    Yes         Yes         
i_map_1_6[1]       No     No          No          
i_map_1_6[15:2]    Yes    Yes         Yes         
o_weight_1_6[15:0] Yes    Yes         Yes         
o_map_1_6[0]       Yes    Yes         Yes         
o_map_1_6[1]       No     No          No          
o_map_1_6[15:2]    Yes    Yes         Yes         
o_result_1_6[4:0]  Yes    Yes         Yes         
o_result_1_6[5]    No     No          Yes         
o_result_1_6[15:6] Yes    Yes         Yes         
i_clear_1_7        Yes    Yes         Yes         
i_weight_1_7[15:0] Yes    Yes         Yes         
i_map_1_7[0]       Yes    Yes         Yes         
i_map_1_7[1]       No     No          No          
i_map_1_7[15:2]    Yes    Yes         Yes         
o_weight_1_7[15:0] Yes    Yes         Yes         
o_map_1_7[0]       Yes    Yes         Yes         
o_map_1_7[1]       No     No          No          
o_map_1_7[15:2]    Yes    Yes         Yes         
o_result_1_7[3:0]  Yes    Yes         Yes         
o_result_1_7[4]    No     No          Yes         
o_result_1_7[15:5] Yes    Yes         Yes         
i_clear_2_0        Yes    Yes         Yes         
i_weight_2_0[15:0] Yes    Yes         Yes         
i_map_2_0[0]       Yes    Yes         Yes         
i_map_2_0[1]       No     No          No          
i_map_2_0[6:2]     Yes    Yes         Yes         
i_map_2_0[15:7]    No     No          No          
o_weight_2_0[15:0] Yes    Yes         Yes         
o_map_2_0[0]       Yes    Yes         Yes         
o_map_2_0[1]       No     No          No          
o_map_2_0[6:2]     Yes    Yes         Yes         
o_map_2_0[15:7]    No     No          No          
o_result_2_0[15:0] Yes    Yes         Yes         
i_clear_2_1        Yes    Yes         Yes         
i_weight_2_1[15:0] Yes    Yes         Yes         
i_map_2_1[0]       Yes    Yes         Yes         
i_map_2_1[1]       No     No          No          
i_map_2_1[6:2]     Yes    Yes         Yes         
i_map_2_1[15:7]    No     No          No          
o_weight_2_1[15:0] Yes    Yes         Yes         
o_map_2_1[0]       Yes    Yes         Yes         
o_map_2_1[1]       No     No          No          
o_map_2_1[6:2]     Yes    Yes         Yes         
o_map_2_1[15:7]    No     No          No          
o_result_2_1[15:0] Yes    Yes         Yes         
i_clear_2_2        Yes    Yes         Yes         
i_weight_2_2[15:0] Yes    Yes         Yes         
i_map_2_2[0]       Yes    Yes         Yes         
i_map_2_2[1]       No     No          No          
i_map_2_2[6:2]     Yes    Yes         Yes         
i_map_2_2[15:7]    No     No          No          
o_weight_2_2[15:0] Yes    Yes         Yes         
o_map_2_2[0]       Yes    Yes         Yes         
o_map_2_2[1]       No     No          No          
o_map_2_2[6:2]     Yes    Yes         Yes         
o_map_2_2[15:7]    No     No          No          
o_result_2_2[6:0]  Yes    Yes         Yes         
o_result_2_2[15:7] No     No          Yes         
i_clear_2_3        Yes    Yes         Yes         
i_weight_2_3[15:0] Yes    Yes         Yes         
i_map_2_3[0]       Yes    Yes         Yes         
i_map_2_3[1]       No     No          No          
i_map_2_3[6:2]     Yes    Yes         Yes         
i_map_2_3[15:7]    No     No          No          
o_weight_2_3[15:0] Yes    Yes         Yes         
o_map_2_3[0]       Yes    Yes         Yes         
o_map_2_3[1]       No     No          No          
o_map_2_3[6:2]     Yes    Yes         Yes         
o_map_2_3[15:7]    No     No          No          
o_result_2_3[15:0] Yes    Yes         Yes         
i_clear_2_4        Yes    Yes         Yes         
i_weight_2_4[15:0] Yes    Yes         Yes         
i_map_2_4[0]       Yes    Yes         Yes         
i_map_2_4[1]       No     No          No          
i_map_2_4[6:2]     Yes    Yes         Yes         
i_map_2_4[15:7]    No     No          No          
o_weight_2_4[15:0] Yes    Yes         Yes         
o_map_2_4[0]       Yes    Yes         Yes         
o_map_2_4[1]       No     No          No          
o_map_2_4[6:2]     Yes    Yes         Yes         
o_map_2_4[15:7]    No     No          No          
o_result_2_4[0]    No     No          Yes         
o_result_2_4[15:1] Yes    Yes         Yes         
i_clear_2_5        Yes    Yes         Yes         
i_weight_2_5[15:0] Yes    Yes         Yes         
i_map_2_5[0]       Yes    Yes         Yes         
i_map_2_5[1]       No     No          No          
i_map_2_5[6:2]     Yes    Yes         Yes         
i_map_2_5[15:7]    No     No          No          
o_weight_2_5[15:0] Yes    Yes         Yes         
o_map_2_5[0]       Yes    Yes         Yes         
o_map_2_5[1]       No     No          No          
o_map_2_5[6:2]     Yes    Yes         Yes         
o_map_2_5[15:7]    No     No          No          
o_result_2_5[15:0] Yes    Yes         Yes         
i_clear_2_6        Yes    Yes         Yes         
i_weight_2_6[15:0] Yes    Yes         Yes         
i_map_2_6[0]       Yes    Yes         Yes         
i_map_2_6[1]       No     No          No          
i_map_2_6[6:2]     Yes    Yes         Yes         
i_map_2_6[15:7]    No     No          No          
o_weight_2_6[15:0] Yes    Yes         Yes         
o_map_2_6[0]       Yes    Yes         Yes         
o_map_2_6[1]       No     No          No          
o_map_2_6[6:2]     Yes    Yes         Yes         
o_map_2_6[15:7]    No     No          No          
o_result_2_6[15:0] Yes    Yes         Yes         
i_clear_2_7        Yes    Yes         Yes         
i_weight_2_7[15:0] Yes    Yes         Yes         
i_map_2_7[0]       Yes    Yes         Yes         
i_map_2_7[1]       No     No          No          
i_map_2_7[6:2]     Yes    Yes         Yes         
i_map_2_7[15:7]    No     No          No          
o_weight_2_7[15:0] Yes    Yes         Yes         
o_map_2_7[0]       Yes    Yes         Yes         
o_map_2_7[1]       No     No          No          
o_map_2_7[6:2]     Yes    Yes         Yes         
o_map_2_7[15:7]    No     No          No          
o_result_2_7[15:0] Yes    Yes         Yes         
i_clear_3_0        Yes    Yes         Yes         
i_weight_3_0[15:0] Yes    Yes         Yes         
i_map_3_0[1:0]     Yes    Yes         Yes         
i_map_3_0[2]       No     No          No          
i_map_3_0[3]       Yes    Yes         Yes         
i_map_3_0[4]       No     No          No          
i_map_3_0[5]       Yes    Yes         Yes         
i_map_3_0[6]       No     No          No          
i_map_3_0[15:7]    Yes    Yes         Yes         
o_weight_3_0[15:0] Yes    Yes         Yes         
o_map_3_0[1:0]     Yes    Yes         Yes         
o_map_3_0[2]       No     No          No          
o_map_3_0[3]       Yes    Yes         Yes         
o_map_3_0[4]       No     No          No          
o_map_3_0[5]       Yes    Yes         Yes         
o_map_3_0[6]       No     No          No          
o_map_3_0[15:7]    Yes    Yes         Yes         
o_result_3_0[7:0]  Yes    Yes         Yes         
o_result_3_0[15:8] No     No          Yes         
i_clear_3_1        Yes    Yes         Yes         
i_weight_3_1[15:0] Yes    Yes         Yes         
i_map_3_1[1:0]     Yes    Yes         Yes         
i_map_3_1[2]       No     No          No          
i_map_3_1[3]       Yes    Yes         Yes         
i_map_3_1[4]       No     No          No          
i_map_3_1[5]       Yes    Yes         Yes         
i_map_3_1[6]       No     No          No          
i_map_3_1[15:7]    Yes    Yes         Yes         
o_weight_3_1[15:0] Yes    Yes         Yes         
o_map_3_1[1:0]     Yes    Yes         Yes         
o_map_3_1[2]       No     No          No          
o_map_3_1[3]       Yes    Yes         Yes         
o_map_3_1[4]       No     No          No          
o_map_3_1[5]       Yes    Yes         Yes         
o_map_3_1[6]       No     No          No          
o_map_3_1[15:7]    Yes    Yes         Yes         
o_result_3_1[6:0]  Yes    Yes         Yes         
o_result_3_1[15:7] No     No          Yes         
i_clear_3_2        Yes    Yes         Yes         
i_weight_3_2[15:0] Yes    Yes         Yes         
i_map_3_2[1:0]     Yes    Yes         Yes         
i_map_3_2[2]       No     No          No          
i_map_3_2[3]       Yes    Yes         Yes         
i_map_3_2[4]       No     No          No          
i_map_3_2[5]       Yes    Yes         Yes         
i_map_3_2[6]       No     No          No          
i_map_3_2[15:7]    Yes    Yes         Yes         
o_weight_3_2[15:0] Yes    Yes         Yes         
o_map_3_2[1:0]     Yes    Yes         Yes         
o_map_3_2[2]       No     No          No          
o_map_3_2[3]       Yes    Yes         Yes         
o_map_3_2[4]       No     No          No          
o_map_3_2[5]       Yes    Yes         Yes         
o_map_3_2[6]       No     No          No          
o_map_3_2[15:7]    Yes    Yes         Yes         
o_result_3_2[6:0]  Yes    Yes         Yes         
o_result_3_2[15:7] No     No          No          
i_clear_3_3        Yes    Yes         Yes         
i_weight_3_3[15:0] Yes    Yes         Yes         
i_map_3_3[1:0]     Yes    Yes         Yes         
i_map_3_3[2]       No     No          No          
i_map_3_3[3]       Yes    Yes         Yes         
i_map_3_3[4]       No     No          No          
i_map_3_3[5]       Yes    Yes         Yes         
i_map_3_3[6]       No     No          No          
i_map_3_3[15:7]    Yes    Yes         Yes         
o_weight_3_3[15:0] Yes    Yes         Yes         
o_map_3_3[1:0]     Yes    Yes         Yes         
o_map_3_3[2]       No     No          No          
o_map_3_3[3]       Yes    Yes         Yes         
o_map_3_3[4]       No     No          No          
o_map_3_3[5]       Yes    Yes         Yes         
o_map_3_3[6]       No     No          No          
o_map_3_3[15:7]    Yes    Yes         Yes         
o_result_3_3[15:0] Yes    Yes         Yes         
i_clear_3_4        Yes    Yes         Yes         
i_weight_3_4[15:0] Yes    Yes         Yes         
i_map_3_4[1:0]     Yes    Yes         Yes         
i_map_3_4[2]       No     No          No          
i_map_3_4[3]       Yes    Yes         Yes         
i_map_3_4[4]       No     No          No          
i_map_3_4[5]       Yes    Yes         Yes         
i_map_3_4[6]       No     No          No          
i_map_3_4[15:7]    Yes    Yes         Yes         
o_weight_3_4[15:0] Yes    Yes         Yes         
o_map_3_4[1:0]     Yes    Yes         Yes         
o_map_3_4[2]       No     No          No          
o_map_3_4[3]       Yes    Yes         Yes         
o_map_3_4[4]       No     No          No          
o_map_3_4[5]       Yes    Yes         Yes         
o_map_3_4[6]       No     No          No          
o_map_3_4[15:7]    Yes    Yes         Yes         
o_result_3_4[3:0]  Yes    Yes         Yes         
o_result_3_4[4]    No     No          Yes         
o_result_3_4[6:5]  Yes    Yes         Yes         
o_result_3_4[15:7] No     No          Yes         
i_clear_3_5        Yes    Yes         Yes         
i_weight_3_5[15:0] Yes    Yes         Yes         
i_map_3_5[1:0]     Yes    Yes         Yes         
i_map_3_5[2]       No     No          No          
i_map_3_5[3]       Yes    Yes         Yes         
i_map_3_5[4]       No     No          No          
i_map_3_5[5]       Yes    Yes         Yes         
i_map_3_5[6]       No     No          No          
i_map_3_5[15:7]    Yes    Yes         Yes         
o_weight_3_5[15:0] Yes    Yes         Yes         
o_map_3_5[1:0]     Yes    Yes         Yes         
o_map_3_5[2]       No     No          No          
o_map_3_5[3]       Yes    Yes         Yes         
o_map_3_5[4]       No     No          No          
o_map_3_5[5]       Yes    Yes         Yes         
o_map_3_5[6]       No     No          No          
o_map_3_5[15:7]    Yes    Yes         Yes         
o_result_3_5[4:0]  Yes    Yes         Yes         
o_result_3_5[5]    No     No          Yes         
o_result_3_5[7:6]  Yes    Yes         Yes         
o_result_3_5[15:8] No     No          Yes         
i_clear_3_6        Yes    Yes         Yes         
i_weight_3_6[15:0] Yes    Yes         Yes         
i_map_3_6[1:0]     Yes    Yes         Yes         
i_map_3_6[2]       No     No          No          
i_map_3_6[3]       Yes    Yes         Yes         
i_map_3_6[4]       No     No          No          
i_map_3_6[5]       Yes    Yes         Yes         
i_map_3_6[6]       No     No          No          
i_map_3_6[15:7]    Yes    Yes         Yes         
o_weight_3_6[15:0] Yes    Yes         Yes         
o_map_3_6[1:0]     Yes    Yes         Yes         
o_map_3_6[2]       No     No          No          
o_map_3_6[3]       Yes    Yes         Yes         
o_map_3_6[4]       No     No          No          
o_map_3_6[5]       Yes    Yes         Yes         
o_map_3_6[6]       No     No          No          
o_map_3_6[15:7]    Yes    Yes         Yes         
o_result_3_6[15:0] Yes    Yes         Yes         
i_clear_3_7        Yes    Yes         Yes         
i_weight_3_7[15:0] Yes    Yes         Yes         
i_map_3_7[1:0]     Yes    Yes         Yes         
i_map_3_7[2]       No     No          No          
i_map_3_7[3]       Yes    Yes         Yes         
i_map_3_7[4]       No     No          No          
i_map_3_7[5]       Yes    Yes         Yes         
i_map_3_7[6]       No     No          No          
i_map_3_7[15:7]    Yes    Yes         Yes         
o_weight_3_7[15:0] Yes    Yes         Yes         
o_map_3_7[1:0]     Yes    Yes         Yes         
o_map_3_7[2]       No     No          No          
o_map_3_7[3]       Yes    Yes         Yes         
o_map_3_7[4]       No     No          No          
o_map_3_7[5]       Yes    Yes         Yes         
o_map_3_7[6]       No     No          No          
o_map_3_7[15:7]    Yes    Yes         Yes         
o_result_3_7[15:0] Yes    Yes         Yes         
i_clear_4_0        Yes    Yes         Yes         
i_weight_4_0[15:0] Yes    Yes         Yes         
i_map_4_0[7:0]     Yes    Yes         Yes         
i_map_4_0[15:8]    No     No          No          
o_weight_4_0[15:0] Yes    Yes         Yes         
o_map_4_0[7:0]     Yes    Yes         Yes         
o_map_4_0[15:8]    No     No          No          
o_result_4_0[15:0] Yes    Yes         Yes         
i_clear_4_1        Yes    Yes         Yes         
i_weight_4_1[15:0] Yes    Yes         Yes         
i_map_4_1[7:0]     Yes    Yes         Yes         
i_map_4_1[15:8]    No     No          No          
o_weight_4_1[15:0] Yes    Yes         Yes         
o_map_4_1[7:0]     Yes    Yes         Yes         
o_map_4_1[15:8]    No     No          No          
o_result_4_1[15:0] Yes    Yes         Yes         
i_clear_4_2        Yes    Yes         Yes         
i_weight_4_2[15:0] Yes    Yes         Yes         
i_map_4_2[7:0]     Yes    Yes         Yes         
i_map_4_2[15:8]    No     No          No          
o_weight_4_2[15:0] Yes    Yes         Yes         
o_map_4_2[7:0]     Yes    Yes         Yes         
o_map_4_2[15:8]    No     No          No          
o_result_4_2[2:0]  Yes    Yes         Yes         
o_result_4_2[3]    No     No          Yes         
o_result_4_2[6:4]  Yes    Yes         Yes         
o_result_4_2[7]    No     No          Yes         
o_result_4_2[8]    Yes    Yes         Yes         
o_result_4_2[15:9] No     No          Yes         
i_clear_4_3        Yes    Yes         Yes         
i_weight_4_3[15:0] Yes    Yes         Yes         
i_map_4_3[7:0]     Yes    Yes         Yes         
i_map_4_3[15:8]    No     No          No          
o_weight_4_3[15:0] Yes    Yes         Yes         
o_map_4_3[7:0]     Yes    Yes         Yes         
o_map_4_3[15:8]    No     No          No          
o_result_4_3[15:0] Yes    Yes         Yes         
i_clear_4_4        Yes    Yes         Yes         
i_weight_4_4[15:0] Yes    Yes         Yes         
i_map_4_4[7:0]     Yes    Yes         Yes         
i_map_4_4[15:8]    No     No          No          
o_weight_4_4[15:0] Yes    Yes         Yes         
o_map_4_4[7:0]     Yes    Yes         Yes         
o_map_4_4[15:8]    No     No          No          
o_result_4_4[15:0] Yes    Yes         Yes         
i_clear_4_5        Yes    Yes         Yes         
i_weight_4_5[15:0] Yes    Yes         Yes         
i_map_4_5[7:0]     Yes    Yes         Yes         
i_map_4_5[15:8]    No     No          No          
o_weight_4_5[15:0] Yes    Yes         Yes         
o_map_4_5[7:0]     Yes    Yes         Yes         
o_map_4_5[15:8]    No     No          No          
o_result_4_5[0]    Yes    Yes         Yes         
o_result_4_5[1]    No     No          No          
o_result_4_5[4:2]  Yes    Yes         Yes         
o_result_4_5[5]    No     No          Yes         
o_result_4_5[15:6] Yes    Yes         Yes         
i_clear_4_6        Yes    Yes         Yes         
i_weight_4_6[15:0] Yes    Yes         Yes         
i_map_4_6[7:0]     Yes    Yes         Yes         
i_map_4_6[15:8]    No     No          No          
o_weight_4_6[15:0] Yes    Yes         Yes         
o_map_4_6[7:0]     Yes    Yes         Yes         
o_map_4_6[15:8]    No     No          No          
o_result_4_6[15:0] Yes    Yes         Yes         
i_clear_4_7        Yes    Yes         Yes         
i_weight_4_7[15:0] Yes    Yes         Yes         
i_map_4_7[7:0]     Yes    Yes         Yes         
i_map_4_7[15:8]    No     No          No          
o_weight_4_7[15:0] Yes    Yes         Yes         
o_map_4_7[7:0]     Yes    Yes         Yes         
o_map_4_7[15:8]    No     No          No          
o_result_4_7[15:0] Yes    Yes         Yes         
i_clear_5_0        Yes    Yes         Yes         
i_weight_5_0[15:0] Yes    Yes         Yes         
i_map_5_0[2:0]     Yes    Yes         Yes         
i_map_5_0[3]       No     No          No          
i_map_5_0[4]       Yes    Yes         Yes         
i_map_5_0[5]       No     No          No          
i_map_5_0[15:6]    Yes    Yes         Yes         
o_weight_5_0[15:0] Yes    Yes         Yes         
o_map_5_0[2:0]     Yes    Yes         Yes         
o_map_5_0[3]       No     No          No          
o_map_5_0[4]       Yes    Yes         Yes         
o_map_5_0[5]       No     No          No          
o_map_5_0[15:6]    Yes    Yes         Yes         
o_result_5_0[8:0]  Yes    Yes         Yes         
o_result_5_0[15:9] No     No          Yes         
i_clear_5_1        Yes    Yes         Yes         
i_weight_5_1[15:0] Yes    Yes         Yes         
i_map_5_1[2:0]     Yes    Yes         Yes         
i_map_5_1[3]       No     No          No          
i_map_5_1[4]       Yes    Yes         Yes         
i_map_5_1[5]       No     No          No          
i_map_5_1[15:6]    Yes    Yes         Yes         
o_weight_5_1[15:0] Yes    Yes         Yes         
o_map_5_1[2:0]     Yes    Yes         Yes         
o_map_5_1[3]       No     No          No          
o_map_5_1[4]       Yes    Yes         Yes         
o_map_5_1[5]       No     No          No          
o_map_5_1[15:6]    Yes    Yes         Yes         
o_result_5_1[15:0] Yes    Yes         Yes         
i_clear_5_2        Yes    Yes         Yes         
i_weight_5_2[15:0] Yes    Yes         Yes         
i_map_5_2[2:0]     Yes    Yes         Yes         
i_map_5_2[3]       No     No          No          
i_map_5_2[4]       Yes    Yes         Yes         
i_map_5_2[5]       No     No          No          
i_map_5_2[15:6]    Yes    Yes         Yes         
o_weight_5_2[15:0] Yes    Yes         Yes         
o_map_5_2[2:0]     Yes    Yes         Yes         
o_map_5_2[3]       No     No          No          
o_map_5_2[4]       Yes    Yes         Yes         
o_map_5_2[5]       No     No          No          
o_map_5_2[15:6]    Yes    Yes         Yes         
o_result_5_2[8:0]  Yes    Yes         Yes         
o_result_5_2[15:9] No     No          Yes         
i_clear_5_3        Yes    Yes         Yes         
i_weight_5_3[15:0] Yes    Yes         Yes         
i_map_5_3[2:0]     Yes    Yes         Yes         
i_map_5_3[3]       No     No          No          
i_map_5_3[4]       Yes    Yes         Yes         
i_map_5_3[5]       No     No          No          
i_map_5_3[15:6]    Yes    Yes         Yes         
o_weight_5_3[15:0] Yes    Yes         Yes         
o_map_5_3[2:0]     Yes    Yes         Yes         
o_map_5_3[3]       No     No          No          
o_map_5_3[4]       Yes    Yes         Yes         
o_map_5_3[5]       No     No          No          
o_map_5_3[15:6]    Yes    Yes         Yes         
o_result_5_3[15:0] Yes    Yes         Yes         
i_clear_5_4        Yes    Yes         Yes         
i_weight_5_4[15:0] Yes    Yes         Yes         
i_map_5_4[2:0]     Yes    Yes         Yes         
i_map_5_4[3]       No     No          No          
i_map_5_4[4]       Yes    Yes         Yes         
i_map_5_4[5]       No     No          No          
i_map_5_4[15:6]    Yes    Yes         Yes         
o_weight_5_4[15:0] Yes    Yes         Yes         
o_map_5_4[2:0]     Yes    Yes         Yes         
o_map_5_4[3]       No     No          No          
o_map_5_4[4]       Yes    Yes         Yes         
o_map_5_4[5]       No     No          No          
o_map_5_4[15:6]    Yes    Yes         Yes         
o_result_5_4[8:0]  Yes    Yes         Yes         
o_result_5_4[15:9] No     No          Yes         
i_clear_5_5        Yes    Yes         Yes         
i_weight_5_5[15:0] Yes    Yes         Yes         
i_map_5_5[2:0]     Yes    Yes         Yes         
i_map_5_5[3]       No     No          No          
i_map_5_5[4]       Yes    Yes         Yes         
i_map_5_5[5]       No     No          No          
i_map_5_5[15:6]    Yes    Yes         Yes         
o_weight_5_5[15:0] Yes    Yes         Yes         
o_map_5_5[2:0]     Yes    Yes         Yes         
o_map_5_5[3]       No     No          No          
o_map_5_5[4]       Yes    Yes         Yes         
o_map_5_5[5]       No     No          No          
o_map_5_5[15:6]    Yes    Yes         Yes         
o_result_5_5[8:0]  Yes    Yes         Yes         
o_result_5_5[15:9] No     No          Yes         
i_clear_5_6        Yes    Yes         Yes         
i_weight_5_6[15:0] Yes    Yes         Yes         
i_map_5_6[2:0]     Yes    Yes         Yes         
i_map_5_6[3]       No     No          No          
i_map_5_6[4]       Yes    Yes         Yes         
i_map_5_6[5]       No     No          No          
i_map_5_6[15:6]    Yes    Yes         Yes         
o_weight_5_6[15:0] Yes    Yes         Yes         
o_map_5_6[2:0]     Yes    Yes         Yes         
o_map_5_6[3]       No     No          No          
o_map_5_6[4]       Yes    Yes         Yes         
o_map_5_6[5]       No     No          No          
o_map_5_6[15:6]    Yes    Yes         Yes         
o_result_5_6[0]    No     No          Yes         
o_result_5_6[15:1] Yes    Yes         Yes         
i_clear_5_7        Yes    Yes         Yes         
i_weight_5_7[15:0] Yes    Yes         Yes         
i_map_5_7[2:0]     Yes    Yes         Yes         
i_map_5_7[3]       No     No          No          
i_map_5_7[4]       Yes    Yes         Yes         
i_map_5_7[5]       No     No          No          
i_map_5_7[15:6]    Yes    Yes         Yes         
o_weight_5_7[15:0] Yes    Yes         Yes         
o_map_5_7[2:0]     Yes    Yes         Yes         
o_map_5_7[3]       No     No          No          
o_map_5_7[4]       Yes    Yes         Yes         
o_map_5_7[5]       No     No          No          
o_map_5_7[15:6]    Yes    Yes         Yes         
o_result_5_7[15:0] Yes    Yes         Yes         
i_clear_6_0        Yes    Yes         Yes         
i_weight_6_0[15:0] Yes    Yes         Yes         
i_map_6_0[15:0]    Yes    Yes         Yes         
o_weight_6_0[15:0] Yes    Yes         Yes         
o_map_6_0[15:0]    Yes    Yes         Yes         
o_result_6_0[8:0]  Yes    Yes         Yes         
o_result_6_0[15:9] No     No          Yes         
i_clear_6_1        Yes    Yes         Yes         
i_weight_6_1[15:0] Yes    Yes         Yes         
i_map_6_1[15:0]    Yes    Yes         Yes         
o_weight_6_1[15:0] Yes    Yes         Yes         
o_map_6_1[15:0]    Yes    Yes         Yes         
o_result_6_1[8:0]  Yes    Yes         Yes         
o_result_6_1[15:9] No     No          Yes         
i_clear_6_2        Yes    Yes         Yes         
i_weight_6_2[15:0] Yes    Yes         Yes         
i_map_6_2[15:0]    Yes    Yes         Yes         
o_weight_6_2[15:0] Yes    Yes         Yes         
o_map_6_2[15:0]    Yes    Yes         Yes         
o_result_6_2[15:0] Yes    Yes         Yes         
i_clear_6_3        Yes    Yes         Yes         
i_weight_6_3[15:0] Yes    Yes         Yes         
i_map_6_3[15:0]    Yes    Yes         Yes         
o_weight_6_3[15:0] Yes    Yes         Yes         
o_map_6_3[15:0]    Yes    Yes         Yes         
o_result_6_3[15:0] Yes    Yes         Yes         
i_clear_6_4        Yes    Yes         Yes         
i_weight_6_4[15:0] Yes    Yes         Yes         
i_map_6_4[15:0]    Yes    Yes         Yes         
o_weight_6_4[15:0] Yes    Yes         Yes         
o_map_6_4[15:0]    Yes    Yes         Yes         
o_result_6_4[15:0] Yes    Yes         Yes         
i_clear_6_5        Yes    Yes         Yes         
i_weight_6_5[15:0] Yes    Yes         Yes         
i_map_6_5[15:0]    Yes    Yes         Yes         
o_weight_6_5[15:0] Yes    Yes         Yes         
o_map_6_5[15:0]    Yes    Yes         Yes         
o_result_6_5[8:0]  Yes    Yes         Yes         
o_result_6_5[15:9] No     No          Yes         
i_clear_6_6        Yes    Yes         Yes         
i_weight_6_6[15:0] Yes    Yes         Yes         
i_map_6_6[15:0]    Yes    Yes         Yes         
o_weight_6_6[15:0] Yes    Yes         Yes         
o_map_6_6[15:0]    Yes    Yes         Yes         
o_result_6_6[15:0] Yes    Yes         Yes         
i_clear_6_7        Yes    Yes         Yes         
i_weight_6_7[15:0] Yes    Yes         Yes         
i_map_6_7[15:0]    Yes    Yes         Yes         
o_weight_6_7[15:0] Yes    Yes         Yes         
o_map_6_7[15:0]    Yes    Yes         Yes         
o_result_6_7[0]    No     No          Yes         
o_result_6_7[3:1]  Yes    Yes         Yes         
o_result_6_7[4]    No     No          Yes         
o_result_6_7[5]    Yes    Yes         Yes         
o_result_6_7[6]    No     No          Yes         
o_result_6_7[15:7] Yes    Yes         Yes         
i_clear_7_0        Yes    Yes         Yes         
i_weight_7_0[15:0] Yes    Yes         Yes         
i_map_7_0[0]       No     No          Yes         
i_map_7_0[4:1]     Yes    Yes         Yes         
i_map_7_0[5]       No     No          Yes         
i_map_7_0[7:6]     Yes    Yes         Yes         
i_map_7_0[15:8]    No     No          Yes         
o_weight_7_0[15:0] Yes    Yes         Yes         
o_map_7_0[15:0]    Yes    Yes         Yes         
o_result_7_0[6:0]  Yes    Yes         Yes         
o_result_7_0[15:7] No     No          Yes         
i_clear_7_1        Yes    Yes         Yes         
i_weight_7_1[15:0] Yes    Yes         Yes         
i_map_7_1[15:0]    Yes    Yes         Yes         
o_weight_7_1[15:0] Yes    Yes         Yes         
o_map_7_1[15:0]    Yes    Yes         Yes         
o_result_7_1[8:0]  Yes    Yes         Yes         
o_result_7_1[15:9] No     No          Yes         
i_clear_7_2        Yes    Yes         Yes         
i_weight_7_2[15:0] Yes    Yes         Yes         
i_map_7_2[15:0]    Yes    Yes         Yes         
o_weight_7_2[15:0] Yes    Yes         Yes         
o_map_7_2[15:0]    Yes    Yes         Yes         
o_result_7_2[15:0] Yes    Yes         Yes         
i_clear_7_3        Yes    Yes         Yes         
i_weight_7_3[15:0] Yes    Yes         Yes         
i_map_7_3[15:0]    Yes    Yes         Yes         
o_weight_7_3[15:0] Yes    Yes         Yes         
o_map_7_3[15:0]    Yes    Yes         Yes         
o_result_7_3[7:0]  Yes    Yes         Yes         
o_result_7_3[15:8] No     No          Yes         
i_clear_7_4        Yes    Yes         Yes         
i_weight_7_4[15:0] Yes    Yes         Yes         
i_map_7_4[15:0]    Yes    Yes         Yes         
o_weight_7_4[15:0] Yes    Yes         Yes         
o_map_7_4[15:0]    Yes    Yes         Yes         
o_result_7_4[8:0]  Yes    Yes         Yes         
o_result_7_4[15:9] No     No          Yes         
i_clear_7_5        Yes    Yes         Yes         
i_weight_7_5[15:0] Yes    Yes         Yes         
i_map_7_5[15:0]    Yes    Yes         Yes         
o_weight_7_5[15:0] Yes    Yes         Yes         
o_map_7_5[15:0]    Yes    Yes         Yes         
o_result_7_5[8:0]  Yes    Yes         Yes         
o_result_7_5[15:9] No     No          Yes         
i_clear_7_6        Yes    Yes         Yes         
i_weight_7_6[15:0] Yes    Yes         Yes         
i_map_7_6[15:0]    Yes    Yes         Yes         
o_weight_7_6[15:0] Yes    Yes         Yes         
o_map_7_6[15:0]    Yes    Yes         Yes         
o_result_7_6[4:0]  Yes    Yes         Yes         
o_result_7_6[5]    No     No          Yes         
o_result_7_6[15:6] Yes    Yes         Yes         
i_clear_7_7        Yes    Yes         Yes         
i_weight_7_7[15:0] Yes    Yes         Yes         
i_map_7_7[15:0]    Yes    Yes         Yes         
o_weight_7_7[15:0] Yes    Yes         Yes         
o_map_7_7[15:0]    Yes    Yes         Yes         
o_result_7_7[7:0]  Yes    Yes         Yes         
o_result_7_7[15:8] No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Module : pe_array
         Line No. Total Covered Percent 
Branches          2     2       100.00  
IF       546      2     2       100.00  


546            if(~rst_n)
               -1-  
547            begin
548                i_clear_0 <= 1'b0;
                   ==>
549                i_clear_1 <= 1'b0;
550                i_clear_2 <= 1'b0;
551                i_clear_3 <= 1'b0;
552                i_clear_4 <= 1'b0;
553                i_clear_5 <= 1'b0;
554                i_clear_6 <= 1'b0;
555                i_clear_7 <= 1'b0;
556            end
557            else
558            begin
559                i_clear_0 <= i_pe_array_clear;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.31 100.00 --      88.94 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.32 100.00 --      88.97 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME  
 77.79 --     --      77.79 --     --     u_NPU 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME  
 99.31 100.00 --      97.92 --     100.00 pe0_0 
 96.39 100.00 --      89.17 --     100.00 pe0_1 
 92.64 100.00 --      77.92 --     100.00 pe0_2 
 99.44 100.00 --      98.33 --     100.00 pe0_3 
 99.31 100.00 --      97.92 --     100.00 pe0_4 
 95.83 100.00 --      87.50 --     100.00 pe0_5 
 99.17 100.00 --      97.50 --     100.00 pe0_6 
 99.44 100.00 --      98.33 --     100.00 pe0_7 
 92.50 100.00 --      77.50 --     100.00 pe1_0 
 93.33 100.00 --      80.00 --     100.00 pe1_1 
 96.39 100.00 --      89.17 --     100.00 pe1_2 
 96.11 100.00 --      88.33 --     100.00 pe1_3 
 92.50 100.00 --      77.50 --     100.00 pe1_4 
 99.44 100.00 --      98.33 --     100.00 pe1_5 
 99.03 100.00 --      97.08 --     100.00 pe1_6 
 99.17 100.00 --      97.50 --     100.00 pe1_7 
 94.31 100.00 --      82.92 --     100.00 pe2_0 
 94.31 100.00 --      82.92 --     100.00 pe2_1 
 90.42 100.00 --      71.25 --     100.00 pe2_2 
 93.89 100.00 --      81.67 --     100.00 pe2_3 
 94.03 100.00 --      82.08 --     100.00 pe2_4 
 94.31 100.00 --      82.92 --     100.00 pe2_5 
 93.61 100.00 --      80.83 --     100.00 pe2_6 
 94.03 100.00 --      82.08 --     100.00 pe2_7 
 94.72 100.00 --      84.17 --     100.00 pe3_0 
 94.72 100.00 --      84.17 --     100.00 pe3_1 
 91.11 100.00 --      73.33 --     100.00 pe3_2 
 97.92 100.00 --      93.75 --     100.00 pe3_3 
 94.03 100.00 --      82.08 --     100.00 pe3_4 
 94.72 100.00 --      84.17 --     100.00 pe3_5 
 97.78 100.00 --      93.33 --     100.00 pe3_6 
 98.19 100.00 --      94.58 --     100.00 pe3_7 
 95.42 100.00 --      86.25 --     100.00 pe4_0 
 95.42 100.00 --      86.25 --     100.00 pe4_1 
 91.81 100.00 --      75.42 --     100.00 pe4_2 
 95.56 100.00 --      86.67 --     100.00 pe4_3 
 95.42 100.00 --      86.25 --     100.00 pe4_4 
 94.72 100.00 --      84.17 --     100.00 pe4_5 
 95.42 100.00 --      86.25 --     100.00 pe4_6 
 95.56 100.00 --      86.67 --     100.00 pe4_7 
 95.83 100.00 --      87.50 --     100.00 pe5_0 
 98.89 100.00 --      96.67 --     100.00 pe5_1 
 95.83 100.00 --      87.50 --     100.00 pe5_2 
 98.75 100.00 --      96.25 --     100.00 pe5_3 
 95.83 100.00 --      87.50 --     100.00 pe5_4 
 95.69 100.00 --      87.08 --     100.00 pe5_5 
 98.47 100.00 --      95.42 --     100.00 pe5_6 
 98.75 100.00 --      96.25 --     100.00 pe5_7 
 96.94 100.00 --      90.83 --     100.00 pe6_0 
 96.94 100.00 --      90.83 --     100.00 pe6_1 
100.00 100.00 --     100.00 --     100.00 pe6_2 
100.00 100.00 --     100.00 --     100.00 pe6_3 
100.00 100.00 --     100.00 --     100.00 pe6_4 
 96.94 100.00 --      90.83 --     100.00 pe6_5 
100.00 100.00 --     100.00 --     100.00 pe6_6 
 99.17 100.00 --      97.50 --     100.00 pe6_7 
 95.00 100.00 --      85.00 --     100.00 pe7_0 
 96.94 100.00 --      90.83 --     100.00 pe7_1 
100.00 100.00 --     100.00 --     100.00 pe7_2 
 96.67 100.00 --      90.00 --     100.00 pe7_3 
 96.94 100.00 --      90.83 --     100.00 pe7_4 
 96.94 100.00 --      90.83 --     100.00 pe7_5 
 99.72 100.00 --      99.17 --     100.00 pe7_6 
 93.33 100.00 --      80.00 --     100.00 pe7_7 



-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : pe_interface
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.99 --     --      96.99 --     --     

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/tb/tb/npu_interface.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME          
 96.99 --     --      96.99 --     --     npu_tb.pe_vif 



-------------------------------------------------------------------------------
Toggle Coverage for Module : pe_interface
                Total Covered Percent 
Totals          8     6       75.00   
Total Bits      166   161     96.99   
Total Bits 0->1 83    80      96.39   
Total Bits 1->0 83    81      97.59   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          6   4   66.67  
Signal Bits      162 157 96.91  
Signal Bits 0->1 81  78  96.30  
Signal Bits 1->0 81  79  97.53  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
               Toggle Toggle 1->0 Toggle 0->1 
i_clear        Yes    Yes         Yes         
i_weight[15:0] Yes    Yes         Yes         
i_map[1:0]     Yes    Yes         Yes         
i_map[2]       No     Yes         No          
i_map[6:3]     Yes    Yes         Yes         
i_map[7]       No     No          No          
i_map[15:8]    Yes    Yes         Yes         
o_weight[15:0] Yes    Yes         Yes         
o_map[6:0]     Yes    Yes         Yes         
o_map[7]       No     No          No          
o_map[15:8]    Yes    Yes         Yes         
o_result[15:0] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.pe_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.99 --     --      96.99 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.99 --     --      96.99 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME         
 96.99 --     --      96.99 --     --     pe_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : pe_control_weight
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.76 --     --      98.76 --     --     

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/rtl/pe_control_weight.v

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                           
 98.76 --     --      98.76 --     --     npu_tb.u_NPU.pe_control_weight 



-------------------------------------------------------------------------------
Toggle Coverage for Module : pe_control_weight
                Total Covered Percent 
Totals          71    64      90.14   
Total Bits      1292  1276    98.76   
Total Bits 0->1 646   638     98.76   
Total Bits 1->0 646   638     98.76   

                              
Ports          15  15  100.00 
Port Bits      332 332 100.00 
Port Bits 0->1 166 166 100.00 
Port Bits 1->0 166 166 100.00 

                                
Signals          56  49  87.50  
Signal Bits      960 944 98.33  
Signal Bits 0->1 480 472 98.33  
Signal Bits 1->0 480 472 98.33  

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
wr_sop          Yes    Yes         Yes         INPUT     
wr_eop          Yes    Yes         Yes         INPUT     
wr_vld          Yes    Yes         Yes         INPUT     
wr_data[31:0]   Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
pe_data_0[15:0] Yes    Yes         Yes         OUTPUT    
pe_data_1[15:0] Yes    Yes         Yes         OUTPUT    
pe_data_2[15:0] Yes    Yes         Yes         OUTPUT    
pe_data_3[15:0] Yes    Yes         Yes         OUTPUT    
pe_data_4[15:0] Yes    Yes         Yes         OUTPUT    
pe_data_5[15:0] Yes    Yes         Yes         OUTPUT    
pe_data_6[15:0] Yes    Yes         Yes         OUTPUT    
pe_data_7[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
                    Toggle Toggle 1->0 Toggle 0->1 
ram0_wr_en          Yes    Yes         Yes         
ram0_wr_strb[1:0]   Yes    Yes         Yes         
ram0_wr_addr[0]     No     No          No          
ram0_wr_addr[3:1]   Yes    Yes         Yes         
ram0_wr_data[31:0]  Yes    Yes         Yes         
ram1_wr_en          Yes    Yes         Yes         
ram1_wr_strb[1:0]   Yes    Yes         Yes         
ram1_wr_addr[3:0]   Yes    Yes         Yes         
ram1_wr_data[31:0]  Yes    Yes         Yes         
ram2_wr_en          Yes    Yes         Yes         
ram2_wr_strb[1:0]   Yes    Yes         Yes         
ram2_wr_addr[0]     No     No          No          
ram2_wr_addr[3:1]   Yes    Yes         Yes         
ram2_wr_data[31:0]  Yes    Yes         Yes         
ram3_wr_en          Yes    Yes         Yes         
ram3_wr_strb[1:0]   Yes    Yes         Yes         
ram3_wr_addr[3:0]   Yes    Yes         Yes         
ram3_wr_data[17:0]  Yes    Yes         Yes         
ram3_wr_data[18]    No     No          No          
ram3_wr_data[20:19] Yes    Yes         Yes         
ram3_wr_data[21]    No     No          No          
ram3_wr_data[31:22] Yes    Yes         Yes         
ram4_wr_en          Yes    Yes         Yes         
ram4_wr_strb[1:0]   Yes    Yes         Yes         
ram4_wr_addr[0]     No     No          No          
ram4_wr_addr[3:1]   Yes    Yes         Yes         
ram4_wr_data[0]     No     No          No          
ram4_wr_data[31:1]  Yes    Yes         Yes         
ram5_wr_en          Yes    Yes         Yes         
ram5_wr_strb[1:0]   Yes    Yes         Yes         
ram5_wr_addr[3:0]   Yes    Yes         Yes         
ram5_wr_data[31:0]  Yes    Yes         Yes         
ram6_wr_en          Yes    Yes         Yes         
ram6_wr_strb[1:0]   Yes    Yes         Yes         
ram6_wr_addr[0]     No     No          No          
ram6_wr_addr[3:1]   Yes    Yes         Yes         
ram6_wr_data[31:0]  Yes    Yes         Yes         
ram7_wr_en          Yes    Yes         Yes         
ram7_wr_strb[1:0]   Yes    Yes         Yes         
ram7_wr_addr[3:0]   Yes    Yes         Yes         
ram7_wr_data[1:0]   Yes    Yes         Yes         
ram7_wr_data[2]     No     No          No          
ram7_wr_data[31:3]  Yes    Yes         Yes         
ram0_rd_en          Yes    Yes         Yes         
ram0_rd_addr[3:0]   Yes    Yes         Yes         
ram0_rd_data[15:0]  Yes    Yes         Yes         
ram1_rd_en          Yes    Yes         Yes         
ram1_rd_addr[3:0]   Yes    Yes         Yes         
ram1_rd_data[15:0]  Yes    Yes         Yes         
ram2_rd_en          Yes    Yes         Yes         
ram2_rd_addr[3:0]   Yes    Yes         Yes         
ram2_rd_data[15:0]  Yes    Yes         Yes         
ram3_rd_en          Yes    Yes         Yes         
ram3_rd_addr[3:0]   Yes    Yes         Yes         
ram3_rd_data[15:0]  Yes    Yes         Yes         
ram4_rd_en          Yes    Yes         Yes         
ram4_rd_addr[3:0]   Yes    Yes         Yes         
ram4_rd_data[15:0]  Yes    Yes         Yes         
ram5_rd_en          Yes    Yes         Yes         
ram5_rd_addr[3:0]   Yes    Yes         Yes         
ram5_rd_data[15:0]  Yes    Yes         Yes         
ram6_rd_en          Yes    Yes         Yes         
ram6_rd_addr[3:0]   Yes    Yes         Yes         
ram6_rd_data[15:0]  Yes    Yes         Yes         
ram7_rd_en          Yes    Yes         Yes         
ram7_rd_addr[3:0]   Yes    Yes         Yes         
ram7_rd_data[15:0]  Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.76 --     --      98.76 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 88.24  97.62  63.64  96.45 --      95.24 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME  
 77.79 --     --      77.79 --     --     u_NPU 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME             
 88.56  92.31 --      98.39 --      75.00 dual_port_ram_0  
 89.10  92.31 --     100.00 --      75.00 dual_port_ram_1  
 88.56  92.31 --      98.39 --      75.00 dual_port_ram_2  
 88.03  92.31 --      96.77 --      75.00 dual_port_ram_3  
 88.03  92.31 --      96.77 --      75.00 dual_port_ram_4  
 89.10  92.31 --     100.00 --      75.00 dual_port_ram_5  
 88.56  92.31 --      98.39 --      75.00 dual_port_ram_6  
 88.56  92.31 --      98.39 --      75.00 dual_port_ram_7  
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control_0 
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control_1 
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control_2 
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control_3 
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control_4 
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control_5 
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control_6 
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control_7 
 87.35 100.00  60.00  89.38 --     100.00 ram_wr_control_0 
 88.23 100.00  60.00  92.92 --     100.00 ram_wr_control_1 
 87.57 100.00  60.00  90.27 --     100.00 ram_wr_control_2 
 88.01 100.00  60.00  92.04 --     100.00 ram_wr_control_3 
 87.79 100.00  60.00  91.15 --     100.00 ram_wr_control_4 
 88.67 100.00  60.00  94.69 --     100.00 ram_wr_control_5 
 88.45 100.00  60.00  93.81 --     100.00 ram_wr_control_6 
 88.89 100.00  60.00  95.58 --     100.00 ram_wr_control_7 



-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : ram_rd_control
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/rtl/ram_rd_control.v

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                                            
 87.50 100.00 100.00  50.00 --     100.00 npu_tb.u_NPU.pe_control_data.ram_rd_control_2   
 90.00 100.00 100.00  60.00 --     100.00 npu_tb.u_NPU.pe_control_data.ram_rd_control_4   
 93.75 100.00 100.00  75.00 --     100.00 npu_tb.u_NPU.pe_control_data.ram_rd_control_7   
 96.25 100.00 100.00  85.00 --     100.00 npu_tb.u_NPU.pe_control_data.ram_rd_control_3   
 97.50 100.00 100.00  90.00 --     100.00 npu_tb.u_NPU.pe_control_data.ram_rd_control_5   
 98.12 100.00 100.00  92.50 --     100.00 npu_tb.u_NPU.pe_control_data.ram_rd_control_0   
 98.75 100.00 100.00  95.00 --     100.00 npu_tb.u_NPU.pe_control_data.ram_rd_control_1   
100.00 100.00 100.00 100.00 --     100.00 npu_tb.u_NPU.pe_control_data.ram_rd_control_6   
100.00 100.00 100.00 100.00 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_rd_control_0 
100.00 100.00 100.00 100.00 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_rd_control_1 
100.00 100.00 100.00 100.00 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_rd_control_2 
100.00 100.00 100.00 100.00 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_rd_control_3 
100.00 100.00 100.00 100.00 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_rd_control_4 
100.00 100.00 100.00 100.00 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_rd_control_5 
100.00 100.00 100.00 100.00 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_rd_control_6 
100.00 100.00 100.00 100.00 --     100.00 npu_tb.u_NPU.pe_control_weight.ram_rd_control_7 



-------------------------------------------------------------------------------
Line Coverage for Module : ram_rd_control

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Module : ram_rd_control

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Module : ram_rd_control
                Total Covered Percent 
Totals          7     7       100.00  
Total Bits      80    80      100.00  
Total Bits 0->1 40    40      100.00  
Total Bits 1->0 40    40      100.00  

                            
Ports          7  7  100.00 
Port Bits      80 80 100.00 
Port Bits 0->1 40 40 100.00 
Port Bits 1->0 40 40 100.00 

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[15:0] Yes    Yes         Yes         INPUT     
pe_data[15:0]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Module : ram_rd_control
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 87.50 100.00 100.00  50.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 87.50 100.00 100.00  50.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_2

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_2

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_2
                Total Covered Percent 
Totals          7     5       71.43   
Total Bits      80    40      50.00   
Total Bits 0->1 40    20      50.00   
Total Bits 1->0 40    20      50.00   

                            
Ports          7  5  71.43  
Port Bits      80 40 50.00  
Port Bits 0->1 40 20 50.00  
Port Bits 1->0 40 20 50.00  

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[0]    Yes    Yes         Yes         INPUT     
ram_rdata[1]    No     No          No          INPUT     
ram_rdata[6:2]  Yes    Yes         Yes         INPUT     
ram_rdata[15:7] No     No          No          INPUT     
pe_data[0]      Yes    Yes         Yes         OUTPUT    
pe_data[1]      No     No          No          OUTPUT    
pe_data[6:2]    Yes    Yes         Yes         OUTPUT    
pe_data[15:7]   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_2
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 90.00 100.00 100.00  60.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 90.00 100.00 100.00  60.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_4

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_4

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_4
                Total Covered Percent 
Totals          7     5       71.43   
Total Bits      80    48      60.00   
Total Bits 0->1 40    24      60.00   
Total Bits 1->0 40    24      60.00   

                            
Ports          7  5  71.43  
Port Bits      80 48 60.00  
Port Bits 0->1 40 24 60.00  
Port Bits 1->0 40 24 60.00  

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[7:0]  Yes    Yes         Yes         INPUT     
ram_rdata[15:8] No     No          No          INPUT     
pe_data[7:0]    Yes    Yes         Yes         OUTPUT    
pe_data[15:8]   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_4
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.75 100.00 100.00  75.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.75 100.00 100.00  75.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_7

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_7

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_7
                Total Covered Percent 
Totals          7     5       71.43   
Total Bits      80    60      75.00   
Total Bits 0->1 40    40      100.00  
Total Bits 1->0 40    20      50.00   

                            
Ports          7  5  71.43  
Port Bits      80 60 75.00  
Port Bits 0->1 40 40 100.00 
Port Bits 1->0 40 20 50.00  

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[0]    No     No          Yes         INPUT     
ram_rdata[4:1]  Yes    Yes         Yes         INPUT     
ram_rdata[5]    No     No          Yes         INPUT     
ram_rdata[7:6]  Yes    Yes         Yes         INPUT     
ram_rdata[15:8] No     No          Yes         INPUT     
pe_data[0]      No     No          Yes         OUTPUT    
pe_data[4:1]    Yes    Yes         Yes         OUTPUT    
pe_data[5]      No     No          Yes         OUTPUT    
pe_data[7:6]    Yes    Yes         Yes         OUTPUT    
pe_data[15:8]   No     No          Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_7
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.25 100.00 100.00  85.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.25 100.00 100.00  85.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_3

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_3

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_3
                Total Covered Percent 
Totals          7     5       71.43   
Total Bits      80    68      85.00   
Total Bits 0->1 40    34      85.00   
Total Bits 1->0 40    34      85.00   

                            
Ports          7  5  71.43  
Port Bits      80 68 85.00  
Port Bits 0->1 40 34 85.00  
Port Bits 1->0 40 34 85.00  

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[1:0]  Yes    Yes         Yes         INPUT     
ram_rdata[2]    No     No          No          INPUT     
ram_rdata[3]    Yes    Yes         Yes         INPUT     
ram_rdata[4]    No     No          No          INPUT     
ram_rdata[5]    Yes    Yes         Yes         INPUT     
ram_rdata[6]    No     No          No          INPUT     
ram_rdata[15:7] Yes    Yes         Yes         INPUT     
pe_data[1:0]    Yes    Yes         Yes         OUTPUT    
pe_data[2]      No     No          No          OUTPUT    
pe_data[3]      Yes    Yes         Yes         OUTPUT    
pe_data[4]      No     No          No          OUTPUT    
pe_data[5]      Yes    Yes         Yes         OUTPUT    
pe_data[6]      No     No          No          OUTPUT    
pe_data[15:7]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_3
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 97.50 100.00 100.00  90.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 97.50 100.00 100.00  90.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_5

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_5

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_5
                Total Covered Percent 
Totals          7     5       71.43   
Total Bits      80    72      90.00   
Total Bits 0->1 40    36      90.00   
Total Bits 1->0 40    36      90.00   

                            
Ports          7  5  71.43  
Port Bits      80 72 90.00  
Port Bits 0->1 40 36 90.00  
Port Bits 1->0 40 36 90.00  

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[2:0]  Yes    Yes         Yes         INPUT     
ram_rdata[3]    No     No          No          INPUT     
ram_rdata[4]    Yes    Yes         Yes         INPUT     
ram_rdata[5]    No     No          No          INPUT     
ram_rdata[15:6] Yes    Yes         Yes         INPUT     
pe_data[2:0]    Yes    Yes         Yes         OUTPUT    
pe_data[3]      No     No          No          OUTPUT    
pe_data[4]      Yes    Yes         Yes         OUTPUT    
pe_data[5]      No     No          No          OUTPUT    
pe_data[15:6]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_5
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.12 100.00 100.00  92.50 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.12 100.00 100.00  92.50 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_0

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_0

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_0
                Total Covered Percent 
Totals          7     5       71.43   
Total Bits      80    74      92.50   
Total Bits 0->1 40    36      90.00   
Total Bits 1->0 40    38      95.00   

                            
Ports          7  5  71.43  
Port Bits      80 74 92.50  
Port Bits 0->1 40 36 90.00  
Port Bits 1->0 40 38 95.00  

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[1:0]  Yes    Yes         Yes         INPUT     
ram_rdata[2]    No     Yes         No          INPUT     
ram_rdata[6:3]  Yes    Yes         Yes         INPUT     
ram_rdata[7]    No     No          No          INPUT     
ram_rdata[15:8] Yes    Yes         Yes         INPUT     
pe_data[1:0]    Yes    Yes         Yes         OUTPUT    
pe_data[2]      No     Yes         No          OUTPUT    
pe_data[6:3]    Yes    Yes         Yes         OUTPUT    
pe_data[7]      No     No          No          OUTPUT    
pe_data[15:8]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_0
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.75 100.00 100.00  95.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.75 100.00 100.00  95.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_1

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_1

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_1
                Total Covered Percent 
Totals          7     5       71.43   
Total Bits      80    76      95.00   
Total Bits 0->1 40    38      95.00   
Total Bits 1->0 40    38      95.00   

                            
Ports          7  5  71.43  
Port Bits      80 76 95.00  
Port Bits 0->1 40 38 95.00  
Port Bits 1->0 40 38 95.00  

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[0]    Yes    Yes         Yes         INPUT     
ram_rdata[1]    No     No          No          INPUT     
ram_rdata[15:2] Yes    Yes         Yes         INPUT     
pe_data[0]      Yes    Yes         Yes         OUTPUT    
pe_data[1]      No     No          No          OUTPUT    
pe_data[15:2]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_1
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
 78.33 --     --      78.33 --     --     pe_control_data 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_6

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_6

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_6
                Total Covered Percent 
Totals          7     7       100.00  
Total Bits      80    80      100.00  
Total Bits 0->1 40    40      100.00  
Total Bits 1->0 40    40      100.00  

                            
Ports          7  7  100.00 
Port Bits      80 80 100.00 
Port Bits 0->1 40 40 100.00 
Port Bits 1->0 40 40 100.00 

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[15:0] Yes    Yes         Yes         INPUT     
pe_data[15:0]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_data.ram_rd_control_6
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_0

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_0

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_0
                Total Covered Percent 
Totals          7     7       100.00  
Total Bits      80    80      100.00  
Total Bits 0->1 40    40      100.00  
Total Bits 1->0 40    40      100.00  

                            
Ports          7  7  100.00 
Port Bits      80 80 100.00 
Port Bits 0->1 40 40 100.00 
Port Bits 1->0 40 40 100.00 

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[15:0] Yes    Yes         Yes         INPUT     
pe_data[15:0]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_0
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_1

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_1

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_1
                Total Covered Percent 
Totals          7     7       100.00  
Total Bits      80    80      100.00  
Total Bits 0->1 40    40      100.00  
Total Bits 1->0 40    40      100.00  

                            
Ports          7  7  100.00 
Port Bits      80 80 100.00 
Port Bits 0->1 40 40 100.00 
Port Bits 1->0 40 40 100.00 

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[15:0] Yes    Yes         Yes         INPUT     
pe_data[15:0]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_1
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_2

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_2

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_2
                Total Covered Percent 
Totals          7     7       100.00  
Total Bits      80    80      100.00  
Total Bits 0->1 40    40      100.00  
Total Bits 1->0 40    40      100.00  

                            
Ports          7  7  100.00 
Port Bits      80 80 100.00 
Port Bits 0->1 40 40 100.00 
Port Bits 1->0 40 40 100.00 

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[15:0] Yes    Yes         Yes         INPUT     
pe_data[15:0]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_2
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_3

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_3

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_3
                Total Covered Percent 
Totals          7     7       100.00  
Total Bits      80    80      100.00  
Total Bits 0->1 40    40      100.00  
Total Bits 1->0 40    40      100.00  

                            
Ports          7  7  100.00 
Port Bits      80 80 100.00 
Port Bits 0->1 40 40 100.00 
Port Bits 1->0 40 40 100.00 

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[15:0] Yes    Yes         Yes         INPUT     
pe_data[15:0]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_3
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_4

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_4

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_4
                Total Covered Percent 
Totals          7     7       100.00  
Total Bits      80    80      100.00  
Total Bits 0->1 40    40      100.00  
Total Bits 1->0 40    40      100.00  

                            
Ports          7  7  100.00 
Port Bits      80 80 100.00 
Port Bits 0->1 40 40 100.00 
Port Bits 1->0 40 40 100.00 

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[15:0] Yes    Yes         Yes         INPUT     
pe_data[15:0]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_4
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_5

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_5

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_5
                Total Covered Percent 
Totals          7     7       100.00  
Total Bits      80    80      100.00  
Total Bits 0->1 40    40      100.00  
Total Bits 1->0 40    40      100.00  

                            
Ports          7  7  100.00 
Port Bits      80 80 100.00 
Port Bits 0->1 40 40 100.00 
Port Bits 1->0 40 40 100.00 

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[15:0] Yes    Yes         Yes         INPUT     
pe_data[15:0]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_5
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_6

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_6

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_6
                Total Covered Percent 
Totals          7     7       100.00  
Total Bits      80    80      100.00  
Total Bits 0->1 40    40      100.00  
Total Bits 1->0 40    40      100.00  

                            
Ports          7  7  100.00 
Port Bits      80 80 100.00 
Port Bits 0->1 40 40 100.00 
Port Bits 1->0 40 40 100.00 

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[15:0] Yes    Yes         Yes         INPUT     
pe_data[15:0]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_6
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 100.00 100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 100.00 100.00 100.00 --     100.00 ram_rd_control 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
 98.76 --     --      98.76 --     --     pe_control_weight 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_7

             Line No.   Total   Covered  Percent
TOTAL                       12       12   100.00
ALWAYS             39        5        5   100.00
ALWAYS             48        7        7   100.00

38                      always@(posedge clk or negedge rst_n)begin
39         1/1              if(~rst_n)
40         1/1                  ram_rd_en <= 1'b0;
41         1/1              else if(ram_raddr == 4'd15 || rd_sop)
42         1/1                  ram_rd_en <= ~ram_rd_en;
43                          else
44         1/1                  ram_rd_en <= ram_rd_en;
45                      end
46                      
47                      always@(posedge clk or negedge rst_n)begin
48         1/1              if(~rst_n)
49         1/1                  ram_raddr <= 4'd0;
50         1/1              else if(rd_sop)
51         1/1                  ram_raddr <= 4'd0;
52         1/1              else if(ram_rd_en)
53         1/1                  ram_raddr <= ram_raddr + 1'b1;
54                          else
55         1/1                  ram_raddr <= ram_raddr;

-------------------------------------------------------------------------------
Cond Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_7

               Total   Covered  Percent
Conditions          3        3   100.00
Logical             3        3   100.00
Non-Logical         0        0
Event               0        0

 LINE       41
 EXPRESSION ((ram_raddr == 4'd15) || rd_sop)
             ----------1---------    ---2--

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_7
                Total Covered Percent 
Totals          7     7       100.00  
Total Bits      80    80      100.00  
Total Bits 0->1 40    40      100.00  
Total Bits 1->0 40    40      100.00  

                            
Ports          7  7  100.00 
Port Bits      80 80 100.00 
Port Bits 0->1 40 40 100.00 
Port Bits 1->0 40 40 100.00 

Port Details
                Toggle Toggle 1->0 Toggle 0->1 Direction 
clk             Yes    Yes         Yes         INPUT     
rst_n           Yes    Yes         Yes         INPUT     
rd_sop          Yes    Yes         Yes         INPUT     
ram_rd_en       Yes    Yes         Yes         OUTPUT    
ram_raddr[3:0]  Yes    Yes         Yes         OUTPUT    
ram_rdata[15:0] Yes    Yes         Yes         INPUT     
pe_data[15:0]   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_control_weight.ram_rd_control_7
         Line No. Total Covered Percent 
Branches          7     7       100.00  
IF       39       3     3       100.00  
IF       48       4     4       100.00  


39             if(~rst_n)
               -1-  
40                 ram_rd_en <= 1'b0;
                   ==>
41             else if(ram_raddr == 4'd15 || rd_sop)
                    -2-  
42                 ram_rd_en <= ~ram_rd_en;
                   ==>
43             else
44                 ram_rd_en <= ram_rd_en;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


48             if(~rst_n)
               -1-  
49                 ram_raddr <= 4'd0;
                   ==>
50             else if(rd_sop)
                    -2-  
51                 ram_raddr <= 4'd0;
                   ==>
52             else if(ram_rd_en)
                    -3-  
53                 ram_raddr <= ram_raddr + 1'b1;
                   ==>
54             else
55                 ram_raddr <= ram_raddr;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


===============================================================================
Module : ram_wr_control_data_interface
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/tb/tb/npu_interface.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                 
 80.26 --     --      80.26 --     --     npu_tb.ram3_data_vif 
 80.26 --     --      80.26 --     --     npu_tb.ram5_data_vif 
 81.58 --     --      81.58 --     --     npu_tb.ram1_data_vif 
 81.58 --     --      81.58 --     --     npu_tb.ram2_data_vif 
 82.89 --     --      82.89 --     --     npu_tb.ram4_data_vif 
 94.74 --     --      94.74 --     --     npu_tb.ram7_data_vif 
 96.05 --     --      96.05 --     --     npu_tb.ram0_data_vif 
 98.68 --     --      98.68 --     --     npu_tb.ram6_data_vif 



-------------------------------------------------------------------------------
Toggle Coverage for Module : ram_wr_control_data_interface
                Total Covered Percent 
Totals          10    10      100.00  
Total Bits      152   152     100.00  
Total Bits 0->1 76    76      100.00  
Total Bits 1->0 76    76      100.00  

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   8   100.00 
Signal Bits      148 148 100.00 
Signal Bits 0->1 74  74  100.00 
Signal Bits 1->0 74  74  100.00 

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
wr_sop            Yes    Yes         Yes         
wr_eop            Yes    Yes         Yes         
wr_vld            Yes    Yes         Yes         
wr_data[31:0]     Yes    Yes         Yes         
ram_wr_en         Yes    Yes         Yes         
ram_wr_strb[1:0]  Yes    Yes         Yes         
ram_wr_addr[3:0]  Yes    Yes         Yes         
ram_wr_data[31:0] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram3_data_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 80.26 --     --      80.26 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 80.26 --     --      80.26 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                          
100.00 --     --     100.00 --     --     ram_wr_control_data_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram3_data_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   122     80.26   
Total Bits 0->1 76    61      80.26   
Total Bits 1->0 76    61      80.26   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 118 79.73  
Signal Bits 0->1 74  59  79.73  
Signal Bits 1->0 74  59  79.73  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                   Toggle Toggle 1->0 Toggle 0->1 
wr_sop             Yes    Yes         Yes         
wr_eop             Yes    Yes         Yes         
wr_vld             Yes    Yes         Yes         
wr_data[31:0]      Yes    Yes         Yes         
ram_wr_en          Yes    Yes         Yes         
ram_wr_strb[1:0]   Yes    Yes         Yes         
ram_wr_addr[3:0]   Yes    Yes         Yes         
ram_wr_data[0]     No     No          No          
ram_wr_data[1]     Yes    Yes         Yes         
ram_wr_data[4:2]   No     No          No          
ram_wr_data[5]     Yes    Yes         Yes         
ram_wr_data[15:6]  No     No          No          
ram_wr_data[21:16] Yes    Yes         Yes         
ram_wr_data[22]    No     No          No          
ram_wr_data[31:23] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram5_data_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 80.26 --     --      80.26 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 80.26 --     --      80.26 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                          
100.00 --     --     100.00 --     --     ram_wr_control_data_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram5_data_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   122     80.26   
Total Bits 0->1 76    61      80.26   
Total Bits 1->0 76    61      80.26   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 118 79.73  
Signal Bits 0->1 74  59  79.73  
Signal Bits 1->0 74  59  79.73  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                   Toggle Toggle 1->0 Toggle 0->1 
wr_sop             Yes    Yes         Yes         
wr_eop             Yes    Yes         Yes         
wr_vld             Yes    Yes         Yes         
wr_data[31:0]      Yes    Yes         Yes         
ram_wr_en          Yes    Yes         Yes         
ram_wr_strb[1:0]   Yes    Yes         Yes         
ram_wr_addr[3:0]   Yes    Yes         Yes         
ram_wr_data[2:0]   Yes    Yes         Yes         
ram_wr_data[3]     No     No          No          
ram_wr_data[4]     Yes    Yes         Yes         
ram_wr_data[5]     No     No          No          
ram_wr_data[7:6]   Yes    Yes         Yes         
ram_wr_data[16:8]  No     No          No          
ram_wr_data[17]    Yes    Yes         Yes         
ram_wr_data[19:18] No     No          No          
ram_wr_data[20]    Yes    Yes         Yes         
ram_wr_data[22:21] No     No          No          
ram_wr_data[31:23] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram1_data_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.58 --     --      81.58 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.58 --     --      81.58 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                          
100.00 --     --     100.00 --     --     ram_wr_control_data_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram1_data_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   124     81.58   
Total Bits 0->1 76    62      81.58   
Total Bits 1->0 76    62      81.58   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 120 81.08  
Signal Bits 0->1 74  60  81.08  
Signal Bits 1->0 74  60  81.08  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                   Toggle Toggle 1->0 Toggle 0->1 
wr_sop             Yes    Yes         Yes         
wr_eop             Yes    Yes         Yes         
wr_vld             Yes    Yes         Yes         
wr_data[31:0]      Yes    Yes         Yes         
ram_wr_en          Yes    Yes         Yes         
ram_wr_strb[1:0]   Yes    Yes         Yes         
ram_wr_addr[3:0]   Yes    Yes         Yes         
ram_wr_data[0]     Yes    Yes         Yes         
ram_wr_data[1]     No     No          No          
ram_wr_data[5:2]   Yes    Yes         Yes         
ram_wr_data[7:6]   No     No          No          
ram_wr_data[15:8]  Yes    Yes         Yes         
ram_wr_data[18:16] No     No          No          
ram_wr_data[23:19] Yes    Yes         Yes         
ram_wr_data[31:24] No     No          No          


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram2_data_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.58 --     --      81.58 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.58 --     --      81.58 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                          
100.00 --     --     100.00 --     --     ram_wr_control_data_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram2_data_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   124     81.58   
Total Bits 0->1 76    62      81.58   
Total Bits 1->0 76    62      81.58   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 120 81.08  
Signal Bits 0->1 74  60  81.08  
Signal Bits 1->0 74  60  81.08  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                   Toggle Toggle 1->0 Toggle 0->1 
wr_sop             Yes    Yes         Yes         
wr_eop             Yes    Yes         Yes         
wr_vld             Yes    Yes         Yes         
wr_data[31:0]      Yes    Yes         Yes         
ram_wr_en          Yes    Yes         Yes         
ram_wr_strb[1:0]   Yes    Yes         Yes         
ram_wr_addr[3:0]   Yes    Yes         Yes         
ram_wr_data[0]     Yes    Yes         Yes         
ram_wr_data[1]     No     No          No          
ram_wr_data[2]     Yes    Yes         Yes         
ram_wr_data[4:3]   No     No          No          
ram_wr_data[5]     Yes    Yes         Yes         
ram_wr_data[15:6]  No     No          No          
ram_wr_data[17:16] Yes    Yes         Yes         
ram_wr_data[18]    No     No          No          
ram_wr_data[31:19] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram4_data_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 82.89 --     --      82.89 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 82.89 --     --      82.89 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                          
100.00 --     --     100.00 --     --     ram_wr_control_data_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram4_data_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   126     82.89   
Total Bits 0->1 76    63      82.89   
Total Bits 1->0 76    63      82.89   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 122 82.43  
Signal Bits 0->1 74  61  82.43  
Signal Bits 1->0 74  61  82.43  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                   Toggle Toggle 1->0 Toggle 0->1 
wr_sop             Yes    Yes         Yes         
wr_eop             Yes    Yes         Yes         
wr_vld             Yes    Yes         Yes         
wr_data[31:0]      Yes    Yes         Yes         
ram_wr_en          Yes    Yes         Yes         
ram_wr_strb[1:0]   Yes    Yes         Yes         
ram_wr_addr[3:0]   Yes    Yes         Yes         
ram_wr_data[1:0]   Yes    Yes         Yes         
ram_wr_data[3:2]   No     No          No          
ram_wr_data[4]     Yes    Yes         Yes         
ram_wr_data[5]     No     No          No          
ram_wr_data[7:6]   Yes    Yes         Yes         
ram_wr_data[16:8]  No     No          No          
ram_wr_data[21:17] Yes    Yes         Yes         
ram_wr_data[22]    No     No          No          
ram_wr_data[31:23] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram7_data_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.74 --     --      94.74 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.74 --     --      94.74 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                          
100.00 --     --     100.00 --     --     ram_wr_control_data_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram7_data_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   144     94.74   
Total Bits 0->1 76    72      94.74   
Total Bits 1->0 76    72      94.74   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 140 94.59  
Signal Bits 0->1 74  70  94.59  
Signal Bits 1->0 74  70  94.59  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                   Toggle Toggle 1->0 Toggle 0->1 
wr_sop             Yes    Yes         Yes         
wr_eop             Yes    Yes         Yes         
wr_vld             Yes    Yes         Yes         
wr_data[31:0]      Yes    Yes         Yes         
ram_wr_en          Yes    Yes         Yes         
ram_wr_strb[1:0]   Yes    Yes         Yes         
ram_wr_addr[3:0]   Yes    Yes         Yes         
ram_wr_data[0]     Yes    Yes         Yes         
ram_wr_data[1]     No     No          No          
ram_wr_data[3:2]   Yes    Yes         Yes         
ram_wr_data[4]     No     No          No          
ram_wr_data[6:5]   Yes    Yes         Yes         
ram_wr_data[7]     No     No          No          
ram_wr_data[21:8]  Yes    Yes         Yes         
ram_wr_data[22]    No     No          No          
ram_wr_data[31:23] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram0_data_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.05 --     --      96.05 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.05 --     --      96.05 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                          
100.00 --     --     100.00 --     --     ram_wr_control_data_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram0_data_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   146     96.05   
Total Bits 0->1 76    73      96.05   
Total Bits 1->0 76    73      96.05   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 142 95.95  
Signal Bits 0->1 74  71  95.95  
Signal Bits 1->0 74  71  95.95  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
wr_sop            Yes    Yes         Yes         
wr_eop            Yes    Yes         Yes         
wr_vld            Yes    Yes         Yes         
wr_data[31:0]     Yes    Yes         Yes         
ram_wr_en         Yes    Yes         Yes         
ram_wr_strb[1:0]  Yes    Yes         Yes         
ram_wr_addr[3:0]  Yes    Yes         Yes         
ram_wr_data[0]    Yes    Yes         Yes         
ram_wr_data[1]    No     No          No          
ram_wr_data[5:2]  Yes    Yes         Yes         
ram_wr_data[7:6]  No     No          No          
ram_wr_data[31:8] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram6_data_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.68 --     --      98.68 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.68 --     --      98.68 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                          
100.00 --     --     100.00 --     --     ram_wr_control_data_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram6_data_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   150     98.68   
Total Bits 0->1 76    75      98.68   
Total Bits 1->0 76    75      98.68   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 146 98.65  
Signal Bits 0->1 74  73  98.65  
Signal Bits 1->0 74  73  98.65  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                   Toggle Toggle 1->0 Toggle 0->1 
wr_sop             Yes    Yes         Yes         
wr_eop             Yes    Yes         Yes         
wr_vld             Yes    Yes         Yes         
wr_data[31:0]      Yes    Yes         Yes         
ram_wr_en          Yes    Yes         Yes         
ram_wr_strb[1:0]   Yes    Yes         Yes         
ram_wr_addr[3:0]   Yes    Yes         Yes         
ram_wr_data[21:0]  Yes    Yes         Yes         
ram_wr_data[22]    No     No          No          
ram_wr_data[31:23] Yes    Yes         Yes         


===============================================================================
Module : npu_tb
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     --     

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/tb/tb/npu_tb.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 



-------------------------------------------------------------------------------
Line Coverage for Module : npu_tb

             Line No.   Total   Covered  Percent
TOTAL                       37       37   100.00
ALWAYS            194        2        2   100.00
INITIAL           197       14       14   100.00
INITIAL           214       21       21   100.00

193                     
194        2/2              always #5 clk = ~clk;
195                     
196                         initial begin
197        1/1                  rst_n = 1'b0;
198        1/1                  clk = 1'b0;
199        1/1                  repeat(5)begin
200        2/2                      @(posedge clk);
201                             end
                        REPEAT_FALSE
202        1/1                  rst_n <= 1'b1;
203        1/1                  repeat(5)begin
204        2/2                      @(posedge clk);
205                             end
                        REPEAT_FALSE
206        1/1                  rst_n = 1'b0;
207        1/1                  repeat(5)begin
208        2/2                      @(posedge clk);
209                             end
                        REPEAT_FALSE
210        1/1                  rst_n <= 1'b1;
211                         end
212                     
213                         initial begin 
214        1/1                  uvm_config_db#(virtual npu_interface)::set(uvm_root::get(), "uvm_test_top.env.mst_agt.d_drv", "npu_vif", npu_vif);
215                             
216        1/1                  uvm_config_db#(virtual pe_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "pe_vif", pe_vif);
217        1/1                  uvm_config_db#(virtual dual_port_ram_mem)::set(uvm_root::get(), "uvm_test_top.env.cgm", "mem_vif", mem_vif);
218                     
219        1/1                  uvm_config_db#(virtual ram_wr_control_data_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram0_data_vif", ram0_data_vif);
220        1/1                  uvm_config_db#(virtual ram_wr_control_data_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram1_data_vif", ram1_data_vif);
221        1/1                  uvm_config_db#(virtual ram_wr_control_data_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram2_data_vif", ram2_data_vif);
222        1/1                  uvm_config_db#(virtual ram_wr_control_data_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram3_data_vif", ram3_data_vif);
223        1/1                  uvm_config_db#(virtual ram_wr_control_data_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram4_data_vif", ram4_data_vif);
224        1/1                  uvm_config_db#(virtual ram_wr_control_data_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram5_data_vif", ram5_data_vif);
225        1/1                  uvm_config_db#(virtual ram_wr_control_data_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram6_data_vif", ram6_data_vif);
226        1/1                  uvm_config_db#(virtual ram_wr_control_data_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram7_data_vif", ram7_data_vif);
227                     
228        1/1                  uvm_config_db#(virtual ram_wr_control_weight_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram0_weight_vif", ram0_weight_vif);
229        1/1                  uvm_config_db#(virtual ram_wr_control_weight_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram1_weight_vif", ram1_weight_vif);
230        1/1                  uvm_config_db#(virtual ram_wr_control_weight_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram2_weight_vif", ram2_weight_vif);
231        1/1                  uvm_config_db#(virtual ram_wr_control_weight_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram3_weight_vif", ram3_weight_vif);
232        1/1                  uvm_config_db#(virtual ram_wr_control_weight_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram4_weight_vif", ram4_weight_vif);
233        1/1                  uvm_config_db#(virtual ram_wr_control_weight_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram5_weight_vif", ram5_weight_vif);
234        1/1                  uvm_config_db#(virtual ram_wr_control_weight_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram6_weight_vif", ram6_weight_vif);
235        1/1                  uvm_config_db#(virtual ram_wr_control_weight_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram7_weight_vif", ram7_weight_vif);
236                     
237        1/1                  uvm_config_db#(virtual ram_rd_control_interface)::set(uvm_root::get(), "uvm_test_top.env.cgm", "ram_rd_vif", ram_rd_vif);
238                     
239        1/1                  run_test("npu_random_test");

-------------------------------------------------------------------------------
Toggle Coverage for Module : npu_tb
                Total Covered Percent 
Totals          2     2       100.00  
Total Bits      4     4       100.00  
Total Bits 0->1 2     2       100.00  
Total Bits 1->0 2     2       100.00  

                            
Signals          2 2 100.00 
Signal Bits      4 4 100.00 
Signal Bits 0->1 2 2 100.00 
Signal Bits 1->0 2 2 100.00 

Signal Details
      Toggle Toggle 1->0 Toggle 0->1 
clk   Yes    Yes         Yes         
rst_n Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 76.83  96.38  70.36  86.53  37.50  93.36 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Parent : 

none
----------------


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     mem_vif         
 32.22 --     --      32.22 --     --     npu_vif         
 96.99 --     --      96.99 --     --     pe_vif          
 96.05 --     --      96.05 --     --     ram0_data_vif   
 98.68 --     --      98.68 --     --     ram0_weight_vif 
 81.58 --     --      81.58 --     --     ram1_data_vif   
100.00 --     --     100.00 --     --     ram1_weight_vif 
 81.58 --     --      81.58 --     --     ram2_data_vif   
 98.68 --     --      98.68 --     --     ram2_weight_vif 
 80.26 --     --      80.26 --     --     ram3_data_vif   
 97.37 --     --      97.37 --     --     ram3_weight_vif 
 82.89 --     --      82.89 --     --     ram4_data_vif   
 97.37 --     --      97.37 --     --     ram4_weight_vif 
 80.26 --     --      80.26 --     --     ram5_data_vif   
100.00 --     --     100.00 --     --     ram5_weight_vif 
 98.68 --     --      98.68 --     --     ram6_data_vif   
 98.68 --     --      98.68 --     --     ram6_weight_vif 
 94.74 --     --      94.74 --     --     ram7_data_vif   
 98.68 --     --      98.68 --     --     ram7_weight_vif 
 92.50 --     --      92.50 --     --     ram_rd_vif      
 76.85  96.34  70.36  86.68  37.50  93.36 u_NPU           



-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : dual_port_ram_mem
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/tb/tb/npu_interface.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
100.00 --     --     100.00 --     --     npu_tb.mem_vif 



-------------------------------------------------------------------------------
Toggle Coverage for Module : dual_port_ram_mem
                Total Covered Percent 
Totals          1     1       100.00  
Total Bits      2     2       100.00  
Total Bits 0->1 1     1       100.00  
Total Bits 1->0 1     1       100.00  

                          
Ports          1 1 100.00 
Port Bits      2 2 100.00 
Port Bits 0->1 1 1 100.00 
Port Bits 1->0 1 1 100.00 

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
rst_n Yes    Yes         Yes         INPUT     


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.mem_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME              
100.00 --     --     100.00 --     --     dual_port_ram_mem 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : ram_wr_control_weight_interface
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/tb/tb/npu_interface.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                   
 97.37 --     --      97.37 --     --     npu_tb.ram3_weight_vif 
 97.37 --     --      97.37 --     --     npu_tb.ram4_weight_vif 
 98.68 --     --      98.68 --     --     npu_tb.ram0_weight_vif 
 98.68 --     --      98.68 --     --     npu_tb.ram2_weight_vif 
 98.68 --     --      98.68 --     --     npu_tb.ram6_weight_vif 
 98.68 --     --      98.68 --     --     npu_tb.ram7_weight_vif 
100.00 --     --     100.00 --     --     npu_tb.ram1_weight_vif 
100.00 --     --     100.00 --     --     npu_tb.ram5_weight_vif 



-------------------------------------------------------------------------------
Toggle Coverage for Module : ram_wr_control_weight_interface
                Total Covered Percent 
Totals          10    10      100.00  
Total Bits      152   152     100.00  
Total Bits 0->1 76    76      100.00  
Total Bits 1->0 76    76      100.00  

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   8   100.00 
Signal Bits      148 148 100.00 
Signal Bits 0->1 74  74  100.00 
Signal Bits 1->0 74  74  100.00 

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
wr_sop            Yes    Yes         Yes         
wr_eop            Yes    Yes         Yes         
wr_vld            Yes    Yes         Yes         
wr_data[31:0]     Yes    Yes         Yes         
ram_wr_en         Yes    Yes         Yes         
ram_wr_strb[1:0]  Yes    Yes         Yes         
ram_wr_addr[3:0]  Yes    Yes         Yes         
ram_wr_data[31:0] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram3_weight_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 97.37 --     --      97.37 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 97.37 --     --      97.37 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                            
100.00 --     --     100.00 --     --     ram_wr_control_weight_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram3_weight_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   148     97.37   
Total Bits 0->1 76    74      97.37   
Total Bits 1->0 76    74      97.37   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 144 97.30  
Signal Bits 0->1 74  72  97.30  
Signal Bits 1->0 74  72  97.30  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                   Toggle Toggle 1->0 Toggle 0->1 
wr_sop             Yes    Yes         Yes         
wr_eop             Yes    Yes         Yes         
wr_vld             Yes    Yes         Yes         
wr_data[31:0]      Yes    Yes         Yes         
ram_wr_en          Yes    Yes         Yes         
ram_wr_strb[1:0]   Yes    Yes         Yes         
ram_wr_addr[3:0]   Yes    Yes         Yes         
ram_wr_data[17:0]  Yes    Yes         Yes         
ram_wr_data[18]    No     No          No          
ram_wr_data[20:19] Yes    Yes         Yes         
ram_wr_data[21]    No     No          No          
ram_wr_data[31:22] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram4_weight_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 97.37 --     --      97.37 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 97.37 --     --      97.37 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                            
100.00 --     --     100.00 --     --     ram_wr_control_weight_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram4_weight_vif
                Total Covered Percent 
Totals          10    8       80.00   
Total Bits      152   148     97.37   
Total Bits 0->1 76    74      97.37   
Total Bits 1->0 76    74      97.37   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   6   75.00  
Signal Bits      148 144 97.30  
Signal Bits 0->1 74  72  97.30  
Signal Bits 1->0 74  72  97.30  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
wr_sop            Yes    Yes         Yes         
wr_eop            Yes    Yes         Yes         
wr_vld            Yes    Yes         Yes         
wr_data[31:0]     Yes    Yes         Yes         
ram_wr_en         Yes    Yes         Yes         
ram_wr_strb[1:0]  Yes    Yes         Yes         
ram_wr_addr[0]    No     No          No          
ram_wr_addr[3:1]  Yes    Yes         Yes         
ram_wr_data[0]    No     No          No          
ram_wr_data[31:1] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram0_weight_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.68 --     --      98.68 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.68 --     --      98.68 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                            
100.00 --     --     100.00 --     --     ram_wr_control_weight_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram0_weight_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   150     98.68   
Total Bits 0->1 76    75      98.68   
Total Bits 1->0 76    75      98.68   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 146 98.65  
Signal Bits 0->1 74  73  98.65  
Signal Bits 1->0 74  73  98.65  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
wr_sop            Yes    Yes         Yes         
wr_eop            Yes    Yes         Yes         
wr_vld            Yes    Yes         Yes         
wr_data[31:0]     Yes    Yes         Yes         
ram_wr_en         Yes    Yes         Yes         
ram_wr_strb[1:0]  Yes    Yes         Yes         
ram_wr_addr[0]    No     No          No          
ram_wr_addr[3:1]  Yes    Yes         Yes         
ram_wr_data[31:0] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram2_weight_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.68 --     --      98.68 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.68 --     --      98.68 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                            
100.00 --     --     100.00 --     --     ram_wr_control_weight_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram2_weight_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   150     98.68   
Total Bits 0->1 76    75      98.68   
Total Bits 1->0 76    75      98.68   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 146 98.65  
Signal Bits 0->1 74  73  98.65  
Signal Bits 1->0 74  73  98.65  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
wr_sop            Yes    Yes         Yes         
wr_eop            Yes    Yes         Yes         
wr_vld            Yes    Yes         Yes         
wr_data[31:0]     Yes    Yes         Yes         
ram_wr_en         Yes    Yes         Yes         
ram_wr_strb[1:0]  Yes    Yes         Yes         
ram_wr_addr[0]    No     No          No          
ram_wr_addr[3:1]  Yes    Yes         Yes         
ram_wr_data[31:0] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram6_weight_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.68 --     --      98.68 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.68 --     --      98.68 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                            
100.00 --     --     100.00 --     --     ram_wr_control_weight_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram6_weight_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   150     98.68   
Total Bits 0->1 76    75      98.68   
Total Bits 1->0 76    75      98.68   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 146 98.65  
Signal Bits 0->1 74  73  98.65  
Signal Bits 1->0 74  73  98.65  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
wr_sop            Yes    Yes         Yes         
wr_eop            Yes    Yes         Yes         
wr_vld            Yes    Yes         Yes         
wr_data[31:0]     Yes    Yes         Yes         
ram_wr_en         Yes    Yes         Yes         
ram_wr_strb[1:0]  Yes    Yes         Yes         
ram_wr_addr[0]    No     No          No          
ram_wr_addr[3:1]  Yes    Yes         Yes         
ram_wr_data[31:0] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram7_weight_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.68 --     --      98.68 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.68 --     --      98.68 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                            
100.00 --     --     100.00 --     --     ram_wr_control_weight_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram7_weight_vif
                Total Covered Percent 
Totals          10    9       90.00   
Total Bits      152   150     98.68   
Total Bits 0->1 76    75      98.68   
Total Bits 1->0 76    75      98.68   

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   7   87.50  
Signal Bits      148 146 98.65  
Signal Bits 0->1 74  73  98.65  
Signal Bits 1->0 74  73  98.65  

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
wr_sop            Yes    Yes         Yes         
wr_eop            Yes    Yes         Yes         
wr_vld            Yes    Yes         Yes         
wr_data[31:0]     Yes    Yes         Yes         
ram_wr_en         Yes    Yes         Yes         
ram_wr_strb[1:0]  Yes    Yes         Yes         
ram_wr_addr[3:0]  Yes    Yes         Yes         
ram_wr_data[1:0]  Yes    Yes         Yes         
ram_wr_data[2]    No     No          No          
ram_wr_data[31:3] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram1_weight_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                            
100.00 --     --     100.00 --     --     ram_wr_control_weight_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram1_weight_vif
                Total Covered Percent 
Totals          10    10      100.00  
Total Bits      152   152     100.00  
Total Bits 0->1 76    76      100.00  
Total Bits 1->0 76    76      100.00  

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   8   100.00 
Signal Bits      148 148 100.00 
Signal Bits 0->1 74  74  100.00 
Signal Bits 1->0 74  74  100.00 

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
wr_sop            Yes    Yes         Yes         
wr_eop            Yes    Yes         Yes         
wr_vld            Yes    Yes         Yes         
wr_data[31:0]     Yes    Yes         Yes         
ram_wr_en         Yes    Yes         Yes         
ram_wr_strb[1:0]  Yes    Yes         Yes         
ram_wr_addr[3:0]  Yes    Yes         Yes         
ram_wr_data[31:0] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.ram5_weight_vif
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                            
100.00 --     --     100.00 --     --     ram_wr_control_weight_interface 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME   
100.00 100.00 --     100.00 --     --     npu_tb 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.ram5_weight_vif
                Total Covered Percent 
Totals          10    10      100.00  
Total Bits      152   152     100.00  
Total Bits 0->1 76    76      100.00  
Total Bits 1->0 76    76      100.00  

                          
Ports          2 2 100.00 
Port Bits      4 4 100.00 
Port Bits 0->1 2 2 100.00 
Port Bits 1->0 2 2 100.00 

                                
Signals          8   8   100.00 
Signal Bits      148 148 100.00 
Signal Bits 0->1 74  74  100.00 
Signal Bits 1->0 74  74  100.00 

Port Details
      Toggle Toggle 1->0 Toggle 0->1 Direction 
clk   Yes    Yes         Yes         INPUT     
rst_n Yes    Yes         Yes         INPUT     

Signal Details
                  Toggle Toggle 1->0 Toggle 0->1 
wr_sop            Yes    Yes         Yes         
wr_eop            Yes    Yes         Yes         
wr_vld            Yes    Yes         Yes         
wr_data[31:0]     Yes    Yes         Yes         
ram_wr_en         Yes    Yes         Yes         
ram_wr_strb[1:0]  Yes    Yes         Yes         
ram_wr_addr[3:0]  Yes    Yes         Yes         
ram_wr_data[31:0] Yes    Yes         Yes         


===============================================================================
Module : pe
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     100.00 

Source File(s) : 

/opt/eda/synopsys/vcs-mx/O-2018.09-SP2-1/zzp/NPU/rtl/pe.v

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                        
 90.42 100.00 --      71.25 --     100.00 npu_tb.u_NPU.pe_array.pe2_2 
 91.11 100.00 --      73.33 --     100.00 npu_tb.u_NPU.pe_array.pe3_2 
 91.81 100.00 --      75.42 --     100.00 npu_tb.u_NPU.pe_array.pe4_2 
 92.50 100.00 --      77.50 --     100.00 npu_tb.u_NPU.pe_array.pe1_0 
 92.50 100.00 --      77.50 --     100.00 npu_tb.u_NPU.pe_array.pe1_4 
 92.64 100.00 --      77.92 --     100.00 npu_tb.u_NPU.pe_array.pe0_2 
 93.33 100.00 --      80.00 --     100.00 npu_tb.u_NPU.pe_array.pe1_1 
 93.33 100.00 --      80.00 --     100.00 npu_tb.u_NPU.pe_array.pe7_7 
 93.61 100.00 --      80.83 --     100.00 npu_tb.u_NPU.pe_array.pe2_6 
 93.89 100.00 --      81.67 --     100.00 npu_tb.u_NPU.pe_array.pe2_3 
 94.03 100.00 --      82.08 --     100.00 npu_tb.u_NPU.pe_array.pe2_4 
 94.03 100.00 --      82.08 --     100.00 npu_tb.u_NPU.pe_array.pe2_7 
 94.03 100.00 --      82.08 --     100.00 npu_tb.u_NPU.pe_array.pe3_4 
 94.31 100.00 --      82.92 --     100.00 npu_tb.u_NPU.pe_array.pe2_0 
 94.31 100.00 --      82.92 --     100.00 npu_tb.u_NPU.pe_array.pe2_1 
 94.31 100.00 --      82.92 --     100.00 npu_tb.u_NPU.pe_array.pe2_5 
 94.72 100.00 --      84.17 --     100.00 npu_tb.u_NPU.pe_array.pe3_0 
 94.72 100.00 --      84.17 --     100.00 npu_tb.u_NPU.pe_array.pe3_1 
 94.72 100.00 --      84.17 --     100.00 npu_tb.u_NPU.pe_array.pe3_5 
 94.72 100.00 --      84.17 --     100.00 npu_tb.u_NPU.pe_array.pe4_5 
 95.00 100.00 --      85.00 --     100.00 npu_tb.u_NPU.pe_array.pe7_0 
 95.42 100.00 --      86.25 --     100.00 npu_tb.u_NPU.pe_array.pe4_0 
 95.42 100.00 --      86.25 --     100.00 npu_tb.u_NPU.pe_array.pe4_1 
 95.42 100.00 --      86.25 --     100.00 npu_tb.u_NPU.pe_array.pe4_4 
 95.42 100.00 --      86.25 --     100.00 npu_tb.u_NPU.pe_array.pe4_6 
 95.56 100.00 --      86.67 --     100.00 npu_tb.u_NPU.pe_array.pe4_3 
 95.56 100.00 --      86.67 --     100.00 npu_tb.u_NPU.pe_array.pe4_7 
 95.69 100.00 --      87.08 --     100.00 npu_tb.u_NPU.pe_array.pe5_5 
 95.83 100.00 --      87.50 --     100.00 npu_tb.u_NPU.pe_array.pe0_5 
 95.83 100.00 --      87.50 --     100.00 npu_tb.u_NPU.pe_array.pe5_0 
 95.83 100.00 --      87.50 --     100.00 npu_tb.u_NPU.pe_array.pe5_2 
 95.83 100.00 --      87.50 --     100.00 npu_tb.u_NPU.pe_array.pe5_4 
 96.11 100.00 --      88.33 --     100.00 npu_tb.u_NPU.pe_array.pe1_3 
 96.39 100.00 --      89.17 --     100.00 npu_tb.u_NPU.pe_array.pe0_1 
 96.39 100.00 --      89.17 --     100.00 npu_tb.u_NPU.pe_array.pe1_2 
 96.67 100.00 --      90.00 --     100.00 npu_tb.u_NPU.pe_array.pe7_3 
 96.94 100.00 --      90.83 --     100.00 npu_tb.u_NPU.pe_array.pe6_0 
 96.94 100.00 --      90.83 --     100.00 npu_tb.u_NPU.pe_array.pe6_1 
 96.94 100.00 --      90.83 --     100.00 npu_tb.u_NPU.pe_array.pe6_5 
 96.94 100.00 --      90.83 --     100.00 npu_tb.u_NPU.pe_array.pe7_1 
 96.94 100.00 --      90.83 --     100.00 npu_tb.u_NPU.pe_array.pe7_4 
 96.94 100.00 --      90.83 --     100.00 npu_tb.u_NPU.pe_array.pe7_5 
 97.78 100.00 --      93.33 --     100.00 npu_tb.u_NPU.pe_array.pe3_6 
 97.92 100.00 --      93.75 --     100.00 npu_tb.u_NPU.pe_array.pe3_3 
 98.19 100.00 --      94.58 --     100.00 npu_tb.u_NPU.pe_array.pe3_7 
 98.47 100.00 --      95.42 --     100.00 npu_tb.u_NPU.pe_array.pe5_6 
 98.75 100.00 --      96.25 --     100.00 npu_tb.u_NPU.pe_array.pe5_3 
 98.75 100.00 --      96.25 --     100.00 npu_tb.u_NPU.pe_array.pe5_7 
 98.89 100.00 --      96.67 --     100.00 npu_tb.u_NPU.pe_array.pe5_1 
 99.03 100.00 --      97.08 --     100.00 npu_tb.u_NPU.pe_array.pe1_6 
 99.17 100.00 --      97.50 --     100.00 npu_tb.u_NPU.pe_array.pe0_6 
 99.17 100.00 --      97.50 --     100.00 npu_tb.u_NPU.pe_array.pe1_7 
 99.17 100.00 --      97.50 --     100.00 npu_tb.u_NPU.pe_array.pe6_7 
 99.31 100.00 --      97.92 --     100.00 npu_tb.u_NPU.pe_array.pe0_0 
 99.31 100.00 --      97.92 --     100.00 npu_tb.u_NPU.pe_array.pe0_4 
 99.44 100.00 --      98.33 --     100.00 npu_tb.u_NPU.pe_array.pe0_3 
 99.44 100.00 --      98.33 --     100.00 npu_tb.u_NPU.pe_array.pe0_7 
 99.44 100.00 --      98.33 --     100.00 npu_tb.u_NPU.pe_array.pe1_5 
 99.72 100.00 --      99.17 --     100.00 npu_tb.u_NPU.pe_array.pe7_6 
100.00 100.00 --     100.00 --     100.00 npu_tb.u_NPU.pe_array.pe6_2 
100.00 100.00 --     100.00 --     100.00 npu_tb.u_NPU.pe_array.pe6_3 
100.00 100.00 --     100.00 --     100.00 npu_tb.u_NPU.pe_array.pe6_4 
100.00 100.00 --     100.00 --     100.00 npu_tb.u_NPU.pe_array.pe6_6 
100.00 100.00 --     100.00 --     100.00 npu_tb.u_NPU.pe_array.pe7_2 



-------------------------------------------------------------------------------
Line Coverage for Module : pe

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Module : pe
                Total Covered Percent 
Totals          11    11      100.00  
Total Bits      240   240     100.00  
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   120     100.00  

                              
Ports          8   8   100.00 
Port Bits      166 166 100.00 
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  83  100.00 

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Module : pe
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe2_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 90.42 100.00 --      71.25 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 90.42 100.00 --      71.25 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_2

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_2
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   171     71.25   
Total Bits 0->1 120   100     83.33   
Total Bits 1->0 120   71      59.17   

                              
Ports          8   5   62.50  
Port Bits      166 117 70.48  
Port Bits 0->1 83  63  75.90  
Port Bits 1->0 83  54  65.06  

                              
Signals          3  2  66.67  
Signal Bits      74 54 72.97  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 17 45.95  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[6:2]     Yes    Yes         Yes         INPUT     
i_map[15:7]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[6:2]     Yes    Yes         Yes         OUTPUT    
o_map[15:7]    No     No          No          OUTPUT    
o_result[6:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:7] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          Yes         
temp[1]       Yes    Yes         Yes         
temp[2]       No     No          Yes         
temp[3]       Yes    Yes         Yes         
temp[4]       No     No          Yes         
temp[14:5]    Yes    Yes         Yes         
temp[31:15]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_2
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe3_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 91.11 100.00 --      73.33 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 91.11 100.00 --      73.33 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_2

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_2
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   176     73.33   
Total Bits 0->1 120   88      73.33   
Total Bits 1->0 120   88      73.33   

                              
Ports          8   5   62.50  
Port Bits      166 136 81.93  
Port Bits 0->1 83  68  81.93  
Port Bits 1->0 83  68  81.93  

                              
Signals          3  2  66.67  
Signal Bits      74 40 54.05  
Signal Bits 0->1 37 20 54.05  
Signal Bits 1->0 37 20 54.05  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[1:0]     Yes    Yes         Yes         INPUT     
i_map[2]       No     No          No          INPUT     
i_map[3]       Yes    Yes         Yes         INPUT     
i_map[4]       No     No          No          INPUT     
i_map[5]       Yes    Yes         Yes         INPUT     
i_map[6]       No     No          No          INPUT     
i_map[15:7]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[1:0]     Yes    Yes         Yes         OUTPUT    
o_map[2]       No     No          No          OUTPUT    
o_map[3]       Yes    Yes         Yes         OUTPUT    
o_map[4]       No     No          No          OUTPUT    
o_map[5]       Yes    Yes         Yes         OUTPUT    
o_map[6]       No     No          No          OUTPUT    
o_map[15:7]    Yes    Yes         Yes         OUTPUT    
o_result[6:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:7] No     No          No          OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[14:0]    Yes    Yes         Yes         
temp[31:15]   No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_2
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe4_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 91.81 100.00 --      75.42 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 91.81 100.00 --      75.42 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_2

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_2
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   181     75.42   
Total Bits 0->1 120   104     86.67   
Total Bits 1->0 120   77      64.17   

                              
Ports          8   5   62.50  
Port Bits      166 125 75.30  
Port Bits 0->1 83  67  80.72  
Port Bits 1->0 83  58  69.88  

                              
Signals          3  2  66.67  
Signal Bits      74 56 75.68  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 19 51.35  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[7:0]     Yes    Yes         Yes         INPUT     
i_map[15:8]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[7:0]     Yes    Yes         Yes         OUTPUT    
o_map[15:8]    No     No          No          OUTPUT    
o_result[2:0]  Yes    Yes         Yes         OUTPUT    
o_result[3]    No     No          Yes         OUTPUT    
o_result[6:4]  Yes    Yes         Yes         OUTPUT    
o_result[7]    No     No          Yes         OUTPUT    
o_result[8]    Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          Yes         
temp[10:1]    Yes    Yes         Yes         
temp[11]      No     No          Yes         
temp[14:12]   Yes    Yes         Yes         
temp[15]      No     No          Yes         
temp[16]      Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_2
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe1_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 92.50 100.00 --      77.50 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 92.50 100.00 --      77.50 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_0

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_0
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   186     77.50   
Total Bits 0->1 120   96      80.00   
Total Bits 1->0 120   90      75.00   

                              
Ports          8   5   62.50  
Port Bits      166 145 87.35  
Port Bits 0->1 83  74  89.16  
Port Bits 1->0 83  71  85.54  

                              
Signals          3  2  66.67  
Signal Bits      74 41 55.41  
Signal Bits 0->1 37 22 59.46  
Signal Bits 1->0 37 19 51.35  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[15:2]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[15:2]    Yes    Yes         Yes         OUTPUT    
o_result[3:0]  Yes    Yes         Yes         OUTPUT    
o_result[4]    No     No          Yes         OUTPUT    
o_result[5]    Yes    Yes         Yes         OUTPUT    
o_result[6]    No     No          Yes         OUTPUT    
o_result[7]    Yes    Yes         Yes         OUTPUT    
o_result[8]    No     No          Yes         OUTPUT    
o_result[15:9] No     No          No          OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[11:0]    Yes    Yes         Yes         
temp[12]      No     No          Yes         
temp[13]      Yes    Yes         Yes         
temp[14]      No     No          Yes         
temp[15]      Yes    Yes         Yes         
temp[16]      No     No          Yes         
temp[31:17]   No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_0
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe1_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 92.50 100.00 --      77.50 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 92.50 100.00 --      77.50 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_4

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_4
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   186     77.50   
Total Bits 0->1 120   94      78.33   
Total Bits 1->0 120   92      76.67   

                              
Ports          8   5   62.50  
Port Bits      166 145 87.35  
Port Bits 0->1 83  73  87.95  
Port Bits 1->0 83  72  86.75  

                              
Signals          3  2  66.67  
Signal Bits      74 41 55.41  
Signal Bits 0->1 37 21 56.76  
Signal Bits 1->0 37 20 54.05  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[15:2]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[15:2]    Yes    Yes         Yes         OUTPUT    
o_result[3:0]  Yes    Yes         Yes         OUTPUT    
o_result[4]    No     No          Yes         OUTPUT    
o_result[7:5]  Yes    Yes         Yes         OUTPUT    
o_result[15:8] No     No          No          OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[11:0]    Yes    Yes         Yes         
temp[12]      No     No          Yes         
temp[15:13]   Yes    Yes         Yes         
temp[31:16]   No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_4
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe0_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 92.64 100.00 --      77.92 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 92.64 100.00 --      77.92 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_2

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_2
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   187     77.92   
Total Bits 0->1 120   94      78.33   
Total Bits 1->0 120   93      77.50   

                              
Ports          8   5   62.50  
Port Bits      166 146 87.95  
Port Bits 0->1 83  73  87.95  
Port Bits 1->0 83  73  87.95  

                              
Signals          3  2  66.67  
Signal Bits      74 41 55.41  
Signal Bits 0->1 37 21 56.76  
Signal Bits 1->0 37 20 54.05  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[6:0]     Yes    Yes         Yes         INPUT     
i_map[7]       No     No          No          INPUT     
i_map[15:8]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[6:0]     Yes    Yes         Yes         OUTPUT    
o_map[7]       No     No          No          OUTPUT    
o_map[15:8]    Yes    Yes         Yes         OUTPUT    
o_result[7:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:8] No     No          No          OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[5:0]     Yes    Yes         Yes         
temp[6]       No     No          Yes         
temp[15:7]    Yes    Yes         Yes         
temp[31:16]   No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_2
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe1_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.33 100.00 --      80.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.33 100.00 --      80.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_1

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_1
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   192     80.00   
Total Bits 0->1 120   96      80.00   
Total Bits 1->0 120   96      80.00   

                              
Ports          8   5   62.50  
Port Bits      166 148 89.16  
Port Bits 0->1 83  74  89.16  
Port Bits 1->0 83  74  89.16  

                              
Signals          3  2  66.67  
Signal Bits      74 44 59.46  
Signal Bits 0->1 37 22 59.46  
Signal Bits 1->0 37 22 59.46  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[15:2]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[15:2]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          No          OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[16:0]    Yes    Yes         Yes         
temp[31:17]   No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_1
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe7_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.33 100.00 --      80.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.33 100.00 --      80.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_7

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_7
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   192     80.00   
Total Bits 0->1 120   96      80.00   
Total Bits 1->0 120   96      80.00   

                              
Ports          8   7   87.50  
Port Bits      166 150 90.36  
Port Bits 0->1 83  75  90.36  
Port Bits 1->0 83  75  90.36  

                              
Signals          3  2  66.67  
Signal Bits      74 42 56.76  
Signal Bits 0->1 37 21 56.76  
Signal Bits 1->0 37 21 56.76  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[7:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:8] No     No          No          OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[15:0]    Yes    Yes         Yes         
temp[31:16]   No     No          No          


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_7
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe2_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.61 100.00 --      80.83 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.61 100.00 --      80.83 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_6

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_6
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   194     80.83   
Total Bits 0->1 120   98      81.67   
Total Bits 1->0 120   96      80.00   

                              
Ports          8   6   75.00  
Port Bits      166 126 75.90  
Port Bits 0->1 83  63  75.90  
Port Bits 1->0 83  63  75.90  

                              
Signals          3  2  66.67  
Signal Bits      74 68 91.89  
Signal Bits 0->1 37 35 94.59  
Signal Bits 1->0 37 33 89.19  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[6:2]     Yes    Yes         Yes         INPUT     
i_map[15:7]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[6:2]     Yes    Yes         Yes         OUTPUT    
o_map[15:7]    No     No          No          OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          Yes         
temp[1]       No     No          No          
temp[2]       Yes    Yes         Yes         
temp[3]       No     No          No          
temp[6:4]     Yes    Yes         Yes         
temp[7]       No     No          Yes         
temp[31:8]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_6
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe2_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.89 100.00 --      81.67 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.89 100.00 --      81.67 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_3

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_3
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   196     81.67   
Total Bits 0->1 120   99      82.50   
Total Bits 1->0 120   97      80.83   

                              
Ports          8   6   75.00  
Port Bits      166 126 75.90  
Port Bits 0->1 83  63  75.90  
Port Bits 1->0 83  63  75.90  

                              
Signals          3  2  66.67  
Signal Bits      74 70 94.59  
Signal Bits 0->1 37 36 97.30  
Signal Bits 1->0 37 34 91.89  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[6:2]     Yes    Yes         Yes         INPUT     
i_map[15:7]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[6:2]     Yes    Yes         Yes         OUTPUT    
o_map[15:7]    No     No          No          OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       Yes    Yes         Yes         
temp[1]       No     No          Yes         
temp[2]       No     No          No          
temp[3]       No     No          Yes         
temp[31:4]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_3
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe2_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.03 100.00 --      82.08 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.03 100.00 --      82.08 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_4

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_4
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   197     82.08   
Total Bits 0->1 120   100     83.33   
Total Bits 1->0 120   97      80.83   

                              
Ports          8   5   62.50  
Port Bits      166 125 75.30  
Port Bits 0->1 83  63  75.90  
Port Bits 1->0 83  62  74.70  

                              
Signals          3  2  66.67  
Signal Bits      74 72 97.30  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 35 94.59  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[6:2]     Yes    Yes         Yes         INPUT     
i_map[15:7]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[6:2]     Yes    Yes         Yes         OUTPUT    
o_map[15:7]    No     No          No          OUTPUT    
o_result[0]    No     No          Yes         OUTPUT    
o_result[15:1] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          Yes         
temp[7:1]     Yes    Yes         Yes         
temp[8]       No     No          Yes         
temp[31:9]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_4
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe2_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.03 100.00 --      82.08 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.03 100.00 --      82.08 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_7

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_7
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   197     82.08   
Total Bits 0->1 120   99      82.50   
Total Bits 1->0 120   98      81.67   

                              
Ports          8   6   75.00  
Port Bits      166 126 75.90  
Port Bits 0->1 83  63  75.90  
Port Bits 1->0 83  63  75.90  

                              
Signals          3  2  66.67  
Signal Bits      74 71 95.95  
Signal Bits 0->1 37 36 97.30  
Signal Bits 1->0 37 35 94.59  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[6:2]     Yes    Yes         Yes         INPUT     
i_map[15:7]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[6:2]     Yes    Yes         Yes         OUTPUT    
o_map[15:7]    No     No          No          OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          No          
temp[1]       Yes    Yes         Yes         
temp[2]       No     No          Yes         
temp[31:3]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_7
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe3_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.03 100.00 --      82.08 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.03 100.00 --      82.08 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_4

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_4
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   197     82.08   
Total Bits 0->1 120   113     94.17   
Total Bits 1->0 120   84      70.00   

                              
Ports          8   5   62.50  
Port Bits      166 144 86.75  
Port Bits 0->1 83  77  92.77  
Port Bits 1->0 83  67  80.72  

                              
Signals          3  2  66.67  
Signal Bits      74 53 71.62  
Signal Bits 0->1 37 36 97.30  
Signal Bits 1->0 37 17 45.95  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[1:0]     Yes    Yes         Yes         INPUT     
i_map[2]       No     No          No          INPUT     
i_map[3]       Yes    Yes         Yes         INPUT     
i_map[4]       No     No          No          INPUT     
i_map[5]       Yes    Yes         Yes         INPUT     
i_map[6]       No     No          No          INPUT     
i_map[15:7]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[1:0]     Yes    Yes         Yes         OUTPUT    
o_map[2]       No     No          No          OUTPUT    
o_map[3]       Yes    Yes         Yes         OUTPUT    
o_map[4]       No     No          No          OUTPUT    
o_map[5]       Yes    Yes         Yes         OUTPUT    
o_map[6]       No     No          No          OUTPUT    
o_map[15:7]    Yes    Yes         Yes         OUTPUT    
o_result[3:0]  Yes    Yes         Yes         OUTPUT    
o_result[4]    No     No          Yes         OUTPUT    
o_result[6:5]  Yes    Yes         Yes         OUTPUT    
o_result[15:7] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          No          
temp[3:1]     Yes    Yes         Yes         
temp[4]       No     No          Yes         
temp[11:5]    Yes    Yes         Yes         
temp[12]      No     No          Yes         
temp[14:13]   Yes    Yes         Yes         
temp[31:15]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_4
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe2_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.31 100.00 --      82.92 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.31 100.00 --      82.92 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_0

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_0
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   199     82.92   
Total Bits 0->1 120   100     83.33   
Total Bits 1->0 120   99      82.50   

                              
Ports          8   6   75.00  
Port Bits      166 126 75.90  
Port Bits 0->1 83  63  75.90  
Port Bits 1->0 83  63  75.90  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[6:2]     Yes    Yes         Yes         INPUT     
i_map[15:7]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[6:2]     Yes    Yes         Yes         OUTPUT    
o_map[15:7]    No     No          No          OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       Yes    Yes         Yes         
temp[1]       No     No          Yes         
temp[31:2]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_0
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe2_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.31 100.00 --      82.92 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.31 100.00 --      82.92 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_1

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_1
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   199     82.92   
Total Bits 0->1 120   100     83.33   
Total Bits 1->0 120   99      82.50   

                              
Ports          8   6   75.00  
Port Bits      166 126 75.90  
Port Bits 0->1 83  63  75.90  
Port Bits 1->0 83  63  75.90  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[6:2]     Yes    Yes         Yes         INPUT     
i_map[15:7]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[6:2]     Yes    Yes         Yes         OUTPUT    
o_map[15:7]    No     No          No          OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[1:0]     Yes    Yes         Yes         
temp[2]       No     No          Yes         
temp[31:3]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_1
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe2_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.31 100.00 --      82.92 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.31 100.00 --      82.92 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_5

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_5
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   199     82.92   
Total Bits 0->1 120   100     83.33   
Total Bits 1->0 120   99      82.50   

                              
Ports          8   6   75.00  
Port Bits      166 126 75.90  
Port Bits 0->1 83  63  75.90  
Port Bits 1->0 83  63  75.90  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[6:2]     Yes    Yes         Yes         INPUT     
i_map[15:7]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[6:2]     Yes    Yes         Yes         OUTPUT    
o_map[15:7]    No     No          No          OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       Yes    Yes         Yes         
temp[1]       No     No          Yes         
temp[31:2]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe2_5
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe3_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.72 100.00 --      84.17 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.72 100.00 --      84.17 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_0

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_0
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   202     84.17   
Total Bits 0->1 120   113     94.17   
Total Bits 1->0 120   89      74.17   

                              
Ports          8   5   62.50  
Port Bits      166 146 87.95  
Port Bits 0->1 83  77  92.77  
Port Bits 1->0 83  69  83.13  

                              
Signals          3  2  66.67  
Signal Bits      74 56 75.68  
Signal Bits 0->1 37 36 97.30  
Signal Bits 1->0 37 20 54.05  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[1:0]     Yes    Yes         Yes         INPUT     
i_map[2]       No     No          No          INPUT     
i_map[3]       Yes    Yes         Yes         INPUT     
i_map[4]       No     No          No          INPUT     
i_map[5]       Yes    Yes         Yes         INPUT     
i_map[6]       No     No          No          INPUT     
i_map[15:7]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[1:0]     Yes    Yes         Yes         OUTPUT    
o_map[2]       No     No          No          OUTPUT    
o_map[3]       Yes    Yes         Yes         OUTPUT    
o_map[4]       No     No          No          OUTPUT    
o_map[5]       Yes    Yes         Yes         OUTPUT    
o_map[6]       No     No          No          OUTPUT    
o_map[15:7]    Yes    Yes         Yes         OUTPUT    
o_result[7:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:8] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          No          
temp[15:1]    Yes    Yes         Yes         
temp[31:16]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_0
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe3_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.72 100.00 --      84.17 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.72 100.00 --      84.17 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_1

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_1
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   202     84.17   
Total Bits 0->1 120   114     95.00   
Total Bits 1->0 120   88      73.33   

                              
Ports          8   5   62.50  
Port Bits      166 145 87.35  
Port Bits 0->1 83  77  92.77  
Port Bits 1->0 83  68  81.93  

                              
Signals          3  2  66.67  
Signal Bits      74 57 77.03  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 20 54.05  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[1:0]     Yes    Yes         Yes         INPUT     
i_map[2]       No     No          No          INPUT     
i_map[3]       Yes    Yes         Yes         INPUT     
i_map[4]       No     No          No          INPUT     
i_map[5]       Yes    Yes         Yes         INPUT     
i_map[6]       No     No          No          INPUT     
i_map[15:7]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[1:0]     Yes    Yes         Yes         OUTPUT    
o_map[2]       No     No          No          OUTPUT    
o_map[3]       Yes    Yes         Yes         OUTPUT    
o_map[4]       No     No          No          OUTPUT    
o_map[5]       Yes    Yes         Yes         OUTPUT    
o_map[6]       No     No          No          OUTPUT    
o_map[15:7]    Yes    Yes         Yes         OUTPUT    
o_result[6:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:7] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[14:0]    Yes    Yes         Yes         
temp[31:15]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_1
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe3_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.72 100.00 --      84.17 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.72 100.00 --      84.17 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_5

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_5
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   202     84.17   
Total Bits 0->1 120   114     95.00   
Total Bits 1->0 120   88      73.33   

                              
Ports          8   5   62.50  
Port Bits      166 145 87.35  
Port Bits 0->1 83  77  92.77  
Port Bits 1->0 83  68  81.93  

                              
Signals          3  2  66.67  
Signal Bits      74 57 77.03  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 20 54.05  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[1:0]     Yes    Yes         Yes         INPUT     
i_map[2]       No     No          No          INPUT     
i_map[3]       Yes    Yes         Yes         INPUT     
i_map[4]       No     No          No          INPUT     
i_map[5]       Yes    Yes         Yes         INPUT     
i_map[6]       No     No          No          INPUT     
i_map[15:7]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[1:0]     Yes    Yes         Yes         OUTPUT    
o_map[2]       No     No          No          OUTPUT    
o_map[3]       Yes    Yes         Yes         OUTPUT    
o_map[4]       No     No          No          OUTPUT    
o_map[5]       Yes    Yes         Yes         OUTPUT    
o_map[6]       No     No          No          OUTPUT    
o_map[15:7]    Yes    Yes         Yes         OUTPUT    
o_result[4:0]  Yes    Yes         Yes         OUTPUT    
o_result[5]    No     No          Yes         OUTPUT    
o_result[7:6]  Yes    Yes         Yes         OUTPUT    
o_result[15:8] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[12:0]    Yes    Yes         Yes         
temp[13]      No     No          Yes         
temp[15:14]   Yes    Yes         Yes         
temp[31:16]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_5
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe4_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.72 100.00 --      84.17 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 94.72 100.00 --      84.17 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_5

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_5
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   202     84.17   
Total Bits 0->1 120   102     85.00   
Total Bits 1->0 120   100     83.33   

                              
Ports          8   5   62.50  
Port Bits      166 131 78.92  
Port Bits 0->1 83  66  79.52  
Port Bits 1->0 83  65  78.31  

                              
Signals          3  2  66.67  
Signal Bits      74 71 95.95  
Signal Bits 0->1 37 36 97.30  
Signal Bits 1->0 37 35 94.59  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[7:0]     Yes    Yes         Yes         INPUT     
i_map[15:8]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[7:0]     Yes    Yes         Yes         OUTPUT    
o_map[15:8]    No     No          No          OUTPUT    
o_result[0]    Yes    Yes         Yes         OUTPUT    
o_result[1]    No     No          No          OUTPUT    
o_result[4:2]  Yes    Yes         Yes         OUTPUT    
o_result[5]    No     No          Yes         OUTPUT    
o_result[15:6] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[8:0]     Yes    Yes         Yes         
temp[9]       No     No          No          
temp[12:10]   Yes    Yes         Yes         
temp[13]      No     No          Yes         
temp[31:14]   Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_5
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe7_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.00 100.00 --      85.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.00 100.00 --      85.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_0

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_0
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   204     85.00   
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   84      70.00   

                              
Ports          8   6   75.00  
Port Bits      166 147 88.55  
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  64  77.11  

                              
Signals          3  2  66.67  
Signal Bits      74 57 77.03  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 20 54.05  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       No     No          Yes         INPUT     
i_map[4:1]     Yes    Yes         Yes         INPUT     
i_map[5]       No     No          Yes         INPUT     
i_map[7:6]     Yes    Yes         Yes         INPUT     
i_map[15:8]    No     No          Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[6:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:7] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[14:0]    Yes    Yes         Yes         
temp[31:15]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_0
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe4_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.42 100.00 --      86.25 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.42 100.00 --      86.25 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_0

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_0
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   207     86.25   
Total Bits 0->1 120   104     86.67   
Total Bits 1->0 120   103     85.83   

                              
Ports          8   6   75.00  
Port Bits      166 134 80.72  
Port Bits 0->1 83  67  80.72  
Port Bits 1->0 83  67  80.72  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[7:0]     Yes    Yes         Yes         INPUT     
i_map[15:8]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[7:0]     Yes    Yes         Yes         OUTPUT    
o_map[15:8]    No     No          No          OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[3:0]     Yes    Yes         Yes         
temp[4]       No     No          Yes         
temp[31:5]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_0
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe4_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.42 100.00 --      86.25 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.42 100.00 --      86.25 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_1

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_1
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   207     86.25   
Total Bits 0->1 120   104     86.67   
Total Bits 1->0 120   103     85.83   

                              
Ports          8   6   75.00  
Port Bits      166 134 80.72  
Port Bits 0->1 83  67  80.72  
Port Bits 1->0 83  67  80.72  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[7:0]     Yes    Yes         Yes         INPUT     
i_map[15:8]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[7:0]     Yes    Yes         Yes         OUTPUT    
o_map[15:8]    No     No          No          OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          Yes         
temp[31:1]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_1
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe4_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.42 100.00 --      86.25 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.42 100.00 --      86.25 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_4

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_4
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   207     86.25   
Total Bits 0->1 120   104     86.67   
Total Bits 1->0 120   103     85.83   

                              
Ports          8   6   75.00  
Port Bits      166 134 80.72  
Port Bits 0->1 83  67  80.72  
Port Bits 1->0 83  67  80.72  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[7:0]     Yes    Yes         Yes         INPUT     
i_map[15:8]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[7:0]     Yes    Yes         Yes         OUTPUT    
o_map[15:8]    No     No          No          OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          Yes         
temp[31:1]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_4
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe4_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.42 100.00 --      86.25 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.42 100.00 --      86.25 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_6

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_6
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   207     86.25   
Total Bits 0->1 120   104     86.67   
Total Bits 1->0 120   103     85.83   

                              
Ports          8   6   75.00  
Port Bits      166 134 80.72  
Port Bits 0->1 83  67  80.72  
Port Bits 1->0 83  67  80.72  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[7:0]     Yes    Yes         Yes         INPUT     
i_map[15:8]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[7:0]     Yes    Yes         Yes         OUTPUT    
o_map[15:8]    No     No          No          OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          Yes         
temp[31:1]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_6
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe4_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.56 100.00 --      86.67 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.56 100.00 --      86.67 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_3

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_3
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   208     86.67   
Total Bits 0->1 120   104     86.67   
Total Bits 1->0 120   104     86.67   

                              
Ports          8   6   75.00  
Port Bits      166 134 80.72  
Port Bits 0->1 83  67  80.72  
Port Bits 1->0 83  67  80.72  

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[7:0]     Yes    Yes         Yes         INPUT     
i_map[15:8]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[7:0]     Yes    Yes         Yes         OUTPUT    
o_map[15:8]    No     No          No          OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_3
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe4_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.56 100.00 --      86.67 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.56 100.00 --      86.67 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_7

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_7
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   208     86.67   
Total Bits 0->1 120   104     86.67   
Total Bits 1->0 120   104     86.67   

                              
Ports          8   6   75.00  
Port Bits      166 134 80.72  
Port Bits 0->1 83  67  80.72  
Port Bits 1->0 83  67  80.72  

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[7:0]     Yes    Yes         Yes         INPUT     
i_map[15:8]    No     No          No          INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[7:0]     Yes    Yes         Yes         OUTPUT    
o_map[15:8]    No     No          No          OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe4_7
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe5_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.69 100.00 --      87.08 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.69 100.00 --      87.08 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_5

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_5
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   209     87.08   
Total Bits 0->1 120   116     96.67   
Total Bits 1->0 120   93      77.50   

                              
Ports          8   5   62.50  
Port Bits      166 151 90.96  
Port Bits 0->1 83  79  95.18  
Port Bits 1->0 83  72  86.75  

                              
Signals          3  2  66.67  
Signal Bits      74 58 78.38  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 21 56.76  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[2:0]     Yes    Yes         Yes         INPUT     
i_map[3]       No     No          No          INPUT     
i_map[4]       Yes    Yes         Yes         INPUT     
i_map[5]       No     No          No          INPUT     
i_map[15:6]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[2:0]     Yes    Yes         Yes         OUTPUT    
o_map[3]       No     No          No          OUTPUT    
o_map[4]       Yes    Yes         Yes         OUTPUT    
o_map[5]       No     No          No          OUTPUT    
o_map[15:6]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[5:0]     Yes    Yes         Yes         
temp[6]       No     No          Yes         
temp[16:7]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_5
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe0_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.83 100.00 --      87.50 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.83 100.00 --      87.50 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_5

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_5
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   210     87.50   
Total Bits 0->1 120   116     96.67   
Total Bits 1->0 120   94      78.33   

                              
Ports          8   5   62.50  
Port Bits      166 153 92.17  
Port Bits 0->1 83  80  96.39  
Port Bits 1->0 83  73  87.95  

                              
Signals          3  2  66.67  
Signal Bits      74 57 77.03  
Signal Bits 0->1 37 36 97.30  
Signal Bits 1->0 37 21 56.76  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[6:0]     Yes    Yes         Yes         INPUT     
i_map[7]       No     No          No          INPUT     
i_map[15:8]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[6:0]     Yes    Yes         Yes         OUTPUT    
o_map[7]       No     No          No          OUTPUT    
o_map[15:8]    Yes    Yes         Yes         OUTPUT    
o_result[5:0]  Yes    Yes         Yes         OUTPUT    
o_result[6]    No     No          No          OUTPUT    
o_result[8:7]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[13:0]    Yes    Yes         Yes         
temp[14]      No     No          No          
temp[16:15]   Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_5
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe5_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.83 100.00 --      87.50 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.83 100.00 --      87.50 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_0

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_0
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   210     87.50   
Total Bits 0->1 120   116     96.67   
Total Bits 1->0 120   94      78.33   

                              
Ports          8   5   62.50  
Port Bits      166 151 90.96  
Port Bits 0->1 83  79  95.18  
Port Bits 1->0 83  72  86.75  

                              
Signals          3  2  66.67  
Signal Bits      74 59 79.73  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 22 59.46  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[2:0]     Yes    Yes         Yes         INPUT     
i_map[3]       No     No          No          INPUT     
i_map[4]       Yes    Yes         Yes         INPUT     
i_map[5]       No     No          No          INPUT     
i_map[15:6]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[2:0]     Yes    Yes         Yes         OUTPUT    
o_map[3]       No     No          No          OUTPUT    
o_map[4]       Yes    Yes         Yes         OUTPUT    
o_map[5]       No     No          No          OUTPUT    
o_map[15:6]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[16:0]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_0
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe5_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.83 100.00 --      87.50 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.83 100.00 --      87.50 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_2

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_2
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   210     87.50   
Total Bits 0->1 120   116     96.67   
Total Bits 1->0 120   94      78.33   

                              
Ports          8   5   62.50  
Port Bits      166 151 90.96  
Port Bits 0->1 83  79  95.18  
Port Bits 1->0 83  72  86.75  

                              
Signals          3  2  66.67  
Signal Bits      74 59 79.73  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 22 59.46  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[2:0]     Yes    Yes         Yes         INPUT     
i_map[3]       No     No          No          INPUT     
i_map[4]       Yes    Yes         Yes         INPUT     
i_map[5]       No     No          No          INPUT     
i_map[15:6]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[2:0]     Yes    Yes         Yes         OUTPUT    
o_map[3]       No     No          No          OUTPUT    
o_map[4]       Yes    Yes         Yes         OUTPUT    
o_map[5]       No     No          No          OUTPUT    
o_map[15:6]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[16:0]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_2
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe5_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.83 100.00 --      87.50 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.83 100.00 --      87.50 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_4

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_4
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   210     87.50   
Total Bits 0->1 120   116     96.67   
Total Bits 1->0 120   94      78.33   

                              
Ports          8   5   62.50  
Port Bits      166 151 90.96  
Port Bits 0->1 83  79  95.18  
Port Bits 1->0 83  72  86.75  

                              
Signals          3  2  66.67  
Signal Bits      74 59 79.73  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 22 59.46  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[2:0]     Yes    Yes         Yes         INPUT     
i_map[3]       No     No          No          INPUT     
i_map[4]       Yes    Yes         Yes         INPUT     
i_map[5]       No     No          No          INPUT     
i_map[15:6]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[2:0]     Yes    Yes         Yes         OUTPUT    
o_map[3]       No     No          No          OUTPUT    
o_map[4]       Yes    Yes         Yes         OUTPUT    
o_map[5]       No     No          No          OUTPUT    
o_map[15:6]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[16:0]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_4
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe1_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.11 100.00 --      88.33 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.11 100.00 --      88.33 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_3

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_3
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   212     88.33   
Total Bits 0->1 120   118     98.33   
Total Bits 1->0 120   94      78.33   

                              
Ports          8   5   62.50  
Port Bits      166 155 93.37  
Port Bits 0->1 83  81  97.59  
Port Bits 1->0 83  74  89.16  

                              
Signals          3  2  66.67  
Signal Bits      74 57 77.03  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 20 54.05  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[15:2]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[15:2]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       Yes    Yes         Yes         
temp[1]       No     No          Yes         
temp[2]       Yes    Yes         Yes         
temp[3]       No     No          Yes         
temp[16:4]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_3
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe0_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.39 100.00 --      89.17 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.39 100.00 --      89.17 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_1

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_1
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   214     89.17   
Total Bits 0->1 120   118     98.33   
Total Bits 1->0 120   96      80.00   

                              
Ports          8   5   62.50  
Port Bits      166 155 93.37  
Port Bits 0->1 83  81  97.59  
Port Bits 1->0 83  74  89.16  

                              
Signals          3  2  66.67  
Signal Bits      74 59 79.73  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 22 59.46  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[6:0]     Yes    Yes         Yes         INPUT     
i_map[7]       No     No          No          INPUT     
i_map[15:8]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[6:0]     Yes    Yes         Yes         OUTPUT    
o_map[7]       No     No          No          OUTPUT    
o_map[15:8]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[16:0]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_1
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe1_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.39 100.00 --      89.17 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.39 100.00 --      89.17 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_2

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_2
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   214     89.17   
Total Bits 0->1 120   118     98.33   
Total Bits 1->0 120   96      80.00   

                              
Ports          8   5   62.50  
Port Bits      166 155 93.37  
Port Bits 0->1 83  81  97.59  
Port Bits 1->0 83  74  89.16  

                              
Signals          3  2  66.67  
Signal Bits      74 59 79.73  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 22 59.46  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[15:2]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[15:2]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[16:0]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_2
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe7_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.67 100.00 --      90.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.67 100.00 --      90.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_3

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_3
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   216     90.00   
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   96      80.00   

                              
Ports          8   7   87.50  
Port Bits      166 158 95.18  
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  75  90.36  

                              
Signals          3  2  66.67  
Signal Bits      74 58 78.38  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 21 56.76  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[7:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:8] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[15:0]    Yes    Yes         Yes         
temp[31:16]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_3
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe6_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.94 100.00 --      90.83 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.94 100.00 --      90.83 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_0

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_0
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   218     90.83   
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   98      81.67   

                              
Ports          8   7   87.50  
Port Bits      166 159 95.78  
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  76  91.57  

                              
Signals          3  2  66.67  
Signal Bits      74 59 79.73  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 22 59.46  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[16:0]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_0
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe6_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.94 100.00 --      90.83 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.94 100.00 --      90.83 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_1

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_1
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   218     90.83   
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   98      81.67   

                              
Ports          8   7   87.50  
Port Bits      166 159 95.78  
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  76  91.57  

                              
Signals          3  2  66.67  
Signal Bits      74 59 79.73  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 22 59.46  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[16:0]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_1
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe6_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.94 100.00 --      90.83 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.94 100.00 --      90.83 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_5

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_5
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   218     90.83   
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   98      81.67   

                              
Ports          8   7   87.50  
Port Bits      166 159 95.78  
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  76  91.57  

                              
Signals          3  2  66.67  
Signal Bits      74 59 79.73  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 22 59.46  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[16:0]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_5
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe7_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.94 100.00 --      90.83 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.94 100.00 --      90.83 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_1

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_1
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   218     90.83   
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   98      81.67   

                              
Ports          8   7   87.50  
Port Bits      166 159 95.78  
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  76  91.57  

                              
Signals          3  2  66.67  
Signal Bits      74 59 79.73  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 22 59.46  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[16:0]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_1
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe7_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.94 100.00 --      90.83 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.94 100.00 --      90.83 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_4

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_4
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   218     90.83   
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   98      81.67   

                              
Ports          8   7   87.50  
Port Bits      166 159 95.78  
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  76  91.57  

                              
Signals          3  2  66.67  
Signal Bits      74 59 79.73  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 22 59.46  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[16:0]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_4
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe7_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.94 100.00 --      90.83 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 96.94 100.00 --      90.83 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_5

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_5
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   218     90.83   
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   98      81.67   

                              
Ports          8   7   87.50  
Port Bits      166 159 95.78  
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  76  91.57  

                              
Signals          3  2  66.67  
Signal Bits      74 59 79.73  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 22 59.46  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[8:0]  Yes    Yes         Yes         OUTPUT    
o_result[15:9] No     No          Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[16:0]    Yes    Yes         Yes         
temp[31:17]   No     No          Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_5
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe3_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 97.78 100.00 --      93.33 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 97.78 100.00 --      93.33 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_6

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_6
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   224     93.33   
Total Bits 0->1 120   113     94.17   
Total Bits 1->0 120   111     92.50   

                              
Ports          8   6   75.00  
Port Bits      166 154 92.77  
Port Bits 0->1 83  77  92.77  
Port Bits 1->0 83  77  92.77  

                              
Signals          3  2  66.67  
Signal Bits      74 70 94.59  
Signal Bits 0->1 37 36 97.30  
Signal Bits 1->0 37 34 91.89  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[1:0]     Yes    Yes         Yes         INPUT     
i_map[2]       No     No          No          INPUT     
i_map[3]       Yes    Yes         Yes         INPUT     
i_map[4]       No     No          No          INPUT     
i_map[5]       Yes    Yes         Yes         INPUT     
i_map[6]       No     No          No          INPUT     
i_map[15:7]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[1:0]     Yes    Yes         Yes         OUTPUT    
o_map[2]       No     No          No          OUTPUT    
o_map[3]       Yes    Yes         Yes         OUTPUT    
o_map[4]       No     No          No          OUTPUT    
o_map[5]       Yes    Yes         Yes         OUTPUT    
o_map[6]       No     No          No          OUTPUT    
o_map[15:7]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          No          
temp[2:1]     Yes    Yes         Yes         
temp[4:3]     No     No          Yes         
temp[31:5]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_6
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe3_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 97.92 100.00 --      93.75 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 97.92 100.00 --      93.75 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_3

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_3
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   225     93.75   
Total Bits 0->1 120   113     94.17   
Total Bits 1->0 120   112     93.33   

                              
Ports          8   6   75.00  
Port Bits      166 154 92.77  
Port Bits 0->1 83  77  92.77  
Port Bits 1->0 83  77  92.77  

                              
Signals          3  2  66.67  
Signal Bits      74 71 95.95  
Signal Bits 0->1 37 36 97.30  
Signal Bits 1->0 37 35 94.59  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[1:0]     Yes    Yes         Yes         INPUT     
i_map[2]       No     No          No          INPUT     
i_map[3]       Yes    Yes         Yes         INPUT     
i_map[4]       No     No          No          INPUT     
i_map[5]       Yes    Yes         Yes         INPUT     
i_map[6]       No     No          No          INPUT     
i_map[15:7]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[1:0]     Yes    Yes         Yes         OUTPUT    
o_map[2]       No     No          No          OUTPUT    
o_map[3]       Yes    Yes         Yes         OUTPUT    
o_map[4]       No     No          No          OUTPUT    
o_map[5]       Yes    Yes         Yes         OUTPUT    
o_map[6]       No     No          No          OUTPUT    
o_map[15:7]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          No          
temp[1]       Yes    Yes         Yes         
temp[2]       No     No          Yes         
temp[31:3]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_3
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe3_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.19 100.00 --      94.58 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.19 100.00 --      94.58 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_7

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_7
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   227     94.58   
Total Bits 0->1 120   114     95.00   
Total Bits 1->0 120   113     94.17   

                              
Ports          8   6   75.00  
Port Bits      166 154 92.77  
Port Bits 0->1 83  77  92.77  
Port Bits 1->0 83  77  92.77  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[1:0]     Yes    Yes         Yes         INPUT     
i_map[2]       No     No          No          INPUT     
i_map[3]       Yes    Yes         Yes         INPUT     
i_map[4]       No     No          No          INPUT     
i_map[5]       Yes    Yes         Yes         INPUT     
i_map[6]       No     No          No          INPUT     
i_map[15:7]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[1:0]     Yes    Yes         Yes         OUTPUT    
o_map[2]       No     No          No          OUTPUT    
o_map[3]       Yes    Yes         Yes         OUTPUT    
o_map[4]       No     No          No          OUTPUT    
o_map[5]       Yes    Yes         Yes         OUTPUT    
o_map[6]       No     No          No          OUTPUT    
o_map[15:7]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[2:0]     Yes    Yes         Yes         
temp[3]       No     No          Yes         
temp[31:4]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe3_7
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe5_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.47 100.00 --      95.42 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.47 100.00 --      95.42 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_6

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_6
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   229     95.42   
Total Bits 0->1 120   116     96.67   
Total Bits 1->0 120   113     94.17   

                              
Ports          8   5   62.50  
Port Bits      166 157 94.58  
Port Bits 0->1 83  79  95.18  
Port Bits 1->0 83  78  93.98  

                              
Signals          3  2  66.67  
Signal Bits      74 72 97.30  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 35 94.59  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[2:0]     Yes    Yes         Yes         INPUT     
i_map[3]       No     No          No          INPUT     
i_map[4]       Yes    Yes         Yes         INPUT     
i_map[5]       No     No          No          INPUT     
i_map[15:6]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[2:0]     Yes    Yes         Yes         OUTPUT    
o_map[3]       No     No          No          OUTPUT    
o_map[4]       Yes    Yes         Yes         OUTPUT    
o_map[5]       No     No          No          OUTPUT    
o_map[15:6]    Yes    Yes         Yes         OUTPUT    
o_result[0]    No     No          Yes         OUTPUT    
o_result[15:1] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[6:0]     Yes    Yes         Yes         
temp[8:7]     No     No          Yes         
temp[31:9]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_6
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe5_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.75 100.00 --      96.25 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.75 100.00 --      96.25 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_3

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_3
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   231     96.25   
Total Bits 0->1 120   116     96.67   
Total Bits 1->0 120   115     95.83   

                              
Ports          8   6   75.00  
Port Bits      166 158 95.18  
Port Bits 0->1 83  79  95.18  
Port Bits 1->0 83  79  95.18  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[2:0]     Yes    Yes         Yes         INPUT     
i_map[3]       No     No          No          INPUT     
i_map[4]       Yes    Yes         Yes         INPUT     
i_map[5]       No     No          No          INPUT     
i_map[15:6]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[2:0]     Yes    Yes         Yes         OUTPUT    
o_map[3]       No     No          No          OUTPUT    
o_map[4]       Yes    Yes         Yes         OUTPUT    
o_map[5]       No     No          No          OUTPUT    
o_map[15:6]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[2:0]     Yes    Yes         Yes         
temp[3]       No     No          Yes         
temp[31:4]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_3
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe5_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.75 100.00 --      96.25 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.75 100.00 --      96.25 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_7

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_7
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   231     96.25   
Total Bits 0->1 120   116     96.67   
Total Bits 1->0 120   115     95.83   

                              
Ports          8   6   75.00  
Port Bits      166 158 95.18  
Port Bits 0->1 83  79  95.18  
Port Bits 1->0 83  79  95.18  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[2:0]     Yes    Yes         Yes         INPUT     
i_map[3]       No     No          No          INPUT     
i_map[4]       Yes    Yes         Yes         INPUT     
i_map[5]       No     No          No          INPUT     
i_map[15:6]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[2:0]     Yes    Yes         Yes         OUTPUT    
o_map[3]       No     No          No          OUTPUT    
o_map[4]       Yes    Yes         Yes         OUTPUT    
o_map[5]       No     No          No          OUTPUT    
o_map[15:6]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[2:0]     Yes    Yes         Yes         
temp[3]       No     No          Yes         
temp[31:4]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_7
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe5_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.89 100.00 --      96.67 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 98.89 100.00 --      96.67 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_1

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_1
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   232     96.67   
Total Bits 0->1 120   116     96.67   
Total Bits 1->0 120   116     96.67   

                              
Ports          8   6   75.00  
Port Bits      166 158 95.18  
Port Bits 0->1 83  79  95.18  
Port Bits 1->0 83  79  95.18  

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[2:0]     Yes    Yes         Yes         INPUT     
i_map[3]       No     No          No          INPUT     
i_map[4]       Yes    Yes         Yes         INPUT     
i_map[5]       No     No          No          INPUT     
i_map[15:6]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[2:0]     Yes    Yes         Yes         OUTPUT    
o_map[3]       No     No          No          OUTPUT    
o_map[4]       Yes    Yes         Yes         OUTPUT    
o_map[5]       No     No          No          OUTPUT    
o_map[15:6]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe5_1
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe1_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.03 100.00 --      97.08 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.03 100.00 --      97.08 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_6

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_6
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   233     97.08   
Total Bits 0->1 120   118     98.33   
Total Bits 1->0 120   115     95.83   

                              
Ports          8   5   62.50  
Port Bits      166 161 96.99  
Port Bits 0->1 83  81  97.59  
Port Bits 1->0 83  80  96.39  

                              
Signals          3  2  66.67  
Signal Bits      74 72 97.30  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 35 94.59  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[15:2]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[15:2]    Yes    Yes         Yes         OUTPUT    
o_result[4:0]  Yes    Yes         Yes         OUTPUT    
o_result[5]    No     No          Yes         OUTPUT    
o_result[15:6] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[5:0]     Yes    Yes         Yes         
temp[6]       No     No          Yes         
temp[12:7]    Yes    Yes         Yes         
temp[13]      No     No          Yes         
temp[31:14]   Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_6
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe0_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.17 100.00 --      97.50 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.17 100.00 --      97.50 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_6

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_6
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   234     97.50   
Total Bits 0->1 120   118     98.33   
Total Bits 1->0 120   116     96.67   

                              
Ports          8   6   75.00  
Port Bits      166 162 97.59  
Port Bits 0->1 83  81  97.59  
Port Bits 1->0 83  81  97.59  

                              
Signals          3  2  66.67  
Signal Bits      74 72 97.30  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 35 94.59  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[6:0]     Yes    Yes         Yes         INPUT     
i_map[7]       No     No          No          INPUT     
i_map[15:8]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[6:0]     Yes    Yes         Yes         OUTPUT    
o_map[7]       No     No          No          OUTPUT    
o_map[15:8]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          Yes         
temp[2:1]     Yes    Yes         Yes         
temp[3]       No     No          Yes         
temp[31:4]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_6
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe1_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.17 100.00 --      97.50 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.17 100.00 --      97.50 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_7

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_7
                Total Covered Percent 
Totals          11    7       63.64   
Total Bits      240   234     97.50   
Total Bits 0->1 120   118     98.33   
Total Bits 1->0 120   116     96.67   

                              
Ports          8   5   62.50  
Port Bits      166 161 96.99  
Port Bits 0->1 83  81  97.59  
Port Bits 1->0 83  80  96.39  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[15:2]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[15:2]    Yes    Yes         Yes         OUTPUT    
o_result[3:0]  Yes    Yes         Yes         OUTPUT    
o_result[4]    No     No          Yes         OUTPUT    
o_result[15:5] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[11:0]    Yes    Yes         Yes         
temp[12]      No     No          Yes         
temp[31:13]   Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_7
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe6_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.17 100.00 --      97.50 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.17 100.00 --      97.50 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_7

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_7
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   234     97.50   
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   114     95.00   

                              
Ports          8   7   87.50  
Port Bits      166 163 98.19  
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  80  96.39  

                              
Signals          3  2  66.67  
Signal Bits      74 71 95.95  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 34 91.89  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[0]    No     No          Yes         OUTPUT    
o_result[3:1]  Yes    Yes         Yes         OUTPUT    
o_result[4]    No     No          Yes         OUTPUT    
o_result[5]    Yes    Yes         Yes         OUTPUT    
o_result[6]    No     No          Yes         OUTPUT    
o_result[15:7] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[7:0]     Yes    Yes         Yes         
temp[8]       No     No          Yes         
temp[11:9]    Yes    Yes         Yes         
temp[12]      No     No          Yes         
temp[13]      Yes    Yes         Yes         
temp[14]      No     No          Yes         
temp[31:15]   Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_7
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe0_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.31 100.00 --      97.92 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.31 100.00 --      97.92 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_0

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_0
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   235     97.92   
Total Bits 0->1 120   117     97.50   
Total Bits 1->0 120   118     98.33   

                              
Ports          8   6   75.00  
Port Bits      166 161 96.99  
Port Bits 0->1 83  80  96.39  
Port Bits 1->0 83  81  97.59  

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[1:0]     Yes    Yes         Yes         INPUT     
i_map[2]       No     Yes         No          INPUT     
i_map[6:3]     Yes    Yes         Yes         INPUT     
i_map[7]       No     No          No          INPUT     
i_map[15:8]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[6:0]     Yes    Yes         Yes         OUTPUT    
o_map[7]       No     No          No          OUTPUT    
o_map[15:8]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_0
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe0_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.31 100.00 --      97.92 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.31 100.00 --      97.92 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_4

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_4
                Total Covered Percent 
Totals          11    8       72.73   
Total Bits      240   235     97.92   
Total Bits 0->1 120   118     98.33   
Total Bits 1->0 120   117     97.50   

                              
Ports          8   6   75.00  
Port Bits      166 162 97.59  
Port Bits 0->1 83  81  97.59  
Port Bits 1->0 83  81  97.59  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[6:0]     Yes    Yes         Yes         INPUT     
i_map[7]       No     No          No          INPUT     
i_map[15:8]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[6:0]     Yes    Yes         Yes         OUTPUT    
o_map[7]       No     No          No          OUTPUT    
o_map[15:8]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[0]       No     No          Yes         
temp[31:1]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_4
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe0_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.44 100.00 --      98.33 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.44 100.00 --      98.33 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_3

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_3
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   236     98.33   
Total Bits 0->1 120   118     98.33   
Total Bits 1->0 120   118     98.33   

                              
Ports          8   6   75.00  
Port Bits      166 162 97.59  
Port Bits 0->1 83  81  97.59  
Port Bits 1->0 83  81  97.59  

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[6:0]     Yes    Yes         Yes         INPUT     
i_map[7]       No     No          No          INPUT     
i_map[15:8]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[6:0]     Yes    Yes         Yes         OUTPUT    
o_map[7]       No     No          No          OUTPUT    
o_map[15:8]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_3
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe0_7
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.44 100.00 --      98.33 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.44 100.00 --      98.33 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_7

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_7
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   236     98.33   
Total Bits 0->1 120   118     98.33   
Total Bits 1->0 120   118     98.33   

                              
Ports          8   6   75.00  
Port Bits      166 162 97.59  
Port Bits 0->1 83  81  97.59  
Port Bits 1->0 83  81  97.59  

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[6:0]     Yes    Yes         Yes         INPUT     
i_map[7]       No     No          No          INPUT     
i_map[15:8]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[6:0]     Yes    Yes         Yes         OUTPUT    
o_map[7]       No     No          No          OUTPUT    
o_map[15:8]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe0_7
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe1_5
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.44 100.00 --      98.33 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.44 100.00 --      98.33 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_5

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_5
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   236     98.33   
Total Bits 0->1 120   118     98.33   
Total Bits 1->0 120   118     98.33   

                              
Ports          8   6   75.00  
Port Bits      166 162 97.59  
Port Bits 0->1 83  81  97.59  
Port Bits 1->0 83  81  97.59  

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[0]       Yes    Yes         Yes         INPUT     
i_map[1]       No     No          No          INPUT     
i_map[15:2]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[0]       Yes    Yes         Yes         OUTPUT    
o_map[1]       No     No          No          OUTPUT    
o_map[15:2]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe1_5
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe7_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.72 100.00 --      99.17 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 99.72 100.00 --      99.17 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_6

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_6
                Total Covered Percent 
Totals          11    9       81.82   
Total Bits      240   238     99.17   
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   118     98.33   

                              
Ports          8   7   87.50  
Port Bits      166 165 99.40  
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  82  98.80  

                              
Signals          3  2  66.67  
Signal Bits      74 73 98.65  
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 36 97.30  

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[4:0]  Yes    Yes         Yes         OUTPUT    
o_result[5]    No     No          Yes         OUTPUT    
o_result[15:6] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[12:0]    Yes    Yes         Yes         
temp[13]      No     No          Yes         
temp[31:14]   Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_6
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe6_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_2

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_2
                Total Covered Percent 
Totals          11    11      100.00  
Total Bits      240   240     100.00  
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   120     100.00  

                              
Ports          8   8   100.00 
Port Bits      166 166 100.00 
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  83  100.00 

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_2
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe6_3
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_3

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_3
                Total Covered Percent 
Totals          11    11      100.00  
Total Bits      240   240     100.00  
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   120     100.00  

                              
Ports          8   8   100.00 
Port Bits      166 166 100.00 
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  83  100.00 

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_3
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe6_4
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_4

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_4
                Total Covered Percent 
Totals          11    11      100.00  
Total Bits      240   240     100.00  
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   120     100.00  

                              
Ports          8   8   100.00 
Port Bits      166 166 100.00 
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  83  100.00 

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_4
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe6_6
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_6

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_6
                Total Covered Percent 
Totals          11    11      100.00  
Total Bits      240   240     100.00  
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   120     100.00  

                              
Ports          8   8   100.00 
Port Bits      166 166 100.00 
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  83  100.00 

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe6_6
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : npu_tb.u_NPU.pe_array.pe7_2
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 100.00 --     100.00 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 100.00 --     100.00 --     100.00 pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 96.31 100.00 --      88.94 --     100.00 pe_array 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_2

             Line No.   Total   Covered  Percent
TOTAL                       29       29   100.00
ALWAYS             44        7        7   100.00
ALWAYS             56        5        5   100.00
ALWAYS             66        5        5   100.00
ALWAYS             76        5        5   100.00
ALWAYS             86        7        7   100.00

43                      begin
44         1/1              if(~rst_n)
45         1/1                  work_enable <= 1'd0;
46         1/1              else if(i_clear)
47         1/1                  work_enable <= 1'b1;
48         1/1              else if(work_cnt == 4'd15)
49         1/1                  work_enable <= 1'b0;
50                          else
51         1/1                  work_enable <= work_enable;
52                      end
53                      
54                      always@(posedge clk or negedge rst_n)
55                      begin
56         1/1              if(~rst_n)
57         1/1                  work_cnt <= 4'd0;
58         1/1              else if(work_enable)
59         1/1                  work_cnt <= work_cnt + 1'b1;
60                          else
61         1/1                  work_cnt <= 4'd0;
62                      end
63                      
64                      always@(posedge clk or negedge rst_n)
65                      begin
66         1/1              if(~rst_n)
67         1/1                  o_weight <= 16'd0;
68         1/1              else if(work_enable)
69         1/1                  o_weight <= i_weight;
70                          else
71         1/1                  o_weight <= 16'd0;
72                      end
73                      
74                      always@(posedge clk or negedge rst_n)
75                      begin
76         1/1              if(~rst_n)
77         1/1                  o_map <= 16'd0;
78         1/1              else if(work_enable)
79         1/1                  o_map <= i_map;
80                          else
81         1/1                  o_map <= 16'd0;
82                      end
83                      
84                      always@(posedge clk or negedge rst_n)
85                      begin
86         1/1              if(~rst_n)
87         1/1                  temp <= 32'd0;
88         1/1              else if(i_clear)
89         1/1                  temp <= 32'd0;
90         1/1              else if(work_enable)
91         1/1                  temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
92                          else
93         1/1                  temp <= temp;

-------------------------------------------------------------------------------
Toggle Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_2
                Total Covered Percent 
Totals          11    11      100.00  
Total Bits      240   240     100.00  
Total Bits 0->1 120   120     100.00  
Total Bits 1->0 120   120     100.00  

                              
Ports          8   8   100.00 
Port Bits      166 166 100.00 
Port Bits 0->1 83  83  100.00 
Port Bits 1->0 83  83  100.00 

                              
Signals          3  3  100.00 
Signal Bits      74 74 100.00 
Signal Bits 0->1 37 37 100.00 
Signal Bits 1->0 37 37 100.00 

Port Details
               Toggle Toggle 1->0 Toggle 0->1 Direction 
clk            Yes    Yes         Yes         INPUT     
rst_n          Yes    Yes         Yes         INPUT     
i_clear        Yes    Yes         Yes         INPUT     
i_weight[15:0] Yes    Yes         Yes         INPUT     
i_map[15:0]    Yes    Yes         Yes         INPUT     
o_weight[15:0] Yes    Yes         Yes         OUTPUT    
o_map[15:0]    Yes    Yes         Yes         OUTPUT    
o_result[15:0] Yes    Yes         Yes         OUTPUT    

Signal Details
              Toggle Toggle 1->0 Toggle 0->1 
work_cnt[3:0] Yes    Yes         Yes         
work_enable   Yes    Yes         Yes         
temp[31:0]    Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : npu_tb.u_NPU.pe_array.pe7_2
         Line No. Total Covered Percent 
Branches          17    17      100.00  
IF       44       4     4       100.00  
IF       56       3     3       100.00  
IF       66       3     3       100.00  
IF       76       3     3       100.00  
IF       86       4     4       100.00  


44             if(~rst_n)
               -1-  
45                 work_enable <= 1'd0;
                   ==>
46             else if(i_clear)
                    -2-  
47                 work_enable <= 1'b1;
                   ==>
48             else if(work_cnt == 4'd15)
                    -3-  
49                 work_enable <= 1'b0;
                   ==>
50             else
51                 work_enable <= work_enable;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


56             if(~rst_n)
               -1-  
57                 work_cnt <= 4'd0;
                   ==>
58             else if(work_enable)
                    -2-  
59                 work_cnt <= work_cnt + 1'b1;
                   ==>
60             else
61                 work_cnt <= 4'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


66             if(~rst_n)
               -1-  
67                 o_weight <= 16'd0;
                   ==>
68             else if(work_enable)
                    -2-  
69                 o_weight <= i_weight;
                   ==>
70             else
71                 o_weight <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


76             if(~rst_n)
               -1-  
77                 o_map <= 16'd0;
                   ==>
78             else if(work_enable)
                    -2-  
79                 o_map <= i_map;
                   ==>
80             else
81                 o_map <= 16'd0;
                   ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


86             if(~rst_n)
               -1-  
87                 temp <= 32'd0;
                   ==>
88             else if(i_clear)
                    -2-  
89                 temp <= 32'd0;
                   ==>
90             else if(work_enable)
                    -3-  
91                 temp <= temp + ({{16{i_weight[15]}},i_weight} * {{16{i_map[15]}},i_map});
                   ==>
92             else
93                 temp <= temp;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   -   Covered 
0   0   1   Covered 
0   0   0   Covered 


